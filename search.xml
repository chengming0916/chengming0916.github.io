<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hexo 博客配置</title>
    <url>/2021/10/22/Hexo%E5%8D%9A%E5%AE%A2/Hexo-%E5%8D%9A%E5%AE%A2%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><p>本地安装 Git NodeJS</p>
<p>检查环境</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git -v</span><br><span class="line"></span><br><span class="line">node -v</span><br><span class="line"></span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure>

<p>切换镜像站,具体参考<a href="https://zhuanlan.zhihu.com/p/1903405138527384159">NPM配置国内源</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://registry.npmmirror.com</span><br></pre></td></tr></table></figure>

<h2 id="Hexo环境搭建"><a href="#Hexo环境搭建" class="headerlink" title="Hexo环境搭建"></a>Hexo环境搭建</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pnpm install -g hexo-cli                <span class="comment"># 安装Hexo cli工具</span></span><br><span class="line"></span><br><span class="line">hexo init                            <span class="comment"># 初始化博客环境</span></span><br><span class="line">npm install                          <span class="comment"># 安装依赖库</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 插件</span></span><br><span class="line">npm install hexo-asset-img           <span class="comment"># 头像</span></span><br><span class="line">npm install hexo-auto-category       <span class="comment"># 自动分类</span></span><br><span class="line">npm install hexo-generator-searchdb  <span class="comment"># 生成搜索数据库</span></span><br><span class="line">npm install hexo-backlink            <span class="comment"># Obsdian链接转换</span></span><br><span class="line">npm install hexo-deploy-git          <span class="comment"># git自动发布</span></span><br><span class="line">npm install hexo-theme-next          <span class="comment"># hexo NexT主题</span></span><br><span class="line">npm install hexo-server              <span class="comment"># hexo服务器</span></span><br><span class="line">npm install hexo-next-giscus         <span class="comment"># giscus评论组件</span></span><br><span class="line">npm install hexo-wordcount           <span class="comment"># 字数统计</span></span><br></pre></td></tr></table></figure>

<h2 id="Hexo-配置"><a href="#Hexo-配置" class="headerlink" title="Hexo 配置"></a>Hexo 配置</h2><p>参考<a href="https://hexo.io/zh-cn/docs/configuration">官方文档</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line">theme: next     # 配置主题next</span><br><span class="line"></span><br><span class="line">giscus:         # 评论配置</span><br><span class="line">  enable: true</span><br><span class="line">  repo:  # Github repository name</span><br><span class="line">  repo_id: # Github repository id</span><br><span class="line">  category: # Github discussion category</span><br><span class="line">  category_id: # Github discussion category id</span><br><span class="line">  # Available values: pathname | url | title | og:title</span><br><span class="line">  mapping: title</span><br><span class="line">  # Available values: 0 | 1</span><br><span class="line">  reactions_enabled: 1</span><br><span class="line">   # Available values: 0 | 1</span><br><span class="line">  emit_metadata: 1</span><br><span class="line">  # Available values: light | light_high_contrast | light_protanopia | light_tritanopia | dark | dark_high_contrast | dark_protanopia | dark_tritanopia | dark_dimmed | preferred_color_scheme | transparent_dark | noborder_light | noborder_dark | noborder_gray | cobalt | purple_dark</span><br><span class="line">  theme: light</span><br><span class="line">  # Available values: en | zh-CN</span><br><span class="line">  lang: zh-CN</span><br><span class="line">  # Place the comment box above the comments</span><br><span class="line">  input_position: bottom</span><br><span class="line">  # Load the comments lazily</span><br><span class="line">  loading: lazy</span><br><span class="line">  </span><br><span class="line">deploy:   # 发布配置</span><br><span class="line">  - type: git</span><br><span class="line">    repo:        # 仓库发布地址</span><br><span class="line">    branch: main # 发布分支</span><br><span class="line">    name:        # git用户名 git config user.name &lt;username&gt;</span><br><span class="line">    email:       # git邮箱 git config user.email &lt;email&gt;</span><br><span class="line">...</span><br></pre></td></tr></table></figure>

<p><strong>注意</strong>： 评论部分需要借助Github Discussions, 参考<a href="Hexo%E5%8D%9A%E5%AE%A2%E9%85%8D%E7%BD%AEGiscus%E8%AF%84%E8%AE%BA.md">Hexo博客配置Giscus评论</a></p>
<h2 id="Hexo主题配置"><a href="#Hexo主题配置" class="headerlink" title="Hexo主题配置"></a>Hexo主题配置</h2><p>安装主题后从<code>npm_modules/&lt;主题名&gt;/</code>文件夹中复制<code>_config.yml</code>到博客根目录并重命名为<code>_config.next.yml</code>,当博客deploy时回自动应用主题配置，一下主题修改都基于此文件进行。</p>
<h3 id="设置语言"><a href="#设置语言" class="headerlink" title="设置语言"></a>设置语言</h3><p>NexT主题支持多种语言，只需要编辑<code>_config.next.yml</code>中的<code>language</code>设置即可</p>
<table>
<thead>
<tr>
<th>语言</th>
<th>代码</th>
<th>设定示例</th>
</tr>
</thead>
<tbody><tr>
<td>English</td>
<td>en</td>
<td>language: en</td>
</tr>
<tr>
<td>简体中文</td>
<td>zh-CN（注：zh-Hans已经无法使用）</td>
<td>language: zh-CN</td>
</tr>
<tr>
<td>Frangais</td>
<td>fr-FR</td>
<td>language: fr-FR</td>
</tr>
<tr>
<td>Portugues</td>
<td>pt</td>
<td>language: pt  <br>或者  <br>language:pt-BR</td>
</tr>
<tr>
<td>繁體中文</td>
<td>zh-hk  <br>或者  <br>zh-tw</td>
<td>language: zh-hk</td>
</tr>
<tr>
<td>Pycckmi 93bIK</td>
<td>ru</td>
<td>language: ru</td>
</tr>
<tr>
<td>Deutsch</td>
<td>de</td>
<td>language: de</td>
</tr>
<tr>
<td>日本語</td>
<td>ja</td>
<td>language: ja</td>
</tr>
<tr>
<td>Indonesian</td>
<td>id</td>
<td>language: id</td>
</tr>
<tr>
<td>Korean</td>
<td>ko</td>
<td>language: ko</td>
</tr>
<tr>
<td>如果需要添加非内置的字段需要手动添加翻译文件，例如中文的翻译文件路径为<code>node_modules/next/languages/zh-CN.yml</code></td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h3 id="设置关于"><a href="#设置关于" class="headerlink" title="设置关于"></a>设置关于</h3><p>在<code>source/about/index.md</code>中添加如下内容</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 关于</span><br><span class="line"><span class="section">date: 2025-08-27 00:00:00</span></span><br><span class="line"><span class="section">---</span></span><br><span class="line"></span><br><span class="line">&lt;个人信息&gt;</span><br></pre></td></tr></table></figure>

<h3 id="选择Scheme"><a href="#选择Scheme" class="headerlink" title="选择Scheme"></a>选择Scheme</h3><p>Scheme 是 NexT 提供的一种特性，借助于 Scheme，NexT 为你提供多种不同的外观。同时，几乎所有的配置都可以 在 Scheme 之间共用。目前 NexT 支持三种 Schem</p>
<ul>
<li>Muse - 默认 Scheme</li>
<li>Mist - Muse 的紧凑版本</li>
<li>Pisces - 双栏 Scheme</li>
<li>Gemini</li>
</ul>
<h3 id="菜单配置"><a href="#菜单配置" class="headerlink" title="菜单配置"></a>菜单配置</h3><p>菜单配置包括三个部分，第一是菜单项（名称和链接），第二是菜单项的显示文本，第三是菜单项对应的图标。 NexT 使用的是 <a href="http://fontawesome.io/">Font Awesome</a> 提供的图标， Font Awesome 提供了 600+ 的图标，可以满足绝大的多数的场景，同时无须担心在 Retina 屏幕下 图标模糊的问题。</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">menu: home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">home</span> </span><br><span class="line"><span class="attr">categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">th</span> </span><br><span class="line"><span class="attr">archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">archive</span> </span><br><span class="line"><span class="attr">tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">tags</span> </span><br><span class="line"><span class="comment">#schedule: /schedule/ || calendar </span></span><br><span class="line"><span class="comment">#sitemap: /sitemap.xml || sitemap </span></span><br><span class="line"><span class="comment">#commonweal: /404/ || heartbeat </span></span><br><span class="line"><span class="attr">about:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">user</span></span><br></pre></td></tr></table></figure>

<p>NexT 默认的菜单项有（标注 <code>* </code>的项表示需要手动创建这个页面）：</p>
<p><strong>注意</strong>: 若站点运行在子目录中，请将链接前缀的 &#x2F; 去掉。</p>
<table>
<thead>
<tr>
<th align="left">键值</th>
<th align="left">设定值</th>
<th align="left">显示文本（简体中文）</th>
</tr>
</thead>
<tbody><tr>
<td align="left">home</td>
<td align="left">home: &#x2F;</td>
<td align="left">主页</td>
</tr>
<tr>
<td align="left">archives</td>
<td align="left">archives: &#x2F;archives</td>
<td align="left">归档页</td>
</tr>
<tr>
<td align="left">categories</td>
<td align="left">categories: &#x2F;categories</td>
<td align="left">分类页<code> *</code></td>
</tr>
<tr>
<td align="left">tags</td>
<td align="left">tags: &#x2F;tags</td>
<td align="left">标签页 <code>*</code></td>
</tr>
<tr>
<td align="left">about</td>
<td align="left">about: &#x2F;about</td>
<td align="left">关于页面<code>*</code></td>
</tr>
<tr>
<td align="left">commonweal</td>
<td align="left">commonweal: &#x2F;404.html</td>
<td align="left">公益 404 !</td>
</tr>
</tbody></table>
<h3 id="侧栏配置"><a href="#侧栏配置" class="headerlink" title="侧栏配置"></a>侧栏配置</h3><p>默认情况下，侧栏仅在文章页面（拥有目录列表）时才显示，并放置于右侧位置。配置具体如下</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="string">...</span></span><br><span class="line"></span><br><span class="line"><span class="attr">sidbar:</span></span><br><span class="line">  <span class="attr">position:</span> <span class="string">left</span>     <span class="comment"># 配置侧栏居左</span></span><br><span class="line">  <span class="attr">display:</span> <span class="string">post</span>      <span class="comment"># 侧栏显示行为</span></span><br><span class="line"></span><br><span class="line"><span class="string">...</span></span><br></pre></td></tr></table></figure>

<p>侧栏显示位置支持</p>
<ul>
<li><code>left</code>:  居左显示</li>
<li><code>right</code>:  居右显示</li>
</ul>
<p>侧栏显示行为支持</p>
<ul>
<li><code>post</code> 默认行为，在文章页面（拥有目录列表）时显示</li>
<li><code>always</code> 所有页面都显示</li>
<li><code>hide</code> 在所有页面中都隐藏（可以手动展开）</li>
<li><code>remove</code> 完全移除</li>
</ul>
<p>注册Github账号,Gitea账号(可选)<br>[^注] Github由于网络问题会经常无法链接，可使用Gitea作为中转，先将代码提交道Gitea，然后Gitea配置自动推送到Github</p>
<h3 id="设置头像"><a href="#设置头像" class="headerlink" title="设置头像"></a>设置头像</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">avatar: /images/avatar.jpg</span><br></pre></td></tr></table></figure>

<p>头像地址如果是以<code>/</code>起始则表示头像图片放置在博客发布后的目录下，例如测试博客地址是<code>http://localhost:4000</code>,头像图片地址为<code>http://localhost:4000/images/avatar.jpg</code><br>此配置需要在博客的<code>source/images</code>目录中放置头像图片<code>avatar.jpg</code></p>
<h3 id="侧边栏社交链接"><a href="#侧边栏社交链接" class="headerlink" title="侧边栏社交链接"></a>侧边栏社交链接</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">social:</span><br><span class="line">  #GitHub: https://github.com/&lt;username&gt; || fab fa-github</span><br><span class="line">  #E-Mail: &lt;email&gt; || fa fa-envelope</span><br><span class="line">  #Weibo: https://weibo.com/yourname || fab fa-weibo</span><br><span class="line">  #Twitter: https://twitter.com/yourname || fab fa-twitter</span><br><span class="line">  #FB Page: https://www.facebook.com/yourname || fab fa-facebook</span><br><span class="line">  #StackOverflow: https://stackoverflow.com/yourname || fab fa-stack-overflow</span><br><span class="line">  #YouTube: https://youtube.com/yourname || fab fa-youtube</span><br><span class="line">  #Instagram: https://instagram.com/yourname || fab fa-instagram</span><br><span class="line">  #Skype: skype:yourname?call|chat || fab fa-skype</span><br></pre></td></tr></table></figure>

<p>next主题默认支持的社交链接 <code>||</code>符号后是链接的图标</p>
<p>使用已有配置放开注释即可，如果要添加默认不存在链接示例如下</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">social:</span></span><br><span class="line">  <span class="string">微信:</span> <span class="string">https://wx.qq.com</span> <span class="string">||</span> <span class="string">weixin</span></span><br></pre></td></tr></table></figure>


<p><strong>注意</strong>: 图标对应的名称是FontAwesom图标的名称（不必带 <code>fa-</code> 前缀）</p>
<h3 id="打赏功能"><a href="#打赏功能" class="headerlink" title="打赏功能"></a>打赏功能</h3><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Reward </span></span><br><span class="line"><span class="attr">reward:</span> </span><br><span class="line">  <span class="attr">wechatpay:</span> <span class="string">/images/custom/wechatpay.jpg</span> </span><br><span class="line">  <span class="attr">alipay:</span> <span class="string">/images/custom/alipay.jpg</span> </span><br></pre></td></tr></table></figure>
<p>放开此部分注释并在<code>source/images</code>中放入收款码图片</p>
<h3 id="站点建立时间"><a href="#站点建立时间" class="headerlink" title="站点建立时间"></a>站点建立时间</h3><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">footer:</span></span><br><span class="line">  <span class="attr">since:</span> <span class="number">2025</span></span><br></pre></td></tr></table></figure>

<h3 id="订阅微信公众号"><a href="#订阅微信公众号" class="headerlink" title="订阅微信公众号"></a>订阅微信公众号</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Wechat Subscriber </span><br><span class="line">wechat_subscriber: </span><br><span class="line">  enabled: true </span><br><span class="line">  qcode: /images/wechat-qcode.jpg </span><br><span class="line">  description: 欢迎您扫一扫上面的微信公众号，订阅我的博客！</span><br></pre></td></tr></table></figure>
<p>放开此部分注释，并在<code>source/images</code>中放入公众号二维码</p>
<p><strong>注意</strong>: 此功能需要NexT版本在5.0.1之后</p>
<h3 id="设置动画"><a href="#设置动画" class="headerlink" title="设置动画"></a>设置动画</h3><p>NexT 默认开启动画效果，效果使用 JavaScript 编写，因此需要等待 JavaScript 脚本完全加载完毕后才会显示内容。 如果您比较在乎速度，可以将设置此字段的值为 <code>false</code> 来关闭动画。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Use velocity to animate everything. </span><br><span class="line">motion: </span><br><span class="line">  enable: true </span><br><span class="line">  async: true </span><br><span class="line">  transition: </span><br><span class="line">    # Transition variants: </span><br><span class="line">    # fadeIn | fadeOut | flipXIn | flipXOut | flipYIn | flipYOut | flipBounceXIn | flipBounceXOut | flipBounceYIn | flipBounceYOut </span><br><span class="line">    # swoopIn | swoopOut | whirlIn | whirlOut | shrinkIn | shrinkOut | expandIn | expandOut </span><br><span class="line">    # bounceIn | bounceOut | bounceUpIn | bounceUpOut | bounceDownIn | bounceDownOut | bounceLeftIn | bounceLeftOut | bounceRightIn | bounceRightOut </span><br><span class="line">    # slideUpIn | slideUpOut | slideDownIn | slideDownOut | slideLeftIn | slideLeftOut | slideRightIn | slideRightOut </span><br><span class="line">    # slideUpBigIn | slideUpBigOut | slideDownBigIn | slideDownBigOut | slideLeftBigIn | slideLeftBigOut | slideRightBigIn | slideRightBigOut </span><br><span class="line">    # perspectiveUpIn | perspectiveUpOut | perspectiveDownIn | perspectiveDownOut | perspectiveLeftIn | perspectiveLeftOut | perspectiveRightIn | perspectiveRightOut </span><br><span class="line">    post_block: fadeIn </span><br><span class="line">    post_header: slideDownIn </span><br><span class="line">    post_body: slideDownIn </span><br><span class="line">    coll_header: slideLeftIn # Only for Pisces | Gemini. </span><br><span class="line">    sidebar: slideUpIn</span><br></pre></td></tr></table></figure>

<h3 id="设置全文阅读"><a href="#设置全文阅读" class="headerlink" title="设置全文阅读"></a>设置全文阅读</h3><p>在首页显示一篇文章的部分内容，并提供一个链接跳转到全文页面是一个常见的需求。 NexT 提供三种方式来控制文章在首页的显示方式。</p>
<ul>
<li>在文章中使用 <code>&lt;!-- more --&gt;</code> 手动进行截断，Hexo 提供的方式 <strong>推荐</strong>。</li>
<li>在文章的 front-matter 中添加 description，并提供文章摘录</li>
<li>自动形成摘要，需要添加如下配置<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Automatically Excerpt. Not recommend. </span></span><br><span class="line"><span class="comment"># Please use &lt;!-- more --&gt; in the post to control excerpt accurately. </span></span><br><span class="line"><span class="attr">auto_excerpt:</span> </span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> </span><br><span class="line">  <span class="attr">length:</span> <span class="number">150</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="设置字数统计-阅读时长"><a href="#设置字数统计-阅读时长" class="headerlink" title="设置字数统计&#x2F;阅读时长"></a>设置字数统计&#x2F;阅读时长</h3><p>在<code>_config.yml</code>中配置如下</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Post wordcount display settings </span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/willin/hexo-wordcount </span></span><br><span class="line"><span class="attr">post_wordcount:</span> </span><br><span class="line">  <span class="attr">item_text:</span> <span class="literal">true</span> </span><br><span class="line">  <span class="attr">wordcount:</span> <span class="literal">true</span> </span><br><span class="line">  <span class="attr">min2read:</span> <span class="literal">true</span> </span><br><span class="line">  <span class="attr">totalcount:</span> <span class="literal">false</span> </span><br><span class="line">  <span class="attr">separated_meta:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h3 id="加载进度条"><a href="#加载进度条" class="headerlink" title="加载进度条"></a>加载进度条</h3><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Progress bar in the top during page loading.</span></span><br><span class="line"><span class="attr">pace:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment"># Themes list:</span></span><br><span class="line"><span class="comment">#pace-theme-big-counter</span></span><br><span class="line"><span class="comment">#pace-theme-bounce</span></span><br><span class="line"><span class="comment">#pace-theme-barber-shop</span></span><br><span class="line"><span class="comment">#pace-theme-center-atom</span></span><br><span class="line"><span class="comment">#pace-theme-center-circle</span></span><br><span class="line"><span class="comment">#pace-theme-center-radar</span></span><br><span class="line"><span class="comment">#pace-theme-center-simple</span></span><br><span class="line"><span class="comment">#pace-theme-corner-indicator</span></span><br><span class="line"><span class="comment">#pace-theme-fill-left</span></span><br><span class="line"><span class="comment">#pace-theme-flash</span></span><br><span class="line"><span class="comment">#pace-theme-loading-bar</span></span><br><span class="line"><span class="comment">#pace-theme-mac-osx</span></span><br><span class="line"><span class="comment">#pace-theme-minimal</span></span><br><span class="line"><span class="comment"># For example</span></span><br><span class="line"><span class="comment"># pace_theme: pace-theme-center-simple</span></span><br><span class="line"><span class="attr">pace_theme:</span> <span class="string">pace-theme-minimal</span></span><br></pre></td></tr></table></figure>

<h3 id="搜索服务"><a href="#搜索服务" class="headerlink" title="搜索服务"></a>搜索服务</h3><p>在<code>_config.yml</code>中配置如下</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># hexo-generator-searchdb </span></span><br><span class="line"><span class="attr">search:</span> </span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span> </span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span> </span><br><span class="line">  <span class="attr">format:</span> <span class="string">html</span> </span><br><span class="line">  <span class="attr">limit:</span> <span class="number">10000</span></span><br></pre></td></tr></table></figure>

<p>在_config.next.yml中配置如下</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Local search </span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/flashlab/hexo-generator-search </span></span><br><span class="line"><span class="attr">local_search:</span> </span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> </span><br><span class="line">  <span class="comment"># if auto, trigger search by changing input </span></span><br><span class="line">  <span class="comment"># if manual, trigger search by pressing enter key or search button   </span></span><br><span class="line">  <span class="attr">trigger:</span> <span class="string">auto</span> </span><br><span class="line">  <span class="comment"># show top n results per article, show all results by setting to -1 </span></span><br><span class="line">  <span class="attr">top_n_per_article:</span> <span class="number">1</span></span><br></pre></td></tr></table></figure>

<p>参考<br><a href="https://hexo.io/zh-cn/docs/">官方文档</a><br><a href="https://jiz4oh.com/2020/09/hexo-next/">Hexo 博客使用 Next 主题及美化 | Jiz4oh’s Life</a></p>
]]></content>
      <tags>
        <tag>Hexo</tag>
        <tag>静态博客</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo博客配置Giscus评论</title>
    <url>/2025/08/27/Hexo%E5%8D%9A%E5%AE%A2/Hexo%E5%8D%9A%E5%AE%A2%E9%85%8D%E7%BD%AEGiscus%E8%AF%84%E8%AE%BA/</url>
    <content><![CDATA[<p>参考<br><a href="https://weilado.github.io/2025/06/18/%E5%A6%82%E4%BD%95%E4%B8%BA%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F%EF%BC%88%E5%9F%BA%E4%BA%8Egiscus%EF%BC%89/">如何为博客添加评论系统（基于giscus） | 栞的图书馆</a><br><a href="https://blog.csdn.net/sinat_41212418/article/details/137819858">5分钟，为你的博客增加评论功能_giscus-CSDN博客</a><br><a href="https://mrh233.github.io/2024/04/17/%E5%A6%82%E4%BD%95%E5%9F%BA%E4%BA%8Egiscus%E9%85%8D%E7%BD%AE%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD/">如何基于giscus配置评论功能 - 奕皓的个人博客</a></p>
<p><a href="https://blog.lanweihong.com/posts/24011/">Hexo NexT 主题使用 utterances 搭建评论系统 | 蓝伟洪的博客</a><br><a href="https://toypipi.github.io/2024/06/21/Hexo-Next-%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE-utterances-%E8%AF%84%E8%AE%BA/">Hexo NexT 主题配置 utterances 评论 | Toypipi’s blog</a></p>
]]></content>
  </entry>
  <entry>
    <title>Hexo 增加站内文章链接</title>
    <url>/2024/08/29/Hexo%E5%8D%9A%E5%AE%A2/Hexo-%E5%A2%9E%E5%8A%A0%E7%AB%99%E5%86%85%E6%96%87%E7%AB%A0%E9%93%BE%E6%8E%A5/</url>
    <content><![CDATA[<h3 id="使用markdown的链接语法"><a href="#使用markdown的链接语法" class="headerlink" title="使用markdown的链接语法"></a>使用markdown的链接语法</h3><p>使用markdown的语法指定url创建站内链接，有绝对地址和相对地址两种方式，绝对地址与相对地址的区别在于是否以<code>/</code>开头：</p>
<h4 id="使用绝对地址"><a href="#使用绝对地址" class="headerlink" title="使用绝对地址"></a>使用绝对地址</h4><p>代码如下：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section"># 格式 [<span class="string">标题</span>](<span class="link">文章地址</span>)</span></span><br><span class="line">[<span class="string">Hexo 增加站内文章链接</span>](<span class="link">/Hexo博客/Hexo-增加站内文章链接</span>)</span><br></pre></td></tr></table></figure>

<blockquote>
<p>示例中，<code>Hexo-增加站内文章链接</code>使用的是文章对应的md文件名，使用hexo n创建post时，空格会转换为中划线-。<code>/Hexo</code>是为了文章管理方便在<code>_posts</code>目录下增加的子目录，<code>Hexo-增加站内文章链接.md</code>位于<code>_posts/Hexo/</code>目录下。</p>
</blockquote>
<p>结果如下：</p>
<p><a href="/Hexo%E5%8D%9A%E5%AE%A2/Hexo-%E5%A2%9E%E5%8A%A0%E7%AB%99%E5%86%85%E6%96%87%E7%AB%A0%E9%93%BE%E6%8E%A5">Hexo 增加站内文章链接</a></p>
<p>Hexo对绝对地址和相对地址的处理方式是不一样的。对于绝对地址<code>/Hexo/Hexo-博客配置</code>，生成的目标url不会变化。</p>
<h4 id="使用相对地址"><a href="#使用相对地址" class="headerlink" title="使用相对地址"></a>使用相对地址</h4><p>代码如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Hexo 增加站内文章链接](Hexo/Hexo-增加站内文章链接)</span><br></pre></td></tr></table></figure>

<p>对于相对地址<code>Hexo/Hexo-增加站内文章链接</code>，生成的目标URL会叠加文章的的URL，结果是<code>/Hexo/Hexo/Hexo-增加站内文章链接</code>，这显然不是期望的结果。但是如果是文章内的锚点链接，使用这种方式非常合适。</p>
<p>代码如下：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section"># 格式 [<span class="string">标题</span>](<span class="link">#文章内要跳转的标题</span>)</span></span><br><span class="line">[<span class="string">测试文章内跳转锚点</span>](<span class="link">#测试文章内跳转锚点</span>)</span><br></pre></td></tr></table></figure>

<p>结果如下：<br><a href="#%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0%E5%86%85%E8%B7%B3%E8%BD%AC%E9%94%9A%E7%82%B9">跳转文章内测试锚点</a></p>
<p>生成的URL可以正确的跳转到文章内的锚点。注意，标题中的空格用<code>-</code>代替。</p>
<h3 id="使用post-link标签"><a href="#使用post-link标签" class="headerlink" title="使用post_link标签"></a>使用post_link标签</h3><p>由于Hexo文章的URL规则是可以配置的，在<code>_config.yml</code>中可以配置URL自动添加日期、目录等信息。如果使用markdown语法的链接规则多有不便，一方面需要知道目标URL，一方面如果规则修改或者站点迁移，对应的内容需要修改。</p>
<p>好在Hexo提供了<code>post_link</code>标签解决这个问题。</p>
<p>代码如下：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section"># 格式 &#123;% post<span class="emphasis">_link 以_</span>post下文件路径 &#x27;显示链接名&#x27;%&#125;</span></span><br><span class="line">&#123;% post<span class="emphasis">_link Hexo博客/Hexo-博客配置 &#x27;Hexo 博客配置&#x27; %&#125;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>示例中，<code>Hexo-博客配置</code>使用的是文章对应的md文件名，使用hexo n创建post时，空格会转换为中划线-。<code>Hexo</code>是为了文章管理方便在<code>_posts</code>目录下增加的子目录，<code>Hexo-博客配置.md</code>位于<code>_posts/Hexo</code>目录下。</p>
</blockquote>
<p>结果如下：</p>
<a href="/2021/10/22/Hexo%E5%8D%9A%E5%AE%A2/Hexo-%E5%8D%9A%E5%AE%A2%E9%85%8D%E7%BD%AE/" title="Hexo 博客配置">Hexo 博客配置</a>

<p>这样的链接会自动适配<code>_config.yml</code>中的文章URL规则。</p>
<h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>对比markdown语法和<code>post_link</code>标签，推荐在文章链接到站内文章时优先使用<code>post_link</code>，链接到文章内锚点时优先使用markdown语法。</p>
<h3 id="测试文章内跳转锚点"><a href="#测试文章内跳转锚点" class="headerlink" title="测试文章内跳转锚点"></a>测试文章内跳转锚点</h3><p>文章内锚点跳转示例</p>
]]></content>
      <tags>
        <tag>Hexo</tag>
        <tag>静态博客</tag>
      </tags>
  </entry>
  <entry>
    <title>使用GithubActions部署Hexo博客</title>
    <url>/2021/10/22/Hexo%E5%8D%9A%E5%AE%A2/%E4%BD%BF%E7%94%A8Github-Actions%E9%83%A8%E7%BD%B2Hexo%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>作为技术博主，博客的高效维护与部署一直是我关注的重点。近期在维护博客时，我遇到了两个核心问题：</p>
<ol>
<li><strong>内容管理混乱</strong>：草稿箱文件堆积，缺乏分类标准，甚至因误操作破坏了原有配置；</li>
<li><strong>兼容性局限</strong>：计划将文章同步至 FastGPT 等 AI 知识库时，发现官方推荐的 Hexo 部署方案（源码与静态文件混存）中，冗余的 <code>public</code> 目录会干扰 RAG 系统提取内容，且源码与发布产物耦合易引发冲突。</li>
</ol>
<p>为解决这些问题，我采用了<strong>源码与发布分离</strong>的部署架构：将 Markdown 源文件单独存放在一个仓库，通过 GitHub Actions 自动在另一个仓库构建并发布静态文件。这种方式的优劣对比如下：</p>
<table>
<thead>
<tr>
<th>方案</th>
<th>优点</th>
<th>缺点</th>
</tr>
</thead>
<tbody><tr>
<td>官方混仓部署</td>
<td>支持本地手动 &#x2F; 自动发布，预览方便，配置简单</td>
<td>仓库体积大，源码与产物混合，不利于二次利用</td>
</tr>
<tr>
<td>本文分离部署</td>
<td>源码纯净、产物独立，兼容 AI 知识库，自动构建</td>
<td>本地预览需搭测试环境，配置较复杂（双仓库 + 鉴权）</td>
</tr>
</tbody></table>
<h2 id="部署核心思路"><a href="#部署核心思路" class="headerlink" title="部署核心思路"></a>部署核心思路</h2><p>核心逻辑：当源码仓库收到推送时，GitHub Actions 自动将源文件检出到 <code>source/_posts</code>，并从 <code>_hexo</code> 目录复制配置文件还原 Hexo 环境，最终执行构建与发布。</p>
<p><strong>文件结构设计</strong>（源码仓库）：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">|-- _hexo/ # Hexo 核心配置目录 </span><br><span class="line">| |-- _config.yml # Hexo 主配置 </span><br><span class="line">| |-- _config.next.yml # NexT 主题配置 </span><br><span class="line">| |-- package.json # Node 环境依赖 </span><br><span class="line">| |-- scaffolds/ # 文章模板（draft/page/post.md） </span><br><span class="line">| |-- static/ # 静态资源（头像、支付码等） </span><br><span class="line">|-- .github/workflows/ # GitHub Actions 工作流配置 </span><br><span class="line">|-- .obsidian/ # Obsidian 编辑器配置（可选）</span><br></pre></td></tr></table></figure>

<h2 id="详细部署步骤"><a href="#详细部署步骤" class="headerlink" title="详细部署步骤"></a>详细部署步骤</h2><h3 id="1-生成-SSH-密钥对（用于仓库间鉴权）"><a href="#1-生成-SSH-密钥对（用于仓库间鉴权）" class="headerlink" title="1. 生成 SSH 密钥对（用于仓库间鉴权）"></a>1. 生成 SSH 密钥对（用于仓库间鉴权）</h3><p>需要生成一对 SSH 密钥，用于源码仓库向发布仓库推送构建结果：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;&lt;github 注册邮箱&gt;&quot;</span></span><br></pre></td></tr></table></figure>

<p>执行后会在以下路径生成两个文件：</p>
<ul>
<li>私钥：<code>~/.ssh/id_rsa</code>（Linux&#x2F;Mac）或 <code>C:\Users\&lt;用户名&gt;\.ssh\id_rsa</code>（Windows）</li>
<li>公钥：<code>~/.ssh/id_rsa.pub</code>（同上路径）</li>
</ul>
<p><strong>注意</strong>：.ssh为隐藏目录，需要修改系统设置显示此文件夹</p>
<img src="/2021/10/22/Hexo%E5%8D%9A%E5%AE%A2/%E4%BD%BF%E7%94%A8Github-Actions%E9%83%A8%E7%BD%B2Hexo%E5%8D%9A%E5%AE%A2/IMG-20250827165137638.png" class="">

<h3 id="2-准备两个仓库"><a href="#2-准备两个仓库" class="headerlink" title="2. 准备两个仓库"></a>2. 准备两个仓库</h3><h4 id="仓库-1：源码仓库（存放-Markdown-与配置）"><a href="#仓库-1：源码仓库（存放-Markdown-与配置）" class="headerlink" title="仓库 1：源码仓库（存放 Markdown 与配置）"></a>仓库 1：源码仓库（存放 Markdown 与配置）</h4><ul>
<li>新建仓库（例如命名为 <code>hexo-source</code>）</li>
<li>进入仓库设置：<code>Settings → Secrets and variables → Actions → New repository secret</code></li>
<li>添加一个名为 <code>HEXO_DEPLOY_KEY</code> 的密钥，值为<strong>私钥 <code>id_rsa</code> 的内容</strong>（用记事本打开复制）</li>
</ul>
<img src="/2021/10/22/Hexo%E5%8D%9A%E5%AE%A2/%E4%BD%BF%E7%94%A8Github-Actions%E9%83%A8%E7%BD%B2Hexo%E5%8D%9A%E5%AE%A2/IMG-20250827165137689.png" class="">

<img src="/2021/10/22/Hexo%E5%8D%9A%E5%AE%A2/%E4%BD%BF%E7%94%A8Github-Actions%E9%83%A8%E7%BD%B2Hexo%E5%8D%9A%E5%AE%A2/IMG-20250827165137708.png" class="">


<h4 id="仓库-2：发布仓库（存放静态文件，用于-GitHub-Pages）"><a href="#仓库-2：发布仓库（存放静态文件，用于-GitHub-Pages）" class="headerlink" title="仓库 2：发布仓库（存放静态文件，用于 GitHub Pages）"></a>仓库 2：发布仓库（存放静态文件，用于 GitHub Pages）</h4><ul>
<li>仓库名必须为 <code>&lt;你的 GitHub 用户名&gt;.github.io</code>（固定格式，否则 GitHub Pages 无法生效）</li>
<li>权限需设为<strong>公开</strong>，并开启 <code>Discussions</code> 功能（进入仓库设置 → <code>Features</code> 勾选）</li>
<li>配置部署密钥：<code>Settings → Deploy keys → Add deploy key</code><ul>
<li>Title 填 <code>HEXO_DEPLOY_PUB</code></li>
<li>Key 填入<strong>公钥 <code>id_rsa.pub</code> 的内容</strong>，并勾选 <code>Allow write access</code>（允许推送权限）</li>
</ul>
</li>
</ul>
<img src="/2021/10/22/Hexo%E5%8D%9A%E5%AE%A2/%E4%BD%BF%E7%94%A8Github-Actions%E9%83%A8%E7%BD%B2Hexo%E5%8D%9A%E5%AE%A2/IMG-20250827165137733.png" class="">

<img src="/2021/10/22/Hexo%E5%8D%9A%E5%AE%A2/%E4%BD%BF%E7%94%A8Github-Actions%E9%83%A8%E7%BD%B2Hexo%E5%8D%9A%E5%AE%A2/IMG-20250827165137761.png" class="">
<h3 id="3-配置-Hexo-环境文件"><a href="#3-配置-Hexo-环境文件" class="headerlink" title="3. 配置 Hexo 环境文件"></a>3. 配置 Hexo 环境文件</h3><p>在源码仓库中创建 <code>_hexo</code> 目录，放入以下核心文件（可从本地 Hexo 环境中复制, 参考<a href="Hexo-%E5%8D%9A%E5%AE%A2%E9%85%8D%E7%BD%AE.md">Hexo-博客配置</a>）：</p>
<ul>
<li><code>_config.yml</code>：Hexo 主配置（需修改部署相关配置，见步骤 4）</li>
<li><code>_config.next.yml</code>：NexT 主题配置（其他主题同理）</li>
<li><code>package.json</code>：依赖配置（需包含 <code>hexo</code>、<code>hexo-deployer-git</code> 等核心依赖）</li>
<li><code>scaffolds/</code>：文章模板（<code>draft.md</code>&#x2F;<code>page.md</code>&#x2F;<code>post.md</code>）</li>
<li>静态资源：如头像（<code>avatar.jpg</code>）、关于页（<code>about.md</code>）等，按实际需求存放</li>
</ul>
<h3 id="4-配置部署与工作流文件"><a href="#4-配置部署与工作流文件" class="headerlink" title="4. 配置部署与工作流文件"></a>4. 配置部署与工作流文件</h3><h4 id="①-Hexo-部署配置（-hexo-config-yml）"><a href="#①-Hexo-部署配置（-hexo-config-yml）" class="headerlink" title="① Hexo 部署配置（_hexo/_config.yml）"></a>① Hexo 部署配置（<code>_hexo/_config.yml</code>）</h4><p>在配置文件中添加部署规则，指向发布仓库：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">    <span class="attr">repo:</span> <span class="string">git@github.com:&lt;username&gt;/&lt;username&gt;.github.io.git</span></span><br><span class="line">    <span class="attr">branch:</span> <span class="string">master</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">&lt;username&gt;</span></span><br><span class="line">    <span class="attr">email:</span> <span class="string">&lt;email&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="②-GitHub-Actions-工作流（-github-workflows-hexo-deploy-yml）"><a href="#②-GitHub-Actions-工作流（-github-workflows-hexo-deploy-yml）" class="headerlink" title="② GitHub Actions 工作流（.github/workflows/hexo-deploy.yml）"></a>② GitHub Actions 工作流（<code>.github/workflows/hexo-deploy.yml</code>）</h4><p>创建工作流文件，实现自动构建部署：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">hexo-deploy</span>  <span class="comment"># 工作流名称</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 触发条件：向 master 分支推送时执行</span></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span> [<span class="string">&quot;master&quot;</span>]</span><br><span class="line">    </span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">build:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span>  <span class="comment"># 使用 Ubuntu 环境</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="comment"># 1. 配置时区（避免时间显示异常）</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Setup</span> <span class="string">Timezone</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">szenius/set-timezone@v2.0</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">timezoneLinux:</span> <span class="string">&quot;Asia/Shanghai&quot;</span></span><br><span class="line">      </span><br><span class="line">      <span class="comment"># 2. 拉取源码仓库内容到 source/_posts</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">uses:</span> <span class="string">actions/checkout@v3</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">source/_posts</span></span><br><span class="line">      </span><br><span class="line">      <span class="comment"># 3. 安装 Node.js（需与本地开发环境版本一致，这里用 20.x）</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Use</span> <span class="string">Node.js</span> <span class="number">20</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/setup-node@v4</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">node-version:</span> <span class="string">&#x27;20&#x27;</span></span><br><span class="line">      </span><br><span class="line">      <span class="comment"># 4. 缓存 NPM 依赖（加速构建）</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Cache</span> <span class="string">NPM</span> <span class="string">dependencies</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/cache@v4</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">node_modules</span></span><br><span class="line">          <span class="attr">key:</span> <span class="string">$&#123;&#123;</span> <span class="string">runner.OS</span> <span class="string">&#125;&#125;-npm-cache</span></span><br><span class="line">          <span class="attr">restore-keys:</span> <span class="string">|</span></span><br><span class="line"><span class="string">            $&#123;&#123; runner.OS &#125;&#125;-npm-cache</span></span><br><span class="line"><span class="string"></span>      </span><br><span class="line">      <span class="comment"># 5. 配置 SSH 密钥（用于向发布仓库推送）</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Setup</span> <span class="string">Git</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">          <span class="attr">ACTION_DEPLOY_KEY:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.HEXO_DEPLOY_KEY</span> <span class="string">&#125;&#125;</span>  <span class="comment"># 引用源码仓库的私钥</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          mkdir -p ~/.ssh/</span></span><br><span class="line"><span class="string">          echo &quot;$ACTION_DEPLOY_KEY&quot; &gt; ~/.ssh/id_rsa</span></span><br><span class="line"><span class="string">          chmod 700 ~/.ssh</span></span><br><span class="line"><span class="string">          chmod 600 ~/.ssh/id_rsa  # 严格权限，否则 SSH 会拒绝使用</span></span><br><span class="line"><span class="string">          ssh-keyscan github.com &gt;&gt; ~/.ssh/known_hosts  # 信任 GitHub 主机</span></span><br><span class="line"><span class="string"></span>      </span><br><span class="line">      <span class="comment"># 6. 拉取主题（以 NexT 为例，其他主题修改仓库地址即可）</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Use</span> <span class="string">Themes</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/checkout@v3</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">repository:</span> <span class="string">next-theme/hexo-theme-next</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">themes/next</span></span><br><span class="line">      </span><br><span class="line">      <span class="comment"># 7. 还原 Hexo 环境（从 _hexo 目录复制配置文件）</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Setup</span> <span class="string">Hexo</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          npm install -g hexo-cli  # 全局安装 Hexo 命令行工具</span></span><br><span class="line"><span class="string">          # 复制核心配置文件</span></span><br><span class="line"><span class="string">          cp source/_posts/_hexo/_config.yml .</span></span><br><span class="line"><span class="string">          cp source/_posts/_hexo/_config.next.yml .</span></span><br><span class="line"><span class="string">          cp source/_posts/_hexo/package.json .</span></span><br><span class="line"><span class="string">          # 复制文章模板</span></span><br><span class="line"><span class="string">          mkdir scaffolds</span></span><br><span class="line"><span class="string">          cp source/_posts/_hexo/scaffolds/* scaffolds/</span></span><br><span class="line"><span class="string">          # 复制静态页面（关于页、分类页等，按实际需求调整）</span></span><br><span class="line"><span class="string">          mkdir -p source/about source/categories source/tags source/images</span></span><br><span class="line"><span class="string">          cp source/_posts/_hexo/about.md source/about/index.md</span></span><br><span class="line"><span class="string">          cp source/_posts/_hexo/categories.md source/categories/index.md</span></span><br><span class="line"><span class="string">          cp source/_posts/_hexo/tags.md source/tags/index.md</span></span><br><span class="line"><span class="string">          cp source/_posts/_hexo/*.jpg source/images/  # 复制图片资源</span></span><br><span class="line"><span class="string">          # 安装依赖</span></span><br><span class="line"><span class="string">          npm install</span></span><br><span class="line"><span class="string"></span>      </span><br><span class="line">      <span class="comment"># 8. 缓存部署目录（加速后续构建）</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Cache</span> <span class="string">Deploy</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/cache@v4</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">.deploy_git</span></span><br><span class="line">          <span class="attr">key:</span> <span class="string">$&#123;&#123;</span> <span class="string">runner.OS</span> <span class="string">&#125;&#125;-deploy-cache</span></span><br><span class="line">          <span class="attr">restore-keys:</span> <span class="string">|</span></span><br><span class="line"><span class="string">            $&#123;&#123; runner.OS &#125;&#125;-deploy-cache</span></span><br><span class="line"><span class="string"></span>      </span><br><span class="line">      <span class="comment"># 9. 构建并发布</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Deploy</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          cd .deploy_git &amp;&amp; git pull  # 拉取最新发布内容，避免冲突</span></span><br><span class="line"><span class="string">          cd ..</span></span><br><span class="line"><span class="string">          hexo clean  # 清理缓存</span></span><br><span class="line"><span class="string">          hexo generate  # 生成静态文件</span></span><br><span class="line"><span class="string">          hexo deploy  # 部署到发布仓库</span></span><br></pre></td></tr></table></figure>

<h2 id="验证与使用"><a href="#验证与使用" class="headerlink" title="验证与使用"></a>验证与使用</h2><ol>
<li>将上述文件提交到源码仓库的 <code>master</code> 分支，GitHub Actions 会自动触发工作流；</li>
<li>进入源码仓库的 <code>Actions</code> 标签页，查看工作流执行状态，若显示绿色对勾则部署成功；</li>
<li>访问 <code>https://&lt;你的用户名&gt;.github.io</code>，即可看到最新发布的博客。</li>
</ol>
<h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ol>
<li>私钥 <code>HEXO_DEPLOY_KEY</code> 是敏感信息，切勿泄露或提交到仓库；</li>
<li>发布仓库名必须严格为 <code>&lt;用户名&gt;.github.io</code>，否则 GitHub Pages 无法正常访问；</li>
<li>若主题是自定义修改过的，建议将主题 fork 到自己的仓库，再在工作流中拉取自己的 fork 版本；</li>
<li>本地预览时，可在源码仓库中手动搭建 Hexo 环境（复制 <code>_hexo</code> 目录文件，执行 <code>hexo server</code>）。</li>
</ol>
<p>参考</p>
<p><a href="https://hexo.io/zh-cn/docs/github-pages">Hexo官方提供的Github Actions部署示例</a></p>
]]></content>
      <tags>
        <tag>Hexo</tag>
        <tag>静态博客</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Obsidian配合Hexo写博客</title>
    <url>/2024/09/20/Hexo%E5%8D%9A%E5%AE%A2/%E4%BD%BF%E7%94%A8Obsidian%E9%85%8D%E5%90%88Hexo%E5%86%99%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<p>参考<br><a href="https://zhuanlan.zhihu.com/p/688561305">【2024】从零开始用Hexo+GithubPage搭建个人网站（保姆级） - 知乎 (zhihu.com)</a><br><a href="https://segmentfault.com/a/1190000042111566">Hexo + Obsidian + Git 完美的博客部署与编辑方案 - 个人文章 - SegmentFault 思否</a><br><a href="https://zhuanlan.zhihu.com/p/554333805">Obsidian+Git完美维护Hexo博客 - 知乎 (zhihu.com)</a></p>
]]></content>
      <tags>
        <tag>Hexo</tag>
        <tag>静态博客</tag>
        <tag>Obsidian</tag>
      </tags>
  </entry>
  <entry>
    <title>ArchLinux安装</title>
    <url>/2018/03/21/Linux/ArchLinux%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<h1 id="1-下载镜像-制作启动U盘"><a href="#1-下载镜像-制作启动U盘" class="headerlink" title="1. 下载镜像 制作启动U盘"></a>1. 下载镜像 制作启动U盘</h1><p>Arch Linux 官方网站 <a href="https://www.archlinux.org/">https://www.archlinux.org/</a></p>
<p>制作启动盘工具 <a href="https://rufus.ie/zh/">Rufus - 轻松创建 USB 启动盘</a></p>
<p>Linux下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dd if=*iso of /dev/sdb bs=41M</span><br></pre></td></tr></table></figure>

<h1 id="2-网络连接"><a href="#2-网络连接" class="headerlink" title="2. 网络连接"></a>2. 网络连接</h1><p>参考 <a href="/2018/05/24/Linux/Linux%E9%85%8D%E7%BD%AE%E7%BD%91%E7%BB%9C%E5%8F%8ASSH%E9%85%8D%E7%BD%AE/" title="Linux配置网络及SSH配置">Linux配置网络及SSH配置</a></p>
<h1 id="3-选择软件源"><a href="#3-选择软件源" class="headerlink" title="3. 选择软件源"></a>3. 选择软件源</h1><p>推荐国内的用户选择<a href="http://mirrors.ustc.edu.cn/">http://mirrors.ustc.edu.cn</a> 默认的mirrorlist是开启所有源的，因此我们使用sed先在所有源的前面加上#</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#sed -i &quot;s/^\b/#/g&quot; /etc/pacman.d/mirrorlist</span><br><span class="line">#nano /etc/pacman.d /mirrorlist</span><br></pre></td></tr></table></figure>
<p>将mirrors.ustc.edu.cn前面的#去掉</p>
<h1 id="4-分区-格式化-挂载"><a href="#4-分区-格式化-挂载" class="headerlink" title="4. 分区&#x2F;格式化&#x2F;挂载"></a>4. 分区&#x2F;格式化&#x2F;挂载</h1><p> 参考 <a href="/2018/03/22/Linux/Linux%E7%A1%AC%E7%9B%98%E5%88%86%E5%8C%BA/" title="Linux硬盘分区">Linux分区</a></p>
<h1 id="5-安装基本系统"><a href="#5-安装基本系统" class="headerlink" title="5. 安装基本系统"></a>5. 安装基本系统</h1><h2 id="1-将基本系统安装到根目录上去"><a href="#1-将基本系统安装到根目录上去" class="headerlink" title="1. 将基本系统安装到根目录上去"></a>1. 将基本系统安装到根目录上去</h2><pre><code><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#pacstrap /mnt base base-devel</span><br></pre></td></tr></table></figure>
    
其实，这里安装的基本系统也肯定有自己用不到的冗余功能，例如我就用不到nano文本编辑器，但系统会默认给安上。如果知道基本系统每个文件的作用，其实也完全可以自定义安装。比如：

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#pacstrap /mnt bash coreutils file filesystem grub2 linux pacman \</span><br><span class="line">    procps-ng syslog-ng glibc systemd-sysvcompat shawd dhcpcd vi</span><br></pre></td></tr></table></figure>

&gt; 如果你想使用ifconfig之类的工具，请在上面加上net-tools
</code></pre>
<h2 id="2-生成fstab"><a href="#2-生成fstab" class="headerlink" title="2. 生成fstab"></a>2. 生成fstab</h2><pre><code>用下面命令生成 fstab。如果想使用 UUIDs，使用 -U 选项；如果想使用标签，用 -L 选项.

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#genfstab -U -p /mnt &gt;&gt;/mnt/etc/fstab</span><br></pre></td></tr></table></figure>

&gt; [red]**后面如果出现问题，请不要再次运行genfstab**[red]，如果需要，手动编辑/etc/fstab
/etc/fstab文件在运行genfstab后应该被检查一下。如果之前你生成了一个EFI系统分区，那么 genfstab给EFI分区添加了错误的选项，会导致无法启动。因此你需要移除EFI分区的所有选项，除了noatime. 对其他分区, 替换&quot;codepage=cp437&quot; 为 &quot;codepage=437&quot; , 会挂载失败导致systemd进入恢复模式。
</code></pre>
<h2 id="3-切换到新系统中"><a href="#3-切换到新系统中" class="headerlink" title="3. 切换到新系统中"></a>3. 切换到新系统中</h2><pre><code><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#arch-chroot /mnt</span><br><span class="line">#sh-4.2#bash</span><br></pre></td></tr></table></figure>
&gt; 到这一步之后，开始系统的主要配置，如果下面文件不存在，需要手动创建。
&gt; 理解并完全安装步骤设置是保证系统配置成功的关键。
</code></pre>
<h2 id="4-对新的基本系统进行设置"><a href="#4-对新的基本系统进行设置" class="headerlink" title="4. 对新的基本系统进行设置"></a>4. 对新的基本系统进行设置</h2><h4 id="写入本机的字符编码方式"><a href="#写入本机的字符编码方式" class="headerlink" title="写入本机的字符编码方式"></a>写入本机的字符编码方式</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#nano /etc/locale.conf #</span><br><span class="line"></span><br><span class="line">LANG=en_US.UTF-8 #简略写法 echo LANG= en_US.UTF-8 &gt;&gt; locale.conf</span><br></pre></td></tr></table></figure>

<blockquote>
<p>locale.conf 文件默认不存在，一般设置LANG就行了，它是其它设置的默认值。</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/etc/locale.conf</span><br><span class="line"></span><br><span class="line">LANG=zh_CN.UTF-8</span><br><span class="line">LC_TIME=en_GB.UTF-8</span><br></pre></td></tr></table></figure>

<h4 id="修改本机编码"><a href="#修改本机编码" class="headerlink" title="修改本机编码"></a>修改本机编码</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># nano /etc/locale.gen  将用不到的编码全删掉，只保留en_US与zh_CN的几行。 </span><br></pre></td></tr></table></figure>

<blockquote>
<p>默认情况下 &#x2F;etc&#x2F;locale.gen 是一个仅包含注释文档的空文件。选定你需要的本地化类型(移除前面的＃即可), 比如中文系统可以使用:</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">en_US.UTF-8 UTF-8</span><br><span class="line">zh_CN.GB18030 GB18030</span><br><span class="line">zh_CN.GBK GBK</span><br><span class="line">zh_CN.UTF-8 UTF-8</span><br><span class="line">zh_CN GB2312</span><br></pre></td></tr></table></figure>

<p>对系统的编码进行更新</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#locale-gen </span><br></pre></td></tr></table></figure>

<h4 id="写入本机的名称"><a href="#写入本机的名称" class="headerlink" title="写入本机的名称"></a>写入本机的名称</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># nano /etc/hostname #简略写法：echo &#123;name&#125; &gt;/etc/hostname，也是一样的。</span><br></pre></td></tr></table></figure>


<h4 id="写入键盘布局方案"><a href="#写入键盘布局方案" class="headerlink" title="写入键盘布局方案"></a>写入键盘布局方案</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#nano /etc/vconsole.conf</span><br></pre></td></tr></table></figure>
<p>美式键盘，如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">KEYMAP=us</span><br><span class="line">FONT=</span><br><span class="line">FONT_MAP=</span><br></pre></td></tr></table></figure>

<h4 id="写入时区"><a href="#写入时区" class="headerlink" title="写入时区"></a>写入时区</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># nano /etc/timezone</span><br><span class="line"></span><br><span class="line">Asia/Shanghai</span><br></pre></td></tr></table></figure>

<h4 id="建立时区的软链接"><a href="#建立时区的软链接" class="headerlink" title="建立时区的软链接"></a>建立时区的软链接</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#ln -s /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br></pre></td></tr></table></figure>

<h4 id="设定系统将用的时间方案"><a href="#设定系统将用的时间方案" class="headerlink" title="设定系统将用的时间方案"></a>设定系统将用的时间方案</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#hwclock --systohc --utc</span><br></pre></td></tr></table></figure>

<blockquote>
<p>这个时间方案我是试过很多次，如果是双系统，电脑里还有win系统的话，建议设为：–localtime，否则可设为—utc。不过，我现在虽然也用双系统，但还是设的utc，因为设为–localtime虽然在win下时间不会出错，但回到linux下，经常系统会有些古怪的问题，比如，升级系统之时，报密钥错误。使用–utc，虽然在linux下时间会慢8个多小时，但毕竟对整个系统没有影响。</p>
</blockquote>
<p>生成内核的启动镜象。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#mkinitcpio -p linux</span><br></pre></td></tr></table></figure>


<h4 id="安装必要工具"><a href="#安装必要工具" class="headerlink" title="安装必要工具"></a>安装必要工具</h4><blockquote>
<p>安装必要的网络工具以便于开机后可以配置网络连接(包括无线)</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#pacman –S wpa_supplicant net-tools</span><br><span class="line">#pacman -S dialog</span><br><span class="line">#pacman -S netctl</span><br><span class="line">#pacman -S wireless_tools</span><br></pre></td></tr></table></figure>

<h2 id="6-安装引导"><a href="#6-安装引导" class="headerlink" title="6. 安装引导"></a>6. 安装引导</h2><h4 id="安装grub"><a href="#安装grub" class="headerlink" title="安装grub"></a>安装grub</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#pacman -S grub-bios os-prober</span><br><span class="line">#grub-install /dev/sda</span><br></pre></td></tr></table></figure>
<p>UEFI 注意分区,参考: <a href="Linux%E5%88%86%E5%8C%BA.%E6%A0%BC%E5%BC%8F%E5%8C%96.%E6%8C%82%E8%BD%BD.md">Linux分区.格式化.挂载</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#pacman -S grub-bios efibootmgr os-prober</span><br><span class="line">#grub-install --efi-directory=/boot/efi --bootloader-id=arch-grub --target=x86_64-efi</span><br></pre></td></tr></table></figure>

<h4 id="生成启动菜单"><a href="#生成启动菜单" class="headerlink" title="生成启动菜单"></a>生成启动菜单</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">#grub-mkconfig -o /boot/grub/grub.cfg</span><br><span class="line">#nano /boot/grub/grub.cfg</span><br></pre></td></tr></table></figure>

<h4 id="生成grub引导windows"><a href="#生成grub引导windows" class="headerlink" title="生成grub引导windows"></a>生成grub引导windows</h4><p>如何生成grub引导文件grub.cfg 这里我们需要充分参考点击打开链接grub的说明。首先，需要额外安装一个 <code>os-prober</code>的软件包，直接pacman就行；然后grub-makeconfig 到&#x2F;boot&#x2F;grub&#x2F;grub.cfg 。此时才能生成可以引导多系统的引导文件.如下图。<br><img src="/2018/03/21/Linux/ArchLinux%E5%AE%89%E8%A3%85/1.png" alt="Window引导"></p>
<h4 id="开机自启网络"><a href="#开机自启网络" class="headerlink" title="开机自启网络"></a>开机自启网络</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#systemctl enable dhcpcd@.service</span><br><span class="line">#dhcpcd</span><br></pre></td></tr></table></figure>

<h4 id="卸载挂载的分区并重启"><a href="#卸载挂载的分区并重启" class="headerlink" title="卸载挂载的分区并重启"></a>卸载挂载的分区并重启</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#umount /mnt/&#123;boot,home,mnt&#125;</span><br><span class="line"># reboot</span><br></pre></td></tr></table></figure>

<p>基本系统已安装完成</p>
<h1 id="7-系统配置"><a href="#7-系统配置" class="headerlink" title="7. 系统配置"></a>7. 系统配置</h1><blockquote>
<p>忘记安装net-tools补救</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ip link show #查看网卡</span><br><span class="line">ip link set eth0 up # 启用网卡</span><br></pre></td></tr></table></figure>

<blockquote>
<p>如果是DHCP的当然简单，直接<code>dhcpcd</code>即可，如果是固定IP的，则要如下操作：</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#ip addr add 固定IP/24 dev eth0</span><br><span class="line">#ip link set dev eth0 up</span><br><span class="line">#ip route add default via 网关</span><br></pre></td></tr></table></figure>

<h4 id="系统更新"><a href="#系统更新" class="headerlink" title="系统更新"></a>系统更新</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#pacman –Syu</span><br></pre></td></tr></table></figure>

<h4 id="添加用户"><a href="#添加用户" class="headerlink" title="添加用户"></a>添加用户</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#useradd -m 新用户 #新建用户</span><br><span class="line">#passwd 新用户     #指定密码：</span><br><span class="line">#usermod -a -G video,audio,lp,log,wheel,optical,scanner,games,users,storage,power 新用户 #指定用户所在的组 </span><br></pre></td></tr></table></figure>

<h4 id="sudo权限"><a href="#sudo权限" class="headerlink" title="sudo权限"></a>sudo权限</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nano /etc/sudoers (添加sudo权限)</span><br></pre></td></tr></table></figure>

<blockquote>
<p>放开<code>%wheel %sudo</code>权限</p>
</blockquote>
<h4 id="sudo命令补全"><a href="#sudo命令补全" class="headerlink" title="sudo命令补全"></a>sudo命令补全</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#sudo pacman -S bash-completion </span><br><span class="line">#echo &quot;source /usr/share/bash-completion/bash_completion&quot; &gt;&gt;/home/$USER/.bashrc </span><br></pre></td></tr></table></figure>

<h4 id="更新源列表"><a href="#更新源列表" class="headerlink" title="更新源列表"></a>更新源列表</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#pacman -S reflector </span><br></pre></td></tr></table></figure>

<p>reflector是一个可以从arch官方MirrorStatus列表取回最新mirrorlist的脚本，并且可以根据最新同步时间和速度排序。<br>下面先说如何自动配置源列表。直接终端输入命令5（注意备份原有源列表）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#reflector --verbose --country &#x27;China&#x27; -l 200 -p http --sort rate --save /etc/pacman.d/mirrorlist</span><br></pre></td></tr></table></figure>

<h4 id="安装yaourt"><a href="#安装yaourt" class="headerlink" title="安装yaourt"></a>安装yaourt</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#vim /etc/pacman.conf</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[archlinuxcn]</span><br><span class="line">#The Chinese Arch Linux communities packages.</span><br><span class="line">SigLevel = Optional TrustAll</span><br><span class="line">Server   = http://repo.archlinuxcn.org/$arch</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># pacman -Syu yaourt</span><br></pre></td></tr></table></figure>

<h4 id="安装powerpill"><a href="#安装powerpill" class="headerlink" title="安装powerpill"></a>安装powerpill</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#yaourt -S powerpill</span><br></pre></td></tr></table></figure>

<blockquote>
<p>powerpill是一个可以从多个源多线程下载软件包的程序，类似于迅雷一样，可以明显提升更新速度，相当于pacman的外壳程序，使用方法完全和pacman相同。下面说说powerpill，玩arch的人不知道powerpill是不行的，需要注意的是它也是要调用reflector的，但并不是作为依赖。如果安装reflector后powerpill更新前会默认从mirrorstatus取回45个最新更新的源地址，然后并行下载，否则就是读取&#x2F;etc&#x2F;pacman.d&#x2F;mirrorlist然后配置下载。当然我们推荐第一种，总不能每次都手动执行</p>
</blockquote>
<h1 id="7-驱动显卡"><a href="#7-驱动显卡" class="headerlink" title="7. 驱动显卡"></a>7. 驱动显卡</h1><h4 id="安装显卡驱动"><a href="#安装显卡驱动" class="headerlink" title="安装显卡驱动"></a>安装显卡驱动</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># pacman -S mesa</span><br><span class="line"># lspci | grep VGA（查看本机的显卡类型）</span><br><span class="line"># pacman -Ss xf86-video | less（查看能够安装的显卡类型）</span><br><span class="line"># pacman -S …… 安装显卡驱动（或者可以直接所有驱动都自动安装）</span><br><span class="line"># pacman –S xf86-video-vesa</span><br><span class="line"># pacman –S xf86-video-nouveau  #如果是ATI显卡的话，要安xf86-video-ati; </span><br><span class="line"># pacman –S virtualbox-guest-utils #虚拟机</span><br></pre></td></tr></table></figure>

<h4 id="安装系统基础程序："><a href="#安装系统基础程序：" class="headerlink" title="安装系统基础程序："></a>安装系统基础程序：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># pacman -S xorg-server xorg-xinit xorg-utils xorg-server-utils dbus # 先安装x-window服务</span><br><span class="line"># pacman –S xterm xorg-xclock  xorg-twm # 安装测试环境</span><br></pre></td></tr></table></figure>

<h4 id="重设系统的编码方式"><a href="#重设系统的编码方式" class="headerlink" title="重设系统的编码方式"></a>重设系统的编码方式</h4><p>编辑<code>.xinitrc</code>，把以下内容添加到文件最开始。内可以使用你所喜欢的编辑器，比如<code>nano</code>。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">LANG=zh_CN.UTF-8</span><br><span class="line">LC_ALL=&quot;zh_CN.UTF-8&quot;</span><br></pre></td></tr></table></figure>

<p>更新系统的编码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#locale-gen</span><br></pre></td></tr></table></figure>

<p>更新一下系统的时间</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># date -s &quot;2013-01-14 14:40:10&quot;</span><br><span class="line"># hwclock --systohc</span><br></pre></td></tr></table></figure>

<p>音频管理</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># pacman -S alsa-utils pulseaudio-alsa</span><br></pre></td></tr></table></figure>

<p>安装网络管理工具</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># pacman –S networkmanager network-manager-applet wireless_tools</span><br><span class="line"># systemctl enable NetworkManager</span><br><span class="line"># systemctl start NetworkManager</span><br></pre></td></tr></table></figure>

<p>安装桌面</p>
<p>击右键菜单，找到文件管理器，然后进入到目录<code>/usr/share/applications/</code>下，你会看到你已经安装完成的程序，全都可以从这儿启动。此时，你不妨复制几个常用的到你的用户目录：<code>/home/新用户/桌面/</code>下去。复制之后，你会在你的桌面上，看到这些程序的启动器。</p>
<p>安装完ibus之后，在<code>/home/$USER/.xinitrc</code>文件中，写入：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">export GTK_IM_MODULE=ibus</span><br><span class="line">export QT_IM_MODULE=ibus</span><br><span class="line">export XMODIFIERS=@im=ibus</span><br><span class="line">ibus-daemon -d -x</span><br></pre></td></tr></table></figure>

<p>Windows下的磁盘挂载<br>    参考<a href="Windows%E4%B8%8B%E7%9A%84%E7%A3%81%E7%9B%98%E6%8C%82%E8%BD%BD.md">Windows下的磁盘挂载</a></p>
<p>Xfce主题</p>
<p>字体及补丁</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># pacman -S ttf-dejavu ttf-ubuntu-font-family ttf-arphic-ukai ttf-arphic-uming</span><br><span class="line"># pacman -S wqy-microhei wqy-bitmapfont wqy-zenhei ttf-fireflysung</span><br><span class="line">$ yaourt -S cairo-ubuntu libxft-ubuntu freetype2-ubuntu fontconfig-ubuntu       #以普通用户身份执行</span><br></pre></td></tr></table></figure>
<p>安装系统主题：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo pacman -S gtk-aurora-engine gtk-engine-murrine </span><br></pre></td></tr></table></figure>
<p>鼠标主题：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo pacman -S xcursor-vanilla-dmz xcursor-vanilla-dmz-aa</span><br></pre></td></tr></table></figure>

<p>图标主题：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># pacman -S gnome-icon-theme-extras oxygen-icons human-icon-theme lxde-icon-theme tangerine-icon-theme</span><br></pre></td></tr></table></figure>

<p>针对笔记本电脑的配置：（Speed－step 、 Suspend 等功能）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># pacman -S  gnome-power-manager  volumeicon</span><br><span class="line">$ yaourt -S laptop-mode-tools pmount</span><br></pre></td></tr></table></figure>

<p>Grub主题<br>在启动过程中发现Xfce桌面启动载入真心简陋，没有关系，我们在AUR里下载一个balou并设置就好了。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ yaourt -S archlinux-themes-balou</span><br></pre></td></tr></table></figure>

<p>下面来配置grub的启动界面。AUR里有一个非常棒的包<code>grub2-theme-archlinux</code>。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ yaourt -S grub2-theme-archlinux</span><br></pre></td></tr></table></figure>
<p>安装后编辑&#x2F;etc&#x2F;default&#x2F;grub，<br>将<code>#GRUB_THEME=&quot;/path/to/gfxtheme&quot;</code>改为<code>GRUB_THEME=&quot;/boot/grub/themes/Archlinux/theme.txt&quot;</code><br>将<code>GRUB_GFXMODE=auto</code>改为<code>GRUB_GFXMODE=1024x768</code>修改完成后重新生成一下启动文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># grub-mkconfig -o /boot/grub/grub.cfg</span><br></pre></td></tr></table></figure>

<p>安装 i3 窗口管理器</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># pacman -S i3</span><br></pre></td></tr></table></figure>

<p>安装 lightdm 显示管理器，</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># pacman -S lightdm-gtk3-greeter</span><br></pre></td></tr></table></figure>
<p>然后 </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># systemctl enable lightdm</span><br><span class="line"># systemctl start lightdm</span><br></pre></td></tr></table></figure>

<h1 id="8-桌面及美化"><a href="#8-桌面及美化" class="headerlink" title="8. 桌面及美化"></a>8. 桌面及美化</h1>]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>ArchLinux</tag>
      </tags>
  </entry>
  <entry>
    <title>Awesome桌面</title>
    <url>/2024/08/29/Linux/Awesome%E6%A1%8C%E9%9D%A2/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Awesome</tag>
      </tags>
  </entry>
  <entry>
    <title>Debian安装NFS</title>
    <url>/2024/04/23/Linux/Debian%E5%AE%89%E8%A3%85NFS/</url>
    <content><![CDATA[<h2 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"> <span class="comment"># 安装nfs服务</span></span><br><span class="line"><span class="built_in">sudo</span> apt install nfs-common nfs-kernel-server portman -y</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建共享目录</span></span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">mkdir</span> -p /mnt/share/</span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">chmod</span> 777 /mnt/share</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编辑映射文件</span></span><br><span class="line"><span class="built_in">sudo</span> vim /etc/exports</span><br><span class="line"></span><br><span class="line"><span class="comment"># 共享目录</span></span><br><span class="line">/mnt/share	*(rw,<span class="built_in">sync</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置ACL赋予nfsnobody权限</span></span><br><span class="line"><span class="built_in">sudo</span> setfacl -m u:nfsbody:rw /mnt/share</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动NFS服务</span></span><br><span class="line"><span class="built_in">sudo</span> /etc/init.d/nfs-kernel-server start</span><br><span class="line"><span class="built_in">sudo</span> /etc/init.d/nfs-common start</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查服务启动</span></span><br><span class="line"><span class="built_in">sudo</span> showmount -e</span><br></pre></td></tr></table></figure>



<h2 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装nfs</span></span><br><span class="line"><span class="built_in">sudo</span> apt install nfs-common</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新建本地文件夹</span></span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">mkdir</span> /mnt/nfs</span><br><span class="line"></span><br><span class="line"><span class="comment"># sudo mount [nfs_server]:[server_dir] [local_mount_point]</span></span><br><span class="line"><span class="comment"># [nfs_server] nfs服务器ip</span></span><br><span class="line"><span class="comment"># [server_dir] 服务器共享路径</span></span><br><span class="line"><span class="comment"># [local_mount_point] 本地挂载路径</span></span><br><span class="line"><span class="built_in">sudo</span> mount [nfs_server]:[server_dir] [local_mount_point]</span><br><span class="line"><span class="comment"># 示例</span></span><br><span class="line"><span class="built_in">sudo</span> mount 192.168.1.100:/mnt/share /mnt/nfs</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看挂载是否成功</span></span><br><span class="line"><span class="built_in">df</span> -Th</span><br></pre></td></tr></table></figure>

<p>编辑fstab 配置自动挂载</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> vim /etc/fstab</span><br><span class="line"><span class="comment"># 在最后一行添加 </span></span><br><span class="line">[nfs_server]:/mnt/share	/mnt/nfs	nfs	defaults	0	0</span><br></pre></td></tr></table></figure>

<p>卸载</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> umount [local_mount_point] </span><br><span class="line"><span class="comment">#示例</span></span><br><span class="line"><span class="built_in">sudo</span> umount /mnt/nfs</span><br></pre></td></tr></table></figure>



<p>需要认证参考<a href="https://cn.linux-console.net/?p=22601">为 Linux 客户端设置具有基于 Kerberos 的身份验证的 NFS 服务器 (linux-console.net)</a></p>
<p>安全相关参考<a href="https://cloud.tencent.com/developer/article/1072369">如何确保NFS服务安全-腾讯云开发者社区-腾讯云 (tencent.com)</a></p>
<p>用户身份映射参考<a href="https://www.cnblogs.com/wangmo/p/15048045.html">NFS服务的用户身份映射 - wangmo - 博客园 (cnblogs.com)</a></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>NFS</tag>
      </tags>
  </entry>
  <entry>
    <title>IPTables配置</title>
    <url>/2024/12/10/Linux/IPTables%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>IPTable</tag>
      </tags>
  </entry>
  <entry>
    <title>Gentoo安装</title>
    <url>/2023/05/23/Linux/Gentoo%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><h4 id="制作启动盘"><a href="#制作启动盘" class="headerlink" title="制作启动盘"></a>制作启动盘</h4><p>官方镜像<br><a href="https://distfiles.gentoo.org/releases/amd64/autobuilds/20241208T163323Z/install-amd64-minimal-20241208T163323Z.iso">Minimal CD</a> <a href="https://distfiles.gentoo.org/releases/amd64/autobuilds/20241208T163323Z/stage3-amd64-openrc-20241208T163323Z.tar.xz">Stage</a><br>国内加速<br><a href="https://mirrors.tuna.tsinghua.edu.cn/gentoo/releases/amd64/autobuilds/">清华大学开源软件镜像站</a><br><a href="https://mirrors.ustc.edu.cn/gentoo/releases/amd64/autobuilds/">中国科技大学开源镜像站</a></p>
<p>使用Rufus制作启动U盘.</p>
<img src="/2023/05/23/Linux/Gentoo%E5%AE%89%E8%A3%85/IMG-20241210170128574.png" class="" title="image-20240829112011985">

<h4 id="连接网络"><a href="#连接网络" class="headerlink" title="连接网络"></a>连接网络</h4><a href="/2018/05/24/Linux/Linux%E9%85%8D%E7%BD%AE%E7%BD%91%E7%BB%9C%E5%8F%8ASSH%E9%85%8D%E7%BD%AE/" title="Linux配置网络及SSH配置">Linux配置网络及SSH配置</a>

<h4 id="分区规划"><a href="#分区规划" class="headerlink" title="分区规划"></a>分区规划</h4><p>参考 <a href="/2018/03/22/Linux/Linux%E7%A1%AC%E7%9B%98%E5%88%86%E5%8C%BA/" title="Linux硬盘分区">Linux硬盘分区</a></p>
<h4 id="挂载分区"><a href="#挂载分区" class="headerlink" title="挂载分区"></a>挂载分区</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /mnt/gentoo</span><br><span class="line">mount /dev/sdx? /mnt/gentoo</span><br><span class="line"><span class="built_in">mkdir</span> /mnt/gentoo/home</span><br><span class="line">mount /dev/sdx? /mnt/gentoo/home</span><br><span class="line"><span class="built_in">mkdir</span> /mnt/gentoo/boot</span><br><span class="line">mount /dev/sdx? /mnt/gentoo/boot</span><br><span class="line"><span class="built_in">mkdir</span> /mnt/gentoo/boot/efi</span><br><span class="line">mount /dev/sdx? /mnt/gentoo/boot/efi</span><br></pre></td></tr></table></figure>

<h3 id="配置Portage"><a href="#配置Portage" class="headerlink" title="配置Portage"></a>配置Portage</h3><h4 id="释放stage"><a href="#释放stage" class="headerlink" title="释放stage"></a>释放stage</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 使用命令行浏览器下载stage</span></span><br><span class="line">links http://www.gentoo.org/main/en/mirrors.xml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 发送stage3</span></span><br><span class="line">scp stage3-amd64-*.tar.xz root@192.168.0.2:/mnt/gentoo</span><br><span class="line"><span class="built_in">cd</span> /mnt/gentoo</span><br><span class="line"><span class="comment"># 释放stage3</span></span><br><span class="line">tar xpvf stage3-*.tar.bz2 --xattrs-include=<span class="string">&#x27;*.*&#x27;</span> --numeric-owner</span><br></pre></td></tr></table></figure>

<h4 id="挂载系统必要环境"><a href="#挂载系统必要环境" class="headerlink" title="挂载系统必要环境"></a>挂载系统必要环境</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mount --types proc /proc /mnt/gentoo/proc</span><br><span class="line">mount --rbind /sys /mnt/gentoo/sys</span><br><span class="line"><span class="comment">#mount --make-rslave /mnt/gentoo/sys (不使用systemd，所以注释掉)</span></span><br><span class="line">mount --rbind /dev /mnt/gentoo/dev</span><br><span class="line"><span class="comment">#mount --make-rslave /mnt/gentoo/dev (不使用systemd，所以注释掉)</span></span><br><span class="line">mount --rbind /run /mnt/gentoo/run</span><br><span class="line"><span class="comment">#mount --make-slave /mnt/gentoo/run (不使用systemd，所以注释掉)</span></span><br></pre></td></tr></table></figure>

<h4 id="复制DNS"><a href="#复制DNS" class="headerlink" title="复制DNS"></a>复制DNS</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> --dereference /etc/resolv.conf /mnt/gentoo/etc/</span><br></pre></td></tr></table></figure>

<h4 id="配置软件源"><a href="#配置软件源" class="headerlink" title="配置软件源"></a>配置软件源</h4><h5 id="常规源"><a href="#常规源" class="headerlink" title="常规源"></a>常规源</h5><p>选择中国源，这一步是非必须的，提供的<code>/etc/portage/make.conf</code>里已经有中国的所有源了</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mirrorselect -i -o &gt;&gt; /mnt/gentoo/etc/portage/make.conf   </span><br></pre></td></tr></table></figure>
<h5 id="创建主仓库"><a href="#创建主仓库" class="headerlink" title="创建主仓库"></a>创建主仓库</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir -p -v /mnt/gentoo/etc/portage/repos.conf</span><br><span class="line"></span><br><span class="line">cp -v /mnt/gentoo/usr/share/portage/config/repos.conf /mnt/gentoo/etc/portage/repos.conf/gentoo.conf</span><br><span class="line"></span><br><span class="line"># 加入中国源</span><br><span class="line">nano -w /mnt/gentoo/etc/portage/repos.conf/gentoo.conf：    </span><br><span class="line"></span><br><span class="line">## 源地址</span><br><span class="line">sync-uri = rsync://mirrors.tuna.tsinghua.edu.cn/gentoo-portage/</span><br><span class="line">#sync-uri = rsync://rsync.mirrors.ustc.edu.cn/gentoo-portage/</span><br><span class="line">#sync-uri = rsync://mirrors.yun-idc.com/gentoo-portage/</span><br></pre></td></tr></table></figure>

<h5 id="二进制源"><a href="#二进制源" class="headerlink" title="二进制源"></a>二进制源</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 修改二进制源地址为国内源</span></span><br><span class="line">nano -w /etc/portage/binrepos.conf/gentoobinhost.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 原有内容</span></span><br><span class="line"><span class="comment"># ---</span></span><br><span class="line"><span class="comment"># These settings were set by the catalyst build script that automatically</span></span><br><span class="line"><span class="comment"># built this stage.</span></span><br><span class="line"><span class="comment"># Please consider using a local mirror.</span></span><br><span class="line"></span><br><span class="line">[gentoobinhost]</span><br><span class="line">priority = 1</span><br><span class="line"><span class="comment"># sync-uri = https://distfiles.gentoo.org/releases/amd64/binpackages/23.0/x86-64</span></span><br><span class="line">sync-uri = https://mirrors.tuna.tsinghua.edu.cn/gentoo/releases/amd64/binpackages/23.0/x86-64/</span><br><span class="line"><span class="comment"># sync-uri = https://mirrors.ustc.edu.cn/gentoo/releases/amd64/binpackages/23.0/x86-64/</span></span><br></pre></td></tr></table></figure>

<p>如果启用二进制源需要在<code>USE</code>中添加 <code>getbinpkg binpkg-request-signature </code></p>
<h4 id="生成fstab"><a href="#生成fstab" class="headerlink" title="生成fstab"></a>生成fstab</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">genfstab -U /mnt/gentoo &gt;&gt; /mnt/gentoo/etc/fstab</span><br></pre></td></tr></table></figure>

<p>生成的fstab格式如下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">UUID=......      /boot/efi      vfat      noauto,defaults,noatime,<span class="built_in">umask</span>=0077                               0 2</span><br><span class="line">UUID=......      /              xfs       defaults,noatime                                                 0 1</span><br><span class="line">UUID=......      /home          xfs       noatime,discard    </span><br></pre></td></tr></table></figure>

<h3 id="系统配置"><a href="#系统配置" class="headerlink" title="系统配置"></a>系统配置</h3><h4 id="进入新系统环境"><a href="#进入新系统环境" class="headerlink" title="进入新系统环境"></a>进入新系统环境</h4><p><strong>从现在开始，所有的动作将立即在新 Gentoo Linux 环境里生效。</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chroot</span> /mnt/gentoo /bin/bash</span><br><span class="line">env-update						</span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line"><span class="built_in">export</span> PS1=<span class="string">&quot;(chroot) <span class="variable">$&#123;PS1&#125;</span>&quot;</span> <span class="comment"># 切换提示符，避免混淆</span></span><br></pre></td></tr></table></figure>

<h4 id="同步stage"><a href="#同步stage" class="headerlink" title="同步stage"></a>同步stage</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">emerge-webrsync</span><br></pre></td></tr></table></figure>

<p><a href="**%E8%BF%99%E4%B8%AA%E5%91%BD%E4%BB%A4%E4%B8%8D%E8%83%BD%E5%A4%9A%E6%AC%A1%E6%89%A7%E8%A1%8C%EF%BC%8C%E5%A6%82%E6%9E%9C%E9%87%8D%E5%A4%8D%E6%89%A7%E8%A1%8C%E9%9C%80%E8%A6%81%E6%89%8B%E5%8A%A8%E4%BF%AE%E6%94%B9fstab%E5%8E%BB%E6%8E%89%E9%87%8D%E5%A4%8D%E7%9A%84%E9%A1%B9%EF%BC%8C%E5%90%A6%E5%88%99%E4%BC%9A%E5%AF%BC%E8%87%B4%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E6%8C%82%E8%BD%BD%E5%BC%82%E5%B8%B8%EF%BC%8C%E7%B3%BB%E7%BB%9F%E6%97%A0%E6%B3%95%E5%90%AF%E5%8A%A8**">^注意</a>: gentoo handbook上提到可以使用emerge -rsync升级软件包数据库到最近2小时的最新版，这是没有必要的，而且下载的速度会极其慢，所以不推荐这样做。单用emerge-webrsync就可以同步数据库到最近3～4天内的最新版了。</p>
<h4 id="设置profile"><a href="#设置profile" class="headerlink" title="设置profile"></a>设置profile</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">eselect profile list     <span class="comment">#查看profile予设值</span></span><br><span class="line">eselect profile <span class="built_in">set</span> X    <span class="comment">#这里先保持选择默认值，即“default/linux/amd64/17.1 (stable)”</span></span><br></pre></td></tr></table></figure>

<h4 id="检测cpu指令集"><a href="#检测cpu指令集" class="headerlink" title="检测cpu指令集"></a>检测cpu指令集</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装cpuid2cpuflags</span></span><br><span class="line">emerge --ask app-portage/cpuid2cpuflags</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看CPU指令集</span></span><br><span class="line">cpuid2cpuflags   </span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;*/* <span class="subst">$(cpuid2cpuflags)</span>&quot;</span> &gt; /etc/portage/package.use/00cpu-flags</span><br></pre></td></tr></table></figure>

<h4 id="安装CCache-可选，加速编译"><a href="#安装CCache-可选，加速编译" class="headerlink" title="安装CCache(可选，加速编译)"></a>安装CCache(可选，加速编译)</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">emerge --ask ccache </span><br><span class="line"><span class="built_in">mkdir</span> -p /var/cache/ccache</span><br><span class="line"><span class="built_in">chown</span> root:portage /var/cache/ccache -R</span><br><span class="line"><span class="built_in">chmod</span> 2775 /var/cache/ccache -R</span><br></pre></td></tr></table></figure>

<p>在portage&#x2F;make.conf中添加</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">FEATURES=<span class="string">&quot;ccache -test&quot;</span> </span><br><span class="line">CCACHE_DIR=<span class="string">&quot;/var/cache/ccache&quot;</span></span><br><span class="line"></span><br><span class="line">USE=<span class="string">&quot;... <span class="variable">$&#123;FEATURES&#125;</span>&quot;</span> <span class="comment"># 在USE中添加$&#123;FEATURES&#125; </span></span><br></pre></td></tr></table></figure>

<h4 id="安装Aria2-可选，加快包下载"><a href="#安装Aria2-可选，加快包下载" class="headerlink" title="安装Aria2(可选，加快包下载)"></a>安装Aria2(可选，加快包下载)</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">emerge --ask net-misc/aria2</span><br></pre></td></tr></table></figure>

<p>在portage&#x2F;make.conf中添加配置</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">DISTDIR=&quot;/var/cache/distfiles&quot;</span><br><span class="line">FETCHCOMMAND=&quot;/usr/bin/aria2c -d \$&#123;DISTDIR&#125; -o \$&#123;FILE&#125; \</span><br><span class="line">    --allow-overwrite=true --max-tries=5 --max-file-not-found=2 \</span><br><span class="line">    --max-concurrent-downloads=5 --connect-timeout=5 --timeout=5 \</span><br><span class="line">    --split=5 --min-split-size=2M --lowest-speed-limit=20K \</span><br><span class="line">    --max-connection-per-server=9 --uri-selector=feedback \$&#123;URI&#125;&quot;</span><br><span class="line">RESUMECOMMAND=&quot;$&#123;FETCHCOMMAND&#125;&quot;</span><br></pre></td></tr></table></figure>

<h4 id="配置编译选项"><a href="#配置编译选项" class="headerlink" title="配置编译选项"></a>配置编译选项</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nano /mnt/gentoo/etc/portage/make.conf</span><br></pre></td></tr></table></figure>

<p><a href="**%E8%BF%99%E4%B8%AA%E5%91%BD%E4%BB%A4%E4%B8%8D%E8%83%BD%E5%A4%9A%E6%AC%A1%E6%89%A7%E8%A1%8C%EF%BC%8C%E5%A6%82%E6%9E%9C%E9%87%8D%E5%A4%8D%E6%89%A7%E8%A1%8C%E9%9C%80%E8%A6%81%E6%89%8B%E5%8A%A8%E4%BF%AE%E6%94%B9fstab%E5%8E%BB%E6%8E%89%E9%87%8D%E5%A4%8D%E7%9A%84%E9%A1%B9%EF%BC%8C%E5%90%A6%E5%88%99%E4%BC%9A%E5%AF%BC%E8%87%B4%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E6%8C%82%E8%BD%BD%E5%BC%82%E5%B8%B8%EF%BC%8C%E7%B3%BB%E7%BB%9F%E6%97%A0%E6%B3%95%E5%90%AF%E5%8A%A8**">^注意</a>: 设置编译标志 -march&#x3D;native (如果你知道自己处理器的代号，就用自己的处理器代号替换这里的native 比如我的是skylake，如果不确定就使用native)<br><a href="**%E8%BF%99%E4%B8%AA%E5%91%BD%E4%BB%A4%E4%B8%8D%E8%83%BD%E5%A4%9A%E6%AC%A1%E6%89%A7%E8%A1%8C%EF%BC%8C%E5%A6%82%E6%9E%9C%E9%87%8D%E5%A4%8D%E6%89%A7%E8%A1%8C%E9%9C%80%E8%A6%81%E6%89%8B%E5%8A%A8%E4%BF%AE%E6%94%B9fstab%E5%8E%BB%E6%8E%89%E9%87%8D%E5%A4%8D%E7%9A%84%E9%A1%B9%EF%BC%8C%E5%90%A6%E5%88%99%E4%BC%9A%E5%AF%BC%E8%87%B4%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E6%8C%82%E8%BD%BD%E5%BC%82%E5%B8%B8%EF%BC%8C%E7%B3%BB%E7%BB%9F%E6%97%A0%E6%B3%95%E5%90%AF%E5%8A%A8**">^注意</a>: 设置 <strong>MAKEOPTS&#x3D;”-j8”</strong> 来定义安装软件时并行编译的数量 这个数字等于你的CPU线程数（也称为逻辑CPU数）参考<a href="https://link.zhihu.com/?target=https://wiki.gentoo.org/wiki/MAKEOPTS">MAKEOPTS WiKi</a></p>
<p>完整的配置文件如下(转自<a href="https://zhuanlan.zhihu.com/p/122222365">Gentoo安装流程分享(step by step)，第一篇之基本系统的安装</a>，修改了下注释格式，删除不用的部分)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># These settings were set by the catalyst build script that automatically</span></span><br><span class="line"><span class="comment"># built this stage.</span></span><br><span class="line"><span class="comment"># Please consult /usr/share/portage/config/make.conf.example for a more</span></span><br><span class="line"><span class="comment"># detailed example.</span></span><br><span class="line"><span class="comment"># GCC编译配置 -O3代表优化级别,如果采用更高的-Ofast可能会导致部分软件包编译错误, </span></span><br><span class="line"><span class="comment"># -march=native代表为本机cpu进行编译,如果是交叉编译需要去掉</span></span><br><span class="line">COMMON_FLAGS=<span class="string">&quot;-march=skylake -O2 -pipe&quot;</span></span><br><span class="line">CFLAGS=<span class="string">&quot;<span class="variable">$&#123;COMMON_FLAGS&#125;</span>&quot;</span></span><br><span class="line">CXXFLAGS=<span class="string">&quot;<span class="variable">$&#123;COMMON_FLAGS&#125;</span>&quot;</span></span><br><span class="line">FCFLAGS=<span class="string">&quot;<span class="variable">$&#123;COMMON_FLAGS&#125;</span>&quot;</span></span><br><span class="line">FFLAGS=<span class="string">&quot;<span class="variable">$&#123;COMMON_FLAGS&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 源代码包构建时传递给`make`的参数</span></span><br><span class="line"><span class="comment"># 同时编译的线程数,根据cpu线程数和内存大小/2中较小的</span></span><br><span class="line">MAKEOPTS=<span class="string">&quot;-j8&quot;</span>                </span><br><span class="line"></span><br><span class="line"><span class="comment"># 系统上托管的主软件包存储库,其默认值为 `/var/db/repos/gentoo`</span></span><br><span class="line">PORTDIR=<span class="string">&quot;/var/db/repos/gentoo&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Portage存储下载的源代码归档的位置，默认为新安装的`/var/cache/distfiles`</span></span><br><span class="line">DISTDIR=<span class="string">&quot;/var/cache/distfiles&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Portage临时文件的位置，默认为`/var/tmp`</span></span><br><span class="line"><span class="comment"># 如果内存足够大(8G、16G)，那么建议把编译程序时存放临时中间文件的目录设置</span></span><br><span class="line"><span class="comment"># 为内存的tmpfs(/tmp目录)，以减少编译时对硬盘的大量读写、延长硬盘使用寿命、</span></span><br><span class="line"><span class="comment"># 并加快编译速度；但如果你的内存较小(&lt;=4G)，那么建议把此项注释掉，否则很多</span></span><br><span class="line"><span class="comment"># 程序会因内存容量不足而导致编译失败</span></span><br><span class="line">PORTAGE_TMPDIR=<span class="string">&quot;/tmp&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># NOTE: This stage was built with the bindist Use flag enabled</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># This sets the language of build output to English.</span></span><br><span class="line"><span class="comment"># Please keep this setting intact when reporting bugs.</span></span><br><span class="line">LC_MESSAGES=C</span><br><span class="line"></span><br><span class="line"><span class="comment"># 同步镜像</span></span><br><span class="line">GENTOO_MIRRORS=<span class="string">&quot;https://mirrors.tuna.tsinghua.edu.cn/gentoo&quot;</span></span><br><span class="line"><span class="comment"># 备选</span></span><br><span class="line"><span class="comment"># GENTOO_MIRRORS=&quot;https://mirrors.ustc.edu.cn/gentoo/&quot;</span></span><br><span class="line"><span class="comment"># GENTOO_MIRRORS=&quot;https://mirrors.aliyun.com/gentoo/&quot;</span></span><br><span class="line"><span class="comment"># GENTOO_MIRRORS=&quot;https://mirrors.cloud.tencent.com/gentoo/&quot;</span></span><br><span class="line"><span class="comment"># GENTOO_MIRRORS=&quot;https://mirrors.huaweicloud.com/gentoo/&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># emerge的默认选项</span></span><br><span class="line">EMERGE_DEFAULT_OPTS=<span class="string">&quot;--keep-going --with-bdeps=y --quiet --ask --verbose&quot;</span>   </span><br><span class="line"></span><br><span class="line"><span class="comment"># 每次安装完包之后自动清理</span></span><br><span class="line">AUTO_CLEAN=<span class="string">&quot;yes&quot;</span>  </span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定软件包的可用性和稳定性级别。</span></span><br><span class="line"><span class="comment"># 如果更喜欢最新那这里用~amd64(接受安装和更新处于测试阶段的软件包)</span></span><br><span class="line">ACCEPT_KEYWORDS=<span class="string">&quot;amd64&quot;</span>           </span><br><span class="line"><span class="comment"># 接受所有许可证的软件</span></span><br><span class="line">ACCEPT_LICENSE=<span class="string">&quot;*&quot;</span>                </span><br><span class="line"></span><br><span class="line"><span class="comment"># 语言设置</span></span><br><span class="line">L10N=<span class="string">&quot;en-US zh-CN en zh&quot;</span> </span><br><span class="line">LINGUAS=<span class="string">&quot;en_US zh_CN en zh&quot;</span>          </span><br><span class="line"></span><br><span class="line"><span class="comment"># intel集成显卡和nvidia显卡(不使用novueau)</span></span><br><span class="line">VIDEO_CARDS=<span class="string">&quot;intel i965 iris nvidia&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># intel声卡</span></span><br><span class="line">ALSA_CARDS=<span class="string">&quot;hda_intel&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 输入设备 非笔记本去除后面的synaptics</span></span><br><span class="line">INPUT_DEVICES=<span class="string">&quot;libinput synaptics&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置GRUB版本</span></span><br><span class="line">GRUB_PLATFORMS=<span class="string">&quot;efi-64&quot;</span>            </span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用ccache来大大提高重新编译时的速度,安装ccache后解除注释</span></span><br><span class="line"><span class="comment"># CCACHE=&quot;parallel-fetch ccache&quot;  </span></span><br><span class="line"><span class="comment"># ccache使用的目录</span></span><br><span class="line"><span class="comment"># CCACHE_DIR=&quot;/var/cache/ccache&quot;     </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用aria2提高下载速度（不设置也无大碍，设置的话一定要注意指令拼写正确）,</span></span><br><span class="line"><span class="comment"># 安装aria2后解除注释</span></span><br><span class="line"><span class="comment"># FETCHCOMMAND=&quot;/usr/bin/aria2c -d \$&#123;DISTDIR&#125; -o \$&#123;FILE&#125; \</span></span><br><span class="line"><span class="comment">#   --allow-overwrite=true --max-tries=5 --max-file-not-found=2 \</span></span><br><span class="line"><span class="comment">#	--max-concurrent-downloads=5 --connect-timeout=5  --timeout=5 \</span></span><br><span class="line"><span class="comment">#	--split=5 --min-split-size=2M --lowest-speed-limit=20K \</span></span><br><span class="line"><span class="comment">#	--max-connection-per-server=9 --uri-selector=feedback \$&#123;URI&#125;&quot;</span></span><br><span class="line"><span class="comment"># RESUMECOMMAND=&quot;$&#123;FETCHCOMMAND&#125;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># USE变量</span></span><br><span class="line"><span class="comment"># 用户希望在系统中启用的Portage特性列表,影响Portage的行为。</span></span><br><span class="line"><span class="comment"># 由于这是一个增量变量，可以在不直接覆盖通过 Gentoo profile</span></span><br><span class="line"><span class="comment"># 实现的FEATURES值的情况下添加FEATURES值。</span></span><br><span class="line">FEATURES=<span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># gnome和kde及其相关组件</span></span><br><span class="line">DESK_ENV=<span class="string">&quot;-gnome -gnome-shell -gnome-keyring -nautilus -kde icu&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 不使用systemd plymouth consolekit 只使用elogind</span></span><br><span class="line"><span class="comment"># 旧教程会使用consolekit，elogind是consolekit未来的替代品</span></span><br><span class="line">FUCKSV=<span class="string">&quot;-systemd -bindist -mdev elogind -oss -grub -plymouth -consolekit&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 对于音频相关软件使用pulseaudio alsa jack特性</span></span><br><span class="line">AUDIO=<span class="string">&quot;alsa jack pulseaudio&quot;</span></span><br><span class="line"></span><br><span class="line">SOFTWARE=<span class="string">&quot;sudo client git openmp minizip udev blkid efi hwdb smack \</span></span><br><span class="line"><span class="string">    acpi ccache dbus policykit udisks cjk emoji -test&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 网络相关</span></span><br><span class="line">NET=<span class="string">&quot;network networkmanager connection-sharing wifi http2 dhclient \</span></span><br><span class="line"><span class="string">    -dhcpcd policykit nftables&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 图形相关</span></span><br><span class="line">VIDEO=<span class="string">&quot;X vulkan layers glamor nvidia gallium&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义需要的USE变量</span></span><br><span class="line">USE=<span class="string">&quot;<span class="variable">$&#123;DESK_ENV&#125;</span> <span class="variable">$&#123;FUCKSV&#125;</span> <span class="variable">$&#123;AUDIO&#125;</span> <span class="variable">$&#123;NET&#125;</span> <span class="variable">$&#123;VIDEO&#125;</span> <span class="variable">$&#123;SOFTWARE&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 二进制包保存路径</span></span><br><span class="line"><span class="comment"># PKGDIR=&quot;/var/cache/binpkgs&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用二进制软件包,加入USE生效</span></span><br><span class="line"><span class="comment"># BIN_PKG=&quot;getbinpkg&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># emerge时用到的代理 需要代理时候自行设置</span></span><br><span class="line"><span class="comment"># http_proxy=&quot;http://127.0.0.1:8889&quot; </span></span><br><span class="line"><span class="comment"># https_proxy=&quot;http://127.0.0.1:8889&quot;</span></span><br></pre></td></tr></table></figure>

<h4 id="永久禁用nouveau驱动模块"><a href="#永久禁用nouveau驱动模块" class="headerlink" title="永久禁用nouveau驱动模块"></a>永久禁用nouveau驱动模块</h4><p><strong>强烈要求你禁用Nouveau驱动！！能省掉以后很多莫名其妙的麻烦！</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /etc/modprobe.d/</span><br><span class="line">nano -w /etc/modprobe.d/blacklist.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 写入以下内容</span></span><br><span class="line">blacklist nouveau</span><br><span class="line">blacklist lbm-nouveau</span><br><span class="line">options nouveau modeset=0</span><br></pre></td></tr></table></figure>

<p>即便在编译内核前就已经设置内核禁用Nouveau驱动了，但是内核安装时还是会默认把nouveau驱动作为内核模块自动加载。启用了nouveau驱动模块的内核会出现各式各样的莫名其妙的数不清的问题，所以为了避免以后出现这些问题，必须禁用nouveau模块。</p>
<h4 id="内核配置和编译"><a href="#内核配置和编译" class="headerlink" title="内核配置和编译"></a>内核配置和编译</h4><p>安装内核源码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">emerge --ask sys-kernel/gentoo-sources</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果安装多个版本内核时执行</span></span><br><span class="line">eselect kernel list 	<span class="comment"># 查看内核列表</span></span><br><span class="line">eselect kernel <span class="built_in">set</span> 1 	<span class="comment"># 选择内核版本</span></span><br></pre></td></tr></table></figure>

<p>某些驱动程序在工作之前需要在系统上安装其他固件。这通常是网络接口的情况，尤其是无线网络接口。此外，在使用开源驱动程序时，来自AMD，Nvidia和Intel等供应商的现代视频芯片通常需要外部固件文件。大多数固件都封装在<a href="https://links.jianshu.com/go?to=https://packages.gentoo.org/packages/sys-kernel/linux-firmware">sys-kernel &#x2F; linux-firmware</a>中：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">emerge --ask --quiet sys-kernel/linux-firmware</span><br></pre></td></tr></table></figure>

<p>除了独立显卡硬件和网络接口之外，CPU 可能也需要固件更新。通常这种固件被称为<em>微码（microcode）</em>。有时需要更新版本的微码来修补 CPU 硬件中的不稳定性、安全问题或其他复杂的错误。</p>
<p>AMD CPU 的微码更新在前面提到的 <a href="https://packages.gentoo.org/packages/sys-kernel/linux-firmware">sys-kernel&#x2F;linux-firmware</a> 软件包内分发。Intel CPU 的微码可以在 <a href="https://packages.gentoo.org/packages/sys-firmware/intel-microcode">sys-firmware&#x2F;intel-microcode</a> 包中找到，并且需要单独安装</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Intel CPU 执行</span></span><br><span class="line">emerge --ask sys-firmware/intel-microcode</span><br></pre></td></tr></table></figure>


<p>三种方法安装内核</p>
<p><strong>安装系统时可选择安装二进制内核，系统安装完后再配置编译内核，参考 <a href="https://wiki.gentoo.org/wiki/Handbook:AMD64/Installation/Kernel/zh-cn">配置Linux内核 - Gentoo Wiki</a></strong></p>
<ol>
<li><p>全自动安装</p>
<p>当为基于 amd64 的系统安装和编译内核时，Gentoo 推荐使用 <a href="https://packages.gentoo.org/packages/sys-kernel/gentoo-sources">sys-kernel&#x2F;gentoo-sources</a> 软件包</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">emerge --ask sys-kernel/installkernel</span><br></pre></td></tr></table></figure>
</li>
<li><p>混合安装(推荐方式)</p>
<p>生成内核配置文件</p>
<p>将genkernel的默认内核配置文件“generated-config”复制过来，里面已经设置好了绝大部分应用场景以及绝大部分硬件驱动的配置，非常方便，值得借过来使用，只需要在自己手动配置内核的时候将其加载，在其基础上做一点点轻微的修改或完全不修改都可以，对内核新手极其友好！</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">emerge --ask sys-kernel/genkernel</span><br><span class="line"></span><br><span class="line"><span class="comment"># 以genkernel的配置文件为基础进行自定义配置</span></span><br><span class="line"><span class="built_in">cp</span> /usr/share/genkernel/arch/x86_64/generated-config /usr/src/linux/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 备份</span></span><br><span class="line"><span class="built_in">cp</span> /usr/src/linux/generated-config /usr/src/linux/generated-config.bak </span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译</span></span><br><span class="line">genkernel --mountboot --install all</span><br></pre></td></tr></table></figure>

<p><a href="**%E8%BF%99%E4%B8%AA%E5%91%BD%E4%BB%A4%E4%B8%8D%E8%83%BD%E5%A4%9A%E6%AC%A1%E6%89%A7%E8%A1%8C%EF%BC%8C%E5%A6%82%E6%9E%9C%E9%87%8D%E5%A4%8D%E6%89%A7%E8%A1%8C%E9%9C%80%E8%A6%81%E6%89%8B%E5%8A%A8%E4%BF%AE%E6%94%B9fstab%E5%8E%BB%E6%8E%89%E9%87%8D%E5%A4%8D%E7%9A%84%E9%A1%B9%EF%BC%8C%E5%90%A6%E5%88%99%E4%BC%9A%E5%AF%BC%E8%87%B4%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E6%8C%82%E8%BD%BD%E5%BC%82%E5%B8%B8%EF%BC%8C%E7%B3%BB%E7%BB%9F%E6%97%A0%E6%B3%95%E5%90%AF%E5%8A%A8**">^注意</a>如果想在以后支持jack低延迟实时音频组件（Jack-Audio-Connection-Kit），则需要vim generated-config，手动设置“CONFIG_CGROUPS&#x3D;y”、“CONFIG_CGROUP_SCHED&#x3D;y”、“CONFIG_RT_GROUP_SCHED&#x3D;y”，然后重新make menuconfig载入保存generated-config一遍，接下来再编译内核。<br><a href="**%E8%BF%99%E4%B8%AA%E5%91%BD%E4%BB%A4%E4%B8%8D%E8%83%BD%E5%A4%9A%E6%AC%A1%E6%89%A7%E8%A1%8C%EF%BC%8C%E5%A6%82%E6%9E%9C%E9%87%8D%E5%A4%8D%E6%89%A7%E8%A1%8C%E9%9C%80%E8%A6%81%E6%89%8B%E5%8A%A8%E4%BF%AE%E6%94%B9fstab%E5%8E%BB%E6%8E%89%E9%87%8D%E5%A4%8D%E7%9A%84%E9%A1%B9%EF%BC%8C%E5%90%A6%E5%88%99%E4%BC%9A%E5%AF%BC%E8%87%B4%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E6%8C%82%E8%BD%BD%E5%BC%82%E5%B8%B8%EF%BC%8C%E7%B3%BB%E7%BB%9F%E6%97%A0%E6%B3%95%E5%90%AF%E5%8A%A8**">^注意</a>: 使用nvidia显卡闭源驱动，需要将内核配置中“CONFIG_I2C_NVIDIA_GPU”这一项禁用，否则会和官方nvidia-drivers冲突！！！
</p>
</li>
<li><p>全手动安装</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">emerge sys-apps/pciutils</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /usr/src/linux</span><br><span class="line"><span class="comment"># 配置内核</span></span><br><span class="line">make menuconfig </span><br></pre></td></tr></table></figure></li>
</ol>
<p>![[Gentoo安装&#x2F;IMG-20241210170128644.png]]<br>有些内核选项是必须的，必须编译到内核中，而不是作为模块加载。<code>*</code>表示包括到内核中，<code>M</code>表示作为模块加载，<code>[]</code>只有包括到内核中和排除在外两种选项，<code>&lt;&gt;</code>则有包括到内核中、排除在外和以模块加载三种选项。下面这些选项都必须以<code>*</code>方式编译到内核中。</p>
<p>devtmpfs支持。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Device Drivers ---&gt;</span><br><span class="line">  Generic Driver Options ---&gt;</span><br><span class="line">    [*] Maintain a devtmpfs filesystem to mount at /dev</span><br><span class="line">    [*]   Automount devtmpfs at /dev, after the kernel mounted the rootfs</span><br></pre></td></tr></table></figure>

<p>SCSI磁盘支持。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Device Drivers ---&gt;</span><br><span class="line">   SCSI device support  ---&gt;</span><br><span class="line">      &lt;*&gt; SCSI disk support</span><br></pre></td></tr></table></figure>
<p>选择支持的文件系统。<strong>因为ESP分区用的FAT32格式化的，根目录用的XFS格式化的，所以这里这两项（FAT32也就是VFAT）必须包括到内核中，虚拟内存和proc文件系统也是必选的</strong>。其实这里还可以取消掉不需要的文件系统，但是对于新手不建议取消任何自己不明白的东西，很容易弄的最后内核没办法启动。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">File systems ---&gt;</span><br><span class="line">  &lt; &gt; Second extended fs support</span><br><span class="line">  &lt; &gt; The Extended 3 (ext3) filesystem</span><br><span class="line">  &lt;*&gt; The Extended 4 (ext4) filesystem</span><br><span class="line">  &lt; &gt; Reiserfs support</span><br><span class="line">  &lt; &gt; JFS filesystem support</span><br><span class="line">  &lt; &gt; XFS filesystem support</span><br><span class="line">  &lt; &gt; Btrfs filesystem support</span><br><span class="line">  DOS/FAT/NT Filesystems  ---&gt;</span><br><span class="line">    &lt;*&gt; MSDOS fs support</span><br><span class="line">    &lt;*&gt; VFAT (Windows-95) fs support</span><br><span class="line"> </span><br><span class="line">Pseudo Filesystems ---&gt;</span><br><span class="line">    [*] /proc file system support</span><br><span class="line">    [*] Tmpfs virtual memory file system support (former shm fs)</span><br></pre></td></tr></table></figure>
<p>如果处理器是多核的，还需要开启SMP（对称多处理器支持）。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Processor type and features  ---&gt;</span><br><span class="line">  [*] Symmetric multi-processing support</span><br></pre></td></tr></table></figure>
<p>USB也必须启用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Device Drivers ---&gt;</span><br><span class="line">  HID support  ---&gt;</span><br><span class="line">    -*- HID bus support</span><br><span class="line">    &lt;*&gt;   Generic HID driver</span><br><span class="line">    [*]   Battery level reporting for HID devices</span><br><span class="line">      USB HID support  ---&gt;</span><br><span class="line">        &lt;*&gt; USB HID transport layer</span><br><span class="line">  [*] USB support  ---&gt;</span><br><span class="line">    &lt;*&gt;     xHCI HCD (USB 3.0) support</span><br><span class="line">    &lt;*&gt;     EHCI HCD (USB 2.0) support</span><br><span class="line">    &lt;*&gt;     OHCI HCD (USB 1.1) support</span><br></pre></td></tr></table></figure>

<p><strong>系统体系相关的内核配置</strong></p>
<p>因为选择了multlib，所以32和64位的程序都会安装。为了支持32位程序，必须启用32位程序模拟功能。这里其实倒是不用怎么改，默认已经都选上了。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Processor type and features  ---&gt;</span><br><span class="line">   [*] Machine Check / overheating reporting </span><br><span class="line">   [*]   Intel MCE Features</span><br><span class="line">   [*]   AMD MCE Features</span><br><span class="line">   Processor family (AMD-Opteron/Athlon64)  ---&gt;</span><br><span class="line">      ( ) Opteron/Athlon64/Hammer/K8</span><br><span class="line">      ( ) Intel P4 / older Netburst based Xeon</span><br><span class="line">      ( ) Core 2/newer Xeon</span><br><span class="line">      ( ) Intel Atom</span><br><span class="line">      (*) Generic-x86-64</span><br><span class="line">Binary Emulations  ---&gt;</span><br><span class="line">   [*] IA32 Emulation</span><br></pre></td></tr></table></figure>
<p>启用GPT支持，因为前面我用的GPT分区表，EFI启动方式，所以这两项也必须启用。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-*- Enable the block layer ---&gt;</span><br><span class="line">   Partition Types ---&gt;</span><br><span class="line">      [*] Advanced partition selection</span><br><span class="line">      [*] EFI GUID Partition support</span><br></pre></td></tr></table></figure>

<p>EFI的支持。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Processor type and features  ---&gt;</span><br><span class="line">    [*] EFI runtime service support </span><br><span class="line">    [*]   EFI stub support</span><br><span class="line">    [*]     EFI mixed-mode support</span><br><span class="line"> </span><br><span class="line">Firmware Drivers  ---&gt;</span><br><span class="line">    EFI (Extensible Firmware Interface) Support  ---&gt;</span><br><span class="line">        &lt;*&gt; EFI Variable Support via sysfs</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 编译内核</span><br><span class="line">make -j12 #（CPU核心数根据机器cpu调整）      </span><br><span class="line">make modules_install</span><br><span class="line">make install</span><br></pre></td></tr></table></figure>

<p>使用二进制内核</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装二进制内核</span></span><br><span class="line">emerge --ask sys-kernel/gentoo-kernel-bin</span><br></pre></td></tr></table></figure>

<p>可选：生成一个initramfs</p>
<p>在某些情况中需要建立一个initramfs——一个基于内存的初始化文件系统。最觉的原因是当重要的文件系统位置（如&#x2F;usr&#x2F;或&#x2F;var&#x2F;）在分离的分区。通过一个initramfs，这些分区可以使用initramfs里面的工具来完成挂载。</p>
<p>用dracut生成内核的initramfs，快速且方便，新手友好</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">emerge --ask sys-kernel/dracut</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /boot</span><br><span class="line"></span><br><span class="line">dracut --hostonly</span><br></pre></td></tr></table></figure>

<p>或者使用genkernel生成内核的initramfs</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> /usr/src/linux/generated-config /etc/kernels/kernel-config-&lt;内核版本号&gt;-gentoo-x86_64</span><br><span class="line">genkernel --install initramfs</span><br></pre></td></tr></table></figure>



<h3 id="系统环境配置"><a href="#系统环境配置" class="headerlink" title="系统环境配置"></a>系统环境配置</h3><h4 id="配置主机名"><a href="#配置主机名" class="headerlink" title="配置主机名"></a>配置主机名</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#nano -w /etc/conf.d/hostname</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;HOSTNAME&quot;</span> &gt; /etc/hostname</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="配置系统时区"><a href="#配置系统时区" class="headerlink" title="配置系统时区"></a>配置系统时区</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ls</span> /usr/share/zoneinfo</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Asia/Shanghai&quot;</span> &gt; /etc/timezone</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解决时间差8小时问题（双系统时会遇到Windows时间不对）</span></span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">rm</span> /etc/localtime</span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">ln</span> -sv /usr/share/zoneinfo/Universal /etc/localtime</span><br><span class="line"></span><br><span class="line"><span class="built_in">sudo</span> emerge --config sys-libs/timezone-data</span><br></pre></td></tr></table></figure>

<h4 id="配置编码"><a href="#配置编码" class="headerlink" title="配置编码"></a>配置编码</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nano -w /etc/locale.gen 		<span class="comment">#将以下几项取消注释，如果没有手动输入</span></span><br><span class="line"></span><br><span class="line">en_US ISO-8859-1</span><br><span class="line">en_US.UTF-8 UTF-8</span><br><span class="line">zh_CN GBK </span><br><span class="line">zh_CN.UTF-8 UTF-8</span><br><span class="line"></span><br><span class="line">locale-gen 						<span class="comment"># 更新</span></span><br></pre></td></tr></table></figure>

<h4 id="设置系统locale"><a href="#设置系统locale" class="headerlink" title="设置系统locale"></a>设置系统locale</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#查看可用系统时区和地区配置</span></span><br><span class="line">eselect locale list  </span><br><span class="line"></span><br><span class="line"><span class="comment">#这里只能选择“en-US.utf8”！！假如设置成了中文后，整个系统的终端命令行会乱码！！！</span></span><br><span class="line">eselect locale <span class="built_in">set</span> X    </span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新环境</span></span><br><span class="line">env-update &amp;&amp; <span class="built_in">source</span> /etc/profile &amp;&amp; <span class="built_in">export</span> PS1=<span class="string">&quot;(chroot) <span class="variable">$&#123;PS1&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure>

<h4 id="配置sudo自动补全"><a href="#配置sudo自动补全" class="headerlink" title="配置sudo自动补全"></a>配置sudo自动补全</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> emerge --ask app-shells/bash-completion</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加 bash-completion 全局 USE 标记</span></span><br><span class="line"><span class="built_in">sudo</span> vim /etc/protage/make.conf</span><br><span class="line">USE=<span class="string">&quot;... bash-completion&quot;</span></span><br><span class="line"><span class="built_in">sudo</span> emerge --avuDN world</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启用bash-completion的功能</span></span><br><span class="line"><span class="built_in">sudo</span> eselect bashcomp <span class="built_in">enable</span> base</span><br><span class="line"><span class="comment"># sudo bashcomp-config enable base</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看哪些命令支持bash-completion</span></span><br><span class="line"><span class="built_in">sudo</span> eselect bashcomp list</span><br></pre></td></tr></table></figure>

<h4 id="安装网络工具"><a href="#安装网络工具" class="headerlink" title="安装网络工具"></a>安装网络工具</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 无线</span></span><br><span class="line">emerge --ask net-wireless/iw</span><br><span class="line">emerge --ask net-wireless/wpa_supplicant</span><br><span class="line"></span><br><span class="line"><span class="comment"># 有线</span></span><br><span class="line">emerge --ask net-misc/netifrc <span class="comment"># openrc 自带</span></span><br><span class="line"><span class="comment"># emerge --ask net-misc/systemd-networkd</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># PPPoE环境</span></span><br><span class="line">emerge --ask net-dialup/ppp</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果使用GUI可跳过</span></span><br><span class="line"><span class="comment"># 要在引导时激活网络接口，需要将它们添加到默认运行级别</span></span><br><span class="line"><span class="comment"># 首先使用 ifconfig 查看网络接口名称</span></span><br><span class="line"><span class="built_in">cd</span> /etc/init.d/</span><br><span class="line"><span class="built_in">ln</span> -s net.lo net.eno1 <span class="comment"># 此处网卡名称需要和实际网卡名对应</span></span><br><span class="line">rc-update add net.eno1 default</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>![[Gentoo安装&#x2F;IMG-20241210170128726.png]]<br>安装配置networkmanager</p>
<p>最方便支持多种联网方式的工具是NetworkManager,基本满足所有需求，但同时它的依赖有点多。如果使用桌面环境的话建议安装。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nano -w /etc/portage/make.conf:</span><br><span class="line">USE=“networkmanager connection-sharing dhclient policykit ppp wifi -dhcpcd”</span><br><span class="line"></span><br><span class="line">emerge net-misc/networkmanager </span><br><span class="line"></span><br><span class="line">nano -w /etc/dhcp/dhclient.conf：</span><br><span class="line">send host-name <span class="string">&quot;Gentoo&quot;</span>    <span class="comment">#your hostname</span></span><br><span class="line"></span><br><span class="line">nano -w /etc/NetworkManager/NetworkManager.conf</span><br><span class="line">[connectivity]</span><br><span class="line">uri=http://nmcheck.gnome.org/check_network_status.txt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">nano -w /etc/NetworkManager/NetworkManager.conf</span><br><span class="line">[main]</span><br><span class="line">plugins=keyfile</span><br><span class="line">dns=dnsmasq</span><br><span class="line">hostname-mode=none</span><br><span class="line"></span><br><span class="line">rc-update del dhcpcd</span><br><span class="line">rc-update add NetworkManager default</span><br><span class="line"><span class="comment"># systemctl disable dhcpcd</span></span><br><span class="line"><span class="comment"># systemctl enable networkmanager</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#gpasswd -a &lt;你的桌面使用用户名&gt; plugdev   #没有这一步，用户将不能使用networkmanager，也就不能上网。不过先跳过这一步，在设置系统用户的时候再做。</span></span><br><span class="line"></span><br><span class="line">nano -w /etc/dnsmasq.conf:</span><br><span class="line">server=114.114.114.114</span><br></pre></td></tr></table></figure>

<h4 id="安装必要的工具"><a href="#安装必要的工具" class="headerlink" title="安装必要的工具"></a>安装必要的工具</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 系统日志</span></span><br><span class="line">emerge --ask app-admin/sysklogd</span><br><span class="line">rc-update add sysklogd default</span><br><span class="line"><span class="comment"># systemctl enable sysklogd</span></span><br><span class="line"><span class="comment"># systemctl start sysklogd</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 计划任务管理</span></span><br><span class="line">emerge --ask sys-process/cronie</span><br><span class="line">rc-update add cronie default</span><br><span class="line"><span class="comment"># systemctl enable cronie</span></span><br><span class="line"><span class="comment"># systemctl start cronie</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 文件索引</span></span><br><span class="line">emerge --ask sys-apps/mlocate</span><br><span class="line"></span><br><span class="line"><span class="comment"># 电源管理</span></span><br><span class="line">emerge --ask sys-power/acpid</span><br><span class="line">rc-update add acpid default</span><br><span class="line"><span class="comment"># systemctl enable acpid</span></span><br><span class="line"><span class="comment"># systemctl start acpid</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># CPU温度管理</span></span><br><span class="line">emerge sys-power/thermald</span><br><span class="line">rc-update add thermald default</span><br><span class="line"><span class="comment"># systemctl enable thermald </span></span><br><span class="line"><span class="comment"># systemctl start thermald</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设备管理工具</span></span><br><span class="line">emerge --ask virtual/udev</span><br><span class="line">rc-update add udev sysinit</span><br><span class="line"><span class="comment"># systemctl enable udev</span></span><br><span class="line"><span class="comment"># systemctl start udev</span></span><br></pre></td></tr></table></figure>



<h4 id="配置系统用户"><a href="#配置系统用户" class="headerlink" title="配置系统用户"></a>配置系统用户</h4><p>安装sudo</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">emerge app-admin/sudo</span><br><span class="line"></span><br><span class="line">nano -w /etc/sudoers</span><br></pre></td></tr></table></figure>

<p>把 <code>%wheel ALL=(ALL) ALL</code> 这一行去掉注释，如果希望执行sudu不需要密码则取消注释<code>%wheel ALL=(ALL) NOPASSWD:ALL</code></p>
<p>添加用户</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">groupadd <span class="built_in">sudo</span> </span><br><span class="line">useradd -m -G <span class="built_in">users</span>,wheel,usb,portage,video,audio,<span class="built_in">sudo</span> -s /bin/bash [用户名]</span><br><span class="line"><span class="built_in">chmod</span> 700 /home/[用户名] -R</span><br></pre></td></tr></table></figure>

<p>设置密码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 设置root密码</span></span><br><span class="line">passwd root</span><br><span class="line"></span><br><span class="line">passwd &#123;用户名&#125;</span><br></pre></td></tr></table></figure>

<h4 id="添加操作系统启动项"><a href="#添加操作系统启动项" class="headerlink" title="添加操作系统启动项"></a>添加操作系统启动项</h4><p>在<code>/etc/portage/make.conf</code>中添加grub配置</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">GRUB_PLATFORMS=<span class="string">&quot;efi-64&quot;</span></span><br></pre></td></tr></table></figure>

<p>安装grub2</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">emerge --ask sys-boot/grub:2</span><br><span class="line">emerge --ask sys-boot/os-prober <span class="comment"># 用于识别其他分区的系统（双系统）</span></span><br></pre></td></tr></table></figure>

<p>grub安装到硬盘并生成开机启动项</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">grub-install --target=x86_64-efi --efi-directory=/boot/efi --bootloader-id=Gentoo</span><br><span class="line">grub-mkconfig -o /boot/grub/grub.cfg</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mount -o remount,rw /sys/firmware/efi/efivarsos-prober</span><br></pre></td></tr></table></figure>

<p>如果出现No space left on device，请运行以下命令，之后再重复上述步骤</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mount -t efivarfs efivarfs /sys/firmware/efi/efivars</span><br><span class="line"><span class="built_in">rm</span> /sys/firmware/efi/efivars/dump-*</span><br></pre></td></tr></table></figure>

<p>grub默认配置添加自定义配置，可提高intel cpu的稳定性和性能</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nano -w /etc/default/grub：</span><br><span class="line">GRUB_CMDLINE_LINUX_DEFAULT=<span class="string">&quot;intel_idle.max_cstate=0 processor.max_cstate=1&quot;</span></span><br><span class="line"></span><br><span class="line">grub-mkconfig -o /boot/grub/grub.cfg</span><br></pre></td></tr></table></figure>

<h4 id="清理"><a href="#清理" class="headerlink" title="清理"></a>清理</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">rm</span> /stage3-*.tag.ge</span><br><span class="line"><span class="comment"># 退出chroot</span></span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 卸载</span></span><br><span class="line">umount -lR /mnt/gentoo</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启</span></span><br><span class="line">reboot</span><br><span class="line"></span><br><span class="line"><span class="comment"># 成功开机并进入系统后</span></span><br><span class="line">grub-mkconfig -o /boot/grub/grub.cfg</span><br></pre></td></tr></table></figure>

<p><strong>如果开机不正常参考挂载文件系统(不要执行分区和mkfs操作)，可重新chroot进入系统修改错误的配置。</strong></p>
<h3 id="桌面环境"><a href="#桌面环境" class="headerlink" title="桌面环境"></a>桌面环境</h3><h4 id="安装基础环境"><a href="#安装基础环境" class="headerlink" title="安装基础环境"></a>安装基础环境</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 从 x11-base/xorg-drivers-21.1 开始,x11-base/xorg-drivers更改 [USE 标志]设置</span></span><br><span class="line"><span class="comment"># 这将弃用x11-drivers/xf86-video-intel驱动程序，以支持内置的通用模式设置DDX驱动程序</span></span><br><span class="line"><span class="comment"># 具有video_cards_i915USE 标志集将继续安装 Intel DDX 驱动程序。</span></span><br><span class="line">emerge --ask x11-base/xorg-drivers</span><br><span class="line"></span><br><span class="line"><span class="comment"># 英伟达显卡</span></span><br><span class="line">emerge --ask x11-drivers/nvidia-drivers</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装xorg-server</span></span><br><span class="line">emerge --ask x11-base/xorg-server</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装双显卡设置工具</span></span><br><span class="line">emerge --ask x11-apps/xrandr </span><br><span class="line"></span><br><span class="line"><span class="comment"># 让nvidia自动设置双显卡prime配置</span></span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">rm</span> /etc/X11/xorg.conf </span><br><span class="line"><span class="built_in">sudo</span> nvidia-xconfig --prime </span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装完更新当前系统组件环境</span></span><br><span class="line">env-update &amp;&amp; <span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure>

<p><a href="**%E8%BF%99%E4%B8%AA%E5%91%BD%E4%BB%A4%E4%B8%8D%E8%83%BD%E5%A4%9A%E6%AC%A1%E6%89%A7%E8%A1%8C%EF%BC%8C%E5%A6%82%E6%9E%9C%E9%87%8D%E5%A4%8D%E6%89%A7%E8%A1%8C%E9%9C%80%E8%A6%81%E6%89%8B%E5%8A%A8%E4%BF%AE%E6%94%B9fstab%E5%8E%BB%E6%8E%89%E9%87%8D%E5%A4%8D%E7%9A%84%E9%A1%B9%EF%BC%8C%E5%90%A6%E5%88%99%E4%BC%9A%E5%AF%BC%E8%87%B4%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E6%8C%82%E8%BD%BD%E5%BC%82%E5%B8%B8%EF%BC%8C%E7%B3%BB%E7%BB%9F%E6%97%A0%E6%B3%95%E5%90%AF%E5%8A%A8**">^注意</a>: 以后每次重新编译安装内核kernel后，均须要运行一遍“emerge @module-rebuild”，重新编译安装nvidia驱动模块加载到内核之中，否则nvidia驱动无法加载！！！</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsmod | grep nvidia</span><br><span class="line"><span class="built_in">sudo</span> rmmod nvidia</span><br><span class="line"><span class="built_in">sudo</span> modprobe nvidia</span><br><span class="line"></span><br><span class="line">lsmod|grep nvidia</span><br><span class="line"></span><br><span class="line"><span class="built_in">sudo</span> vim /etc/modules-load.d/nvidia.conf:</span><br><span class="line">nvidia</span><br><span class="line"></span><br><span class="line"><span class="built_in">sudo</span> vim /etc/modprobe.d/nvidia-drm.conf:</span><br><span class="line">options nvidia-drm modeset=1</span><br><span class="line"></span><br><span class="line"><span class="built_in">sudo</span> rc-update add modules boot</span><br><span class="line"><span class="built_in">sudo</span> reboot </span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="LightDM"><a href="#LightDM" class="headerlink" title="LightDM"></a>LightDM</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装LightDM，使用KDE可忽略</span></span><br><span class="line"><span class="built_in">sudo</span> emerge --ask gui-libs/display-manager-init</span><br><span class="line"><span class="built_in">sudo</span> emerge --ask x11-misc/lightdm </span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果不安装桌面管理器需要加入环境，登录后自动启动桌面</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;XSESSION=\&quot;awesome\&quot;&quot;</span> &gt; /etc/env.d/90xsession</span><br><span class="line">env-update &amp;&amp; <span class="built_in">source</span> /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="comment"># openrc</span></span><br><span class="line">nano -w /etc/conf.d/display-manager</span><br><span class="line">DISPLAYMANAGER=<span class="string">&quot;lightdm&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置默认开机启动</span></span><br><span class="line">rc-update add display-manager default</span><br><span class="line"><span class="comment"># 设置dubs默认开机启动，虽然display-manager也会启动它，但有时候会出现奇怪的问题</span></span><br><span class="line">rc-update add dbus default</span><br><span class="line"></span><br><span class="line"><span class="comment"># 手动启动</span></span><br><span class="line">rc-service dbus start </span><br><span class="line">rc-service display-manager start</span><br><span class="line"></span><br><span class="line"><span class="comment"># systemd</span></span><br><span class="line"><span class="comment"># systemctl enable lightdm.service</span></span><br></pre></td></tr></table></figure>

<h4 id="KDE"><a href="#KDE" class="headerlink" title="KDE"></a>KDE</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装KDE桌面可忽略上边LightDM,同时需要删除USE中`-kde`</span></span><br><span class="line"><span class="built_in">sudo</span> emerge --ask x11-misc/sddm</span><br><span class="line"><span class="built_in">sudo</span> emerge --ask kde-plasma/plasma-meta</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装Dock</span></span><br><span class="line"><span class="comment"># 安装完打开latte-dock后会自动设置为开机自启动</span></span><br><span class="line"><span class="built_in">sudo</span> emerge --ask kde-misc/latte-dock</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改登陆管理器配置文件</span></span><br><span class="line">nano -w /etc/conf.d/display-manager</span><br><span class="line"></span><br><span class="line"><span class="comment"># --- xdm内容</span></span><br><span class="line">DISPLAYMANAGER=<span class="string">&quot;sddm&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#---</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加SDDM开机启动</span></span><br><span class="line"><span class="built_in">sudo</span> rc-update add xdm default</span><br><span class="line"><span class="comment"># 启动SDDM</span></span><br><span class="line"><span class="built_in">sudo</span> rc-service xdm start </span><br><span class="line"></span><br><span class="line"><span class="comment"># Systemd</span></span><br><span class="line"><span class="comment"># sudo systemctl enable xdm</span></span><br><span class="line"><span class="comment"># sudo systemctl start xdm</span></span><br></pre></td></tr></table></figure>

<h4 id="Awesome"><a href="#Awesome" class="headerlink" title="Awesome"></a>Awesome</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># awesome 平铺式桌面</span></span><br><span class="line">emerge --ask x11-wm/awesome </span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试</span></span><br><span class="line"><span class="built_in">mkdir</span> -p ~/.config/awesome/</span><br><span class="line"><span class="built_in">cp</span> /etc/xdg/awesome/rc.lua ~/.config/awesome/rc.lua</span><br><span class="line">awesome -k</span><br><span class="line"></span><br><span class="line"><span class="comment"># 壁纸支持</span></span><br><span class="line">emerge --ask media-gfx/feh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在~/.config/awesome/theme/theme中添加一下内容</span></span><br><span class="line">theme.wallpaper_cmd = &#123; <span class="string">&quot;wesetbg -f .config/awesome/themes/awesome-wallpaper.png&quot;</span> &#125;</span><br></pre></td></tr></table></figure>

<h4 id="Mate"><a href="#Mate" class="headerlink" title="Mate"></a>Mate</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 选择profile</span></span><br><span class="line">eselect profile list</span><br><span class="line">eselect profile <span class="built_in">set</span> 0 <span class="comment"># 选择default/linux/amd64/23.0/desktop</span></span><br><span class="line"><span class="comment"># 更新</span></span><br><span class="line">emerge -auvDU @world</span><br><span class="line"></span><br><span class="line"><span class="comment"># Meta 桌面</span></span><br><span class="line">emerge --ask mate-base/mate</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改xsession配置</span></span><br><span class="line">nano -w /etc/env.d/90xsession</span><br><span class="line"><span class="comment">#--- 90xsession内容</span></span><br><span class="line">XSESSION=<span class="string">&quot;Mate&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#--- </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改LightDM配置(需要安装LightDM)</span></span><br><span class="line">nano -w /etc/conf.d/display-manager</span><br><span class="line"><span class="comment">#--- display-manager内容</span></span><br><span class="line">DISPLAYMANAGER=<span class="string">&quot;lightdm&quot;</span></span><br></pre></td></tr></table></figure>

<h4 id="Xfce"><a href="#Xfce" class="headerlink" title="Xfce"></a>Xfce</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># xfce4桌面</span></span><br><span class="line">emerge --ask xfce-base/xfce4-meta </span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试桌面启动指令</span></span><br><span class="line">startxfce4 <span class="comment"># 启动Xfce桌面</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Pulseaudio音量控制</span></span><br><span class="line">emerge --ask xfce-extra/xfce4-volumed-pulse</span><br><span class="line"></span><br><span class="line"><span class="comment"># 蓝牙音乐播放组件</span></span><br><span class="line">emerge --ask xfce-extra/xfce4-pulseaudio-plugin</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示所有正在运行的程序的列表，以及每个程序占用的CPU和内存消耗。 </span></span><br><span class="line">emerge --ask xfce-extra/xfce4-taskmanager</span><br><span class="line"></span><br><span class="line"><span class="comment"># 监视和管理电源使用情况的应用程序。 这对笔记本电脑特别重要！</span></span><br><span class="line"><span class="comment"># 电源管理器允许用户调节屏幕亮度，选择最大性能或节电模式，</span></span><br><span class="line"><span class="comment"># 并在盖子关闭或按下按钮时设置休眠，暂停和关闭操作</span></span><br><span class="line">emerge --ask xfce-extra/xfce4-power-manager</span><br><span class="line"></span><br><span class="line"><span class="comment"># 适合笔记本电脑用户。 它显示电池百分比，剩余时间，电源（交流或电池），风扇状态，警告，</span></span><br><span class="line"><span class="comment"># 甚至可以配置为在特定功率级别执行命令。 此功能可用于在电池电量几乎耗尽时将笔记本电脑置于休眠模式。</span></span><br><span class="line">xfce-extra/xfce4-battery-plugin</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加几个窗口管理器主题</span></span><br><span class="line">emerge --ask x11-themes/xfwm4-themes</span><br><span class="line"></span><br><span class="line"><span class="comment"># 一个X11终端，比准系统更可配置和有用 xterm </span></span><br><span class="line">emerge --ask x11-terms/xfce4-terminal</span><br><span class="line"></span><br><span class="line"><span class="comment"># Xfce的默认图形文件管理器。</span></span><br><span class="line">emerge --ask xfce-base/thunar</span><br><span class="line"></span><br><span class="line"><span class="comment"># 允许用户从Thunar内预览某些类型的文件，例如图像和字体。</span></span><br><span class="line">emerge --ask xfce-extra/tumbler</span><br><span class="line"></span><br><span class="line"><span class="comment"># manages自动挂载可移动介质和驱动器。</span></span><br><span class="line">emerge --ask xfce-extra/thunar-volman</span><br><span class="line"></span><br><span class="line"><span class="comment"># 嵌入面板的一个小命令行。 它比打开终端运行命令更快。</span></span><br><span class="line">emerge --ask xfce-extra/xfce4-verve-plugin</span><br><span class="line"></span><br><span class="line"><span class="comment"># 提供一种方便的方法，只需点击鼠标即可安装/etc/fstab中列出的设备。</span></span><br><span class="line">emerge --ask xfce-extra/xfce4-mount-plugin</span><br><span class="line"></span><br><span class="line"><span class="comment"># 允许用户监视硬件传感器，例如CPU温度，风扇RPM，硬盘驱动器温度，主板电压等。</span></span><br><span class="line">emerge --ask xfce-extra/xfce4-sensors-plugin</span><br></pre></td></tr></table></figure>

<h4 id="音频控制"><a href="#音频控制" class="headerlink" title="音频控制"></a>音频控制</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">emerge --ask alsa-utils</span><br><span class="line">emerge --ask alsa-plugins</span><br></pre></td></tr></table></figure>

<h4 id="中文字体"><a href="#中文字体" class="headerlink" title="中文字体"></a>中文字体</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">emerge --ask media-fonts/arphicfonts</span><br><span class="line">emerge --ask media-fonts/noto-cjk</span><br><span class="line">emerge --ask media-fonts/source-han-sans</span><br><span class="line">emerge --ask media-fonts/wqy-microhei</span><br><span class="line">emerge --ask media-fonts/wqy-zenhei</span><br><span class="line"></span><br><span class="line">eselect fontconfig list </span><br><span class="line">eselect fontconfig <span class="built_in">enable</span> X X X <span class="comment"># 选择所有wqy开头的项</span></span><br></pre></td></tr></table></figure>

<h4 id="输入法"><a href="#输入法" class="headerlink" title="输入法"></a>输入法</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 输入法主题框架</span></span><br><span class="line"><span class="comment"># 其中， app-i18n/fcitx:5 是 fcitx 的主程序</span></span><br><span class="line"><span class="comment"># 　　　 app-i18n/fcitx-configtool:5 是它的配置工具</span></span><br><span class="line"><span class="comment"># 　　　 app-i18n/fcitx-qt:5 用于支持在 qt 程序上使用它</span></span><br><span class="line"><span class="comment"># 　　　 app-i18n/fcitx-gtk:5 用于支持在 gtk 程序上使用它</span></span><br><span class="line">emerge -vj app-i18n/fcitx:5 app-i18n/fcitx-configtool:5 app-i18n/fcitx-qt:5 app-i18n/fcitx-gtk:5</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装完成后再用户的~/.xsession文件内添加</span></span><br><span class="line"><span class="built_in">export</span> XMODIFIERS=<span class="string">&quot;@im=fcitx&quot;</span></span><br><span class="line"><span class="built_in">export</span> QT_IM_MODULE=fcitx</span><br><span class="line"><span class="built_in">export</span> GTK_IM_MODULE=fcitx</span><br><span class="line"><span class="built_in">export</span> SDL_IM_MODULE=fcitx</span><br></pre></td></tr></table></figure>

<h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 使用常规(基于源)更新</span></span><br><span class="line"><span class="comment"># --ask(-a)控制Portage显示要更新的软件列表，并提供是否更新选择</span></span><br><span class="line"><span class="comment"># --verbose(-v)在屏幕上输出完整的文件列表</span></span><br><span class="line"><span class="comment"># --update(-u)更新包的最佳版本</span></span><br><span class="line"><span class="comment"># --deep(-D)更新系统中的每个软件包</span></span><br><span class="line"><span class="comment"># --newuse(-N)USE标记变更后，要使用Portage检查USE标记的变动是否导致需要安装新的软件或将现有的软件包重新编译</span></span><br><span class="line"><span class="built_in">sudo</span> emerge --ask --verbose --update --deep --newuse @world</span><br><span class="line"></span><br><span class="line"><span class="comment"># 等价简写</span></span><br><span class="line">emerge -avuDN @world</span><br><span class="line"></span><br><span class="line">emerge -av --deepclean</span><br><span class="line"></span><br><span class="line"><span class="comment">#gentookit包里的一个软件，用来检查系统的依赖是否都满足,自动安装缺失的依赖</span></span><br><span class="line">revdep-rebuild</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用二进制包更新系统</span></span><br><span class="line">emerge --ask --verbose --update --deep --changed-use --getbinpkg @world</span><br><span class="line"></span><br><span class="line"><span class="comment"># 告诉 Portage 不要对一些指定的包或分类创建二进制包</span></span><br><span class="line">emerge -uDN @world --buildpkg --buildpkg-exclude <span class="string">&quot;virtual/* sys-kernel/*-sources&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 合并use标记</span></span><br><span class="line">etc-update </span><br><span class="line">-3 <span class="comment"># 自动合并</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 刷新环境变量</span></span><br><span class="line"><span class="built_in">source</span> /etc/profile </span><br><span class="line"></span><br><span class="line"><span class="comment"># 清理旧版本的内核</span></span><br><span class="line">emerge --prune sys-kernel/gentoo-kernel sys-kernel/gentoo-kernel-bin</span><br></pre></td></tr></table></figure>



<p>emerge 使用二进制包选项说明</p>
<table>
<thead>
<tr>
<th>选项</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>–usepkg (-k)</td>
<td>尝试使用本地可用的 packages 目录中的二进制包。如果未找到二进制包，将执行常规（基于源）安装。</td>
</tr>
<tr>
<td>–usepkgonly (-K)</td>
<td>类似 –usepkg (-k) ，但如果找不到二进制包，则失败。</td>
</tr>
<tr>
<td>–getbinpkg (-g)</td>
<td>从远程二进制包主机下载二进制包。如果未找到二进制包，将执行常规（基于源）安装。</td>
</tr>
<tr>
<td>–getbinpkgonly (-G)</td>
<td>类似于 –getbinpkg (-g) ，但如果无法下载二进制包，则会失败</td>
</tr>
</tbody></table>
<h3 id="USE变量说明-官方文档"><a href="#USE变量说明-官方文档" class="headerlink" title="USE变量说明 官方文档"></a>USE变量说明 <a href="https://wiki.gentoo.org/wiki/Handbook:AMD64/Working/USE/zh-cn">官方文档</a></h3><p>USE是Gentoo为用户提供的最具威力的变量之一。很多程序通过它可以选择编译或者不编译某些可选的支持。例如，一些程 序可以在编译时加入对gtk或是对qt的支持。其它的程序可以在编译时加入或不加入对于SLL的支持。有些程序甚至可以在编译时加入对 framebuffer的支持（svgalib）以取代X11（X服务器）。<br>大多数的发行版会使用尽可能多的支持特性编译它们的软件包，这既增加了软件的大小也减慢了启动时间，而这些还没有算上可能会涉及到的大量依赖性问题。Gentoo可以让你自己定义软件编译的选项，而这正是USE要做的事。<br>在USE变量里可以定义关键字，它被用来对应相应的编译选项。例如，ssl将会把ssl支持编译到程序中以支持它。-X会移除其对于X服务器的支持（注意前面的减号）。gnome gtk -kde -qt4将会以支持GNOME（和GTK）但不支持KDE（和Qt）的方式编译软件，使系统为GNOME做完全调整（如果架构支持）。<br>默认的USE设置全放在了系统所使用的Gentoo配置文件的make.defaults文件中。Gentoo对它的配置文件们使用了一个（复杂的）继承系统，在这个阶段我们不去深入。最简单的检查当前活动的USE标记的办法是运行emerge –info并选择以USE开头的那一行:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">emerge --info |grep ^USE</span><br></pre></td></tr></table></figure>
<p>![[Gentoo安装&#x2F;IMG-20241210170128821.png]]<br>可以在系统的&#x2F;usr&#x2F;portage&#x2F;profiles&#x2F;use.desc中找到可用的USE标记的完整描述。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">less /usr/share/portage/profile/use.desc</span><br></pre></td></tr></table></figure>


<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">### 常用软件</span><br><span class="line"></span><br><span class="line">```bash</span><br><span class="line">sudo emerge --ask media-video/mpv</span><br><span class="line"></span><br><span class="line"># 电子邮件客户端</span><br><span class="line">sudo emerge mail-client/thunderbird</span><br><span class="line"></span><br><span class="line"># 视频播放器</span><br><span class="line">sudo emerge media-video/mplayer</span><br><span class="line"></span><br><span class="line"># 音乐播放器</span><br><span class="line">sudo emerge media-sound/exaile</span><br><span class="line"></span><br><span class="line"># 虚拟机</span><br><span class="line">sudo emerge app-emulation/virt-manager</span><br><span class="line">sudo emerge app-emulation/virtualbox</span><br><span class="line"></span><br><span class="line"># VIM</span><br><span class="line">sudo emerge app-editors/vim</span><br></pre></td></tr></table></figure>



<p>参考文章</p>
<p><a href="https://wiki.gentoo.org/wiki/Handbook:AMD64/zh-cn">Gentoo AMD64 Handbook - Gentoo Wiki</a></p>
<p><a href="https://www.cnblogs.com/devilyouwei/p/6657409.html">开始使用gentoo linux——gentoo安装笔记（上）</a></p>
<p><a href="https://www.cnblogs.com/devilyouwei/p/6659058.html">开始使用gentoo linux——gentoo安装笔记（下）</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/122501653">Gentoo安装流程分享(step by step)，第二篇之KDE Plasma桌面的安装配置 - 知乎 (zhihu.com)</a></p>
<p><a href="https://www.jianshu.com/p/515a1f39b438">gentoo linux配置intel和nvidia双显卡电脑，使用prime方案 - 简书 (jianshu.com)</a></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Gentoo</tag>
      </tags>
  </entry>
  <entry>
    <title>KVM常用命令</title>
    <url>/2024/09/02/Linux/KVM%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<h4 id=""><a href="#" class="headerlink" title=""></a></h4><h4 id="添加删除"><a href="#添加删除" class="headerlink" title="添加删除"></a>添加删除</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看虚拟机</span></span><br><span class="line">virsh list --all</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建虚拟机</span></span><br><span class="line">virt-install -virt-type=kvm --name=&#123;虚拟机名&#125; --vcpus=4 \</span><br><span class="line">    --memory=1024 --location=&#123;iso文件&#125; \</span><br><span class="line">    --disk path=&#123;虚拟机硬盘存放路径&#125;.qcow2,size=30,format=qcow2 \</span><br><span class="line">    --network bridge=virbr0 --graphics none --extra-args=<span class="string">&#x27;console=ttyS0&#x27;</span></span><br><span class="line">    --force</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除虚拟机</span></span><br><span class="line">virsh undefine &#123;虚拟机名&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h4 id="开关机"><a href="#开关机" class="headerlink" title="开关机"></a>开关机</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># 开启虚拟机</span></span><br><span class="line">virsh start &#123;虚拟机名&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭虚拟机</span></span><br><span class="line">virsh shutdown &#123;虚拟机名&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 强制关机</span></span><br><span class="line">virsh destroy &#123;虚拟机名&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 挂起虚拟机</span></span><br><span class="line">virsh <span class="built_in">suspend</span> &#123;虚拟机名&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 恢复挂起的</span></span><br><span class="line">virsh resume &#123;虚拟机名&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置虚拟机和物理机开机一起启动</span></span><br><span class="line">virsh autostart &#123;虚拟机名&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 取消虚拟机开机启动</span></span><br><span class="line">virsh autostart &#123;虚拟机名&#125;</span><br></pre></td></tr></table></figure>



<h4 id="备份克隆"><a href="#备份克隆" class="headerlink" title="备份克隆"></a>备份克隆</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># 通过配置文件启动</span></span><br><span class="line">virsh create /etc/libvirt/qemu/&#123;虚拟机名&#125;.xml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 备份虚拟机配置文件</span></span><br><span class="line">virsh dumpxml &#123;虚拟机名&#125; &gt; &#123;存储路径&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 恢复备份虚拟机</span></span><br><span class="line">virsh create &#123;虚拟机名&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 虚拟机克隆</span></span><br><span class="line">virt-clone -o &#123;虚拟机名&#125; -n localhost -f /virtual/KVM/&#123;虚拟机名&#125;.qcow2</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h4 id="快照"><a href="#快照" class="headerlink" title="快照"></a>快照</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建快照</span></span><br><span class="line">virsh snapshot-create &#123;虚拟机名&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看快照</span></span><br><span class="line">virsh snapshot-list &#123;虚拟机名&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 恢复快照</span></span><br><span class="line">virsh snapshot-revert &#123;虚拟机名&#125; &#123;快照名称&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除快照</span></span><br><span class="line">virsh snapshot-delete &#123;虚拟机名&#125; &#123;快照名称&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>KVM</tag>
        <tag>虚拟机</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux4.4内核配置</title>
    <url>/2022/01/01/Linux/Linux4.4%E5%86%85%E6%A0%B8%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<p>[Linux-4.4-x86_64 内核配置选项简介 <a href="https://www.jinbuguo.com/kernel/longterm-linux-kernel-options.html">金步国] (jinbuguo.com)</a></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Kernel</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux修改MAC地址</title>
    <url>/2025/03/26/Linux/Linux%E4%BF%AE%E6%94%B9MAC%E5%9C%B0%E5%9D%80/</url>
    <content><![CDATA[<h3 id="临时修改"><a href="#临时修改" class="headerlink" title="临时修改"></a>临时修改</h3><p><strong>方法一</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt update &amp; <span class="built_in">sudo</span> apt install net-tools    <span class="comment"># 安装 net-tools</span></span><br><span class="line"><span class="built_in">sudo</span> ifconfig eth0 down                         <span class="comment"># 停用网卡</span></span><br><span class="line"><span class="built_in">sudo</span> ifconfig eth0 hw ether AA:BB:CC:DD:EE:FF   <span class="comment"># 设置 MAC 地址</span></span><br><span class="line"><span class="built_in">sudo</span> ifconfig eth0 up                           <span class="comment"># 启用网卡</span></span><br></pre></td></tr></table></figure>

<p><strong>方法二</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> ip <span class="built_in">link</span> <span class="built_in">set</span> dev eth0 down                      <span class="comment"># 停用网卡 </span></span><br><span class="line"><span class="built_in">sudo</span> ip <span class="built_in">link</span> <span class="built_in">set</span> dev eth0 address AA:BB:CC:DD:EE:FF <span class="comment"># 设置 MAC 地址</span></span><br><span class="line"><span class="built_in">sudo</span> ip <span class="built_in">link</span> <span class="built_in">set</span> dev eth0 up                        <span class="comment"># 启用网卡</span></span><br></pre></td></tr></table></figure>

<h3 id="永久修改"><a href="#永久修改" class="headerlink" title="永久修改"></a>永久修改</h3><p><strong>注意</strong>： 永久修改需要停止NetworkManager服务，此服务可能导致修改不生效</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemctl stop NetworkManager.service</span><br><span class="line"><span class="built_in">sudo</span> systemctl <span class="built_in">disable</span> NetworkManager.service</span><br></pre></td></tr></table></figure>

<p><strong>方法一</strong></p>
<p>编辑&#96;&#x2F;etc&#x2F;init.d&#x2F;rc.local&#96;&#96;文件,在此配置文件最后追加临时修改网卡MAC命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 修改 ech0 网卡的 MAC 地址</span></span><br><span class="line"><span class="built_in">sudo</span> ifconfig eth0 down <span class="comment"># 网卡名称可使用 ifconfig 或 ip addr 查看</span></span><br><span class="line"><span class="built_in">sudo</span> ifconfig eth0 hw ether AA:BB:CC:DD:EE:FF</span><br><span class="line"><span class="built_in">sudo</span> ifconfig eth0 up</span><br></pre></td></tr></table></figure>
<p><strong>方法二</strong></p>
<p>编辑<code>/etc/network/interfaces</code>文件，在此文件后追加</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">auto eth0                         <span class="comment"># 网卡自动启动</span></span><br><span class="line">iface eth0 inet static            <span class="comment"># 静态 IP</span></span><br><span class="line">address 192.168.1.2               <span class="comment"># IP 地址</span></span><br><span class="line">netmask 255.255.255.0             <span class="comment"># 掩码</span></span><br><span class="line">gateway 192.168.1.1               <span class="comment"># 网关</span></span><br><span class="line">hwaddress ether AA:BB:CC:DD:EE:FF <span class="comment"># MAC 地址</span></span><br><span class="line">dns-nameservers 223.5.5.5         <span class="comment"># DNS 多个用空格隔开</span></span><br><span class="line">dns-search .com                   <span class="comment"># 限制 .com 的查询走上边设置的DNS服务器</span></span><br></pre></td></tr></table></figure>

<p>修改完成需要重启网络服务使配置生效</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemctl restart networking.service </span><br><span class="line"></span><br><span class="line"><span class="comment"># 不同系统服务名可能有不太一样，如果找不到就重启系统</span></span><br><span class="line"><span class="built_in">sudo</span> reboot</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>MAC</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux内核TCP网络参数.md</title>
    <url>/2024/12/11/Linux/Linux%E5%86%85%E6%A0%B8TCP%E7%BD%91%E7%BB%9C%E5%8F%82%E6%95%B0/</url>
    <content><![CDATA[<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/sysctl.d/99-sysctl.conf：     #重启后生效</span><br><span class="line">fs.inotify.max_user_watches = 600000</span><br><span class="line">dev.i915.perf_stream_paranoid = 0</span><br><span class="line">vm.swappiness = 1</span><br><span class="line">net.ipv6.conf.all.accept_ra = 2</span><br><span class="line">fs.file-max = 6553560</span><br><span class="line">net.core.rmem_max = 67108864</span><br><span class="line">net.core.wmem_max = 67108864</span><br><span class="line">net.core.rmem_default = 65536</span><br><span class="line">net.core.wmem_default = 65536</span><br><span class="line">net.core.optmem_max = 10000000</span><br><span class="line">net.core.netdev_max_backlog = 8096</span><br><span class="line">net.core.somaxconn = 8096</span><br><span class="line">net.ipv4.ip_default_ttl = 128</span><br><span class="line">net.ipv4.tcp_timestamps = 1</span><br><span class="line">net.ipv4.tcp_syncookies = 1</span><br><span class="line">net.ipv4.icmp_echo_ignore_broadcasts = 1</span><br><span class="line">net.ipv4.icmp_ignore_bogus_error_responses = 1</span><br><span class="line">net.ipv4.conf.default.accept_source_route = 0</span><br><span class="line">net.ipv4.tcp_slow_start_after_idle = 0</span><br><span class="line">net.ipv4.route.gc_timeout = 100</span><br><span class="line">net.ipv4.tcp_tw_reuse = 1</span><br><span class="line">net.ipv4.tcp_tw_recycle = 1</span><br><span class="line">net.ipv4.tcp_fin_timeout = 30</span><br><span class="line">net.ipv4.tcp_keepalive_time = 1200</span><br><span class="line">net.ipv4.tcp_keepalive_probes = 3</span><br><span class="line">net.ipv4.tcp_keepalive_intvl = 15</span><br><span class="line">net.ipv4.tcp_fin_timeout = 30</span><br><span class="line">net.ipv4.tcp_syn_retries = 2</span><br><span class="line">net.ipv4.tcp_synack_retries = 2</span><br><span class="line">net.ipv4.tcp_window_scaling = 1</span><br><span class="line">net.ipv4.tcp_ecn = 1</span><br><span class="line">net.ipv4.tcp_sack = 1</span><br><span class="line">net.ipv4.tcp_fack = 1</span><br><span class="line">net.ipv4.tcp_low_latency = 0</span><br><span class="line">net.ipv4.tcp_max_tw_buckets = 5000</span><br><span class="line">net.ipv4.tcp_fastopen = 3</span><br><span class="line">net.ipv4.tcp_frto = 2</span><br><span class="line">net.ipv4.tcp_frto_response = 0</span><br><span class="line">net.ipv4.tcp_rmem = 4096 87380 67108864</span><br><span class="line">net.ipv4.tcp_wmem = 4096 65536 67108864</span><br><span class="line">net.ipv4.tcp_mtu_probing = 1</span><br><span class="line">net.ipv4.tcp_slow_start_after_idle = 0</span><br><span class="line">net.ipv4.tcp_max_syn_backlog = 30000</span><br><span class="line">net.ipv4.tcp_max_orphans = 262114</span><br><span class="line">net.ipv4.netfilter.ip_conntrack_max = 204800</span><br><span class="line">net.ipv4.conf.all.rp_filter = 1</span><br><span class="line">net.ipv4.conf.default.rp_filter = 1</span><br><span class="line"># for high-latency network Google BBR    #个人PC不建议开启BBR，对网速不会有提升，还会降低wifi吞吐量；还是等BBR2正式版出了再开启BBR2吧，BBR2对wifi就没有影响了</span><br><span class="line">#net.ipv4.tcp_congestion_control = bbr</span><br><span class="line">net.core.default_qdisc = fq_codel</span><br><span class="line">net.ipv4.tcp_congestion_control = cubic</span><br><span class="line">net.ipv6.conf.all.disable_ipv6 = 0</span><br><span class="line">net.ipv6.conf.default.disable_ipv6 = 0</span><br><span class="line">net.ipv6.conf.lo.disable_ipv6 = 0</span><br><span class="line">net.ipv6.ip_default_ttl = 128</span><br></pre></td></tr></table></figure>

<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/security/limits.conf：</span><br><span class="line">* soft nofile 65536</span><br><span class="line">* hard nofile 65536</span><br><span class="line">* soft noproc 65536 </span><br><span class="line">* hard noproc 65536</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux硬盘分区</title>
    <url>/2018/03/22/Linux/Linux%E7%A1%AC%E7%9B%98%E5%88%86%E5%8C%BA/</url>
    <content><![CDATA[<h2 id="环境检查"><a href="#环境检查" class="headerlink" title="环境检查"></a>环境检查</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ls /sys/firmware/efi/efivars #UEFI/BIOS检测</span><br></pre></td></tr></table></figure>
<p>若该目录不存在，则 ArchISO 是以 BIOS&#x2F;CSM 模式启动，否则是以 UEFI 模式启动。</p>
<blockquote>
<p>通常而言，UEFI 系统须使用 GPT 分区才能引导，BIOS 系统须使用 MBR 分区才能引导。</p>
</blockquote>
<h2 id="分区"><a href="#分区" class="headerlink" title="分区"></a>分区</h2><h4 id="fdisk"><a href="#fdisk" class="headerlink" title="fdisk"></a>fdisk</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">fdisk -l //查看所有分区情况</span><br></pre></td></tr></table></figure>
<p><em>常用fdisk命令：p 显示当前磁盘分区，d 删除指定分区，n 创建新分区， a 为指定分区创建启动标记，t 更改分区格式， w将磁盘分区信息写入磁盘。</em></p>
<h4 id="parted"><a href="#parted" class="headerlink" title="parted"></a>parted</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># parted /dev/sda</span><br><span class="line"></span><br><span class="line">检查 MINOR #对文件系统进行一个简单的检查</span><br><span class="line">cp [FROM-DEVICE] FROM-MINOR TO-MINOR #将文件系统复制到另一个分区</span><br><span class="line">help [COMMAND] #打印通用求助信息，或关于 COMMAND 的信息</span><br><span class="line">mklabel 标签类型 #创建新的磁盘标签 (分区表)</span><br><span class="line">mkfs MINOR 文件系统类型 #在 MINOR 创建类型为“文件系统类型”的文件系统</span><br><span class="line">mkpart 分区类型 [文件系统类型] 起始点 终止点 #创建一个分区</span><br><span class="line">mkpartfs 分区类型 文件系统类型 起始点 终止点 #创建一个带有文件系统的分区</span><br><span class="line">move MINOR 起始点 终止点 #移动编号为 MINOR 的分区</span><br><span class="line">name MINOR 名称 #将编号为 MINOR 的分区命名为“名称”</span><br><span class="line">print [MINOR] #打印分区表，或者分区</span><br><span class="line">quit #退出程序</span><br><span class="line">rescue 起始点 终止点 #挽救临近“起始点”、“终止点”的遗失的分区</span><br><span class="line">resize MINOR 起始点 终止点 #改变位于编号为 MINOR 的分区中文件系统的大小</span><br><span class="line">rm MINOR #删除编号为 MINOR 的分区</span><br><span class="line">select 设备 #选择要编辑的设备</span><br><span class="line">set MINOR 标志 状态 #改变编号为 MINOR 的分区的标志</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="格式化分区"><a href="#格式化分区" class="headerlink" title="格式化分区"></a>格式化分区</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkfs.vfat -F 32 /dev/sda1 #生成ESP分区的文件系统FAT32</span><br><span class="line">mkswap /dev/sda2 #格式化swap</span><br><span class="line">mkfs.ext4 /dev/sda3 #格式化ext4</span><br><span class="line">mkfs.xfx /dev/sda4 #格式化xfs</span><br></pre></td></tr></table></figure>

<h4 id="分区方案"><a href="#分区方案" class="headerlink" title="分区方案"></a>分区方案</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/dev/sda1 /boot 500M</span><br><span class="line">/dev/sda2 swap 8G(根据内存大小调整)</span><br><span class="line">/dev/sda3 / 200G</span><br><span class="line">/dev/sda4 /home 剩余所有空间</span><br></pre></td></tr></table></figure>

<h4 id="挂载分区"><a href="#挂载分区" class="headerlink" title="挂载分区"></a>挂载分区</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#mount /dev/sda6 /mnt # 挂载根分区</span><br></pre></td></tr></table></figure>
<p>非UEFI挂载boot</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># mkdir -p /mnt/boot</span><br><span class="line"># mount /dev/sda1 /mnt/boot</span><br></pre></td></tr></table></figure>

<p>建立efi目录，把EFI分区装载到刚建立的efi目录上。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#mkdir -p /mnt/boot/efi</span><br><span class="line">#mount /dev/sdc1 /mnt/boot/efi</span><br></pre></td></tr></table></figure>

<p>挂载交换分区和home</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#swap on /dev/sda5</span><br><span class="line">#mkdir -p /mnt/home</span><br><span class="line">#mount /dev/sda7 /mnt/home</span><br></pre></td></tr></table></figure>

<h4 id="生成引导"><a href="#生成引导" class="headerlink" title="生成引导"></a>生成引导</h4><ul>
<li>BIOS：</li>
</ul>
<blockquote>
<p>依赖包： grub os-prober</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># grub-install --recheck /dev/&lt;目标磁盘&gt;</span><br><span class="line"># grub-mkconfig -o /boot/grub/grub.cfg</span><br></pre></td></tr></table></figure>

<ul>
<li>UEFI：—如果BIOS是UEFI的，就要用下面的命令安装grub了</li>
</ul>
<blockquote>
<p>依赖包： dosfstools grub efibootmgr</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># grub-install --target=x86_64-efi --efi-directory=&lt;EFI 分区挂载点&gt; --bootloader-id=arch_grub --recheck</span><br><span class="line"># grub-mkconfig -o /boot/grub/grub.cfg</span><br></pre></td></tr></table></figure>

<p><strong>低格填零</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># dd if=/dev/zero of=/dev/sda bs=16M</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Parted</tag>
        <tag>分区</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux实现U盘插入自动挂载</title>
    <url>/2025/03/27/Linux/Linux%E5%AE%9E%E7%8E%B0U%E7%9B%98%E6%8F%92%E5%85%A5%E8%87%AA%E5%8A%A8%E6%8C%82%E8%BD%BD/</url>
    <content><![CDATA[<h3 id="方式一"><a href="#方式一" class="headerlink" title="方式一"></a>方式一</h3><p>通过<code>udev</code>规则监听设备事件，编写<code>/etc/udev/rules.d/99-udev-mount.rules</code>规则实现U盘插入捕获U盘插入事件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 插入U盘自动挂载</span></span><br><span class="line">ACTION==<span class="string">&quot;add&quot;</span>, KERNEL==<span class="string">&quot;sd[a-z]*&quot;</span>, RUN+=<span class="string">&quot;/bin/mkdir -p /media/udev-%k&quot;</span>, RUN+=<span class="string">&quot;/bin/mount /dev/%k /media/udev-%k&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 移除U盘自动卸载</span></span><br><span class="line">ACTION==<span class="string">&quot;remove&quot;</span>, KERNEL==<span class="string">&quot;sd[a-z]*&quot;</span>, RUN+=<span class="string">&quot;/bin/umount /media/udev-%k&quot;</span></span><br></pre></td></tr></table></figure>

<p>规则编辑完成后执行以下命令使规则生效</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> udevadm control --reload</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>U盘</tag>
        <tag>自动挂载</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux系统监视器Conky配置</title>
    <url>/2024/09/03/Linux/Linux%E7%B3%BB%E7%BB%9F%E7%9B%91%E8%A7%86%E5%99%A8Conky%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">sudo</span> apt install lm-sensors curl hddtemp  <span class="comment"># 安装工具</span></span><br><span class="line"></span><br><span class="line">sensors-detect <span class="comment"># 检测传感器</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">sudo</span> apt install conky <span class="comment"># 安装</span></span><br><span class="line"></span><br><span class="line">conky &amp; <span class="comment"># 运行conky</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>传感器数据样例</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">acpitz-virtual-0-</span><br><span class="line">Adapter: Virtual device</span><br><span class="line">temp1: +49.5°C (crit = +99.0°C)</span><br><span class="line"></span><br><span class="line">coretemp-isa-0000</span><br><span class="line">Adapter: ISA adapter</span><br><span class="line">Physical id 0: +49.0°C (high = +100.0°C, crit = +100.0°C)</span><br><span class="line">Core 0: +49.0°C (high = +100.0°C, crit = +100.0°C)</span><br><span class="line">Core 1: +49.0°C (high = +100.0°C, crit = +100.0°C)</span><br></pre></td></tr></table></figure>
<p>:TODO conky 默认运行效果截图</p>
<p>conky默认以一个弹窗的形式运行，并使用位于&#x2F;etc&#x2F;conky&#x2F;conky.conf的基础配置文件</p>
<h2 id="集成到桌面"><a href="#集成到桌面" class="headerlink" title="集成到桌面"></a>集成到桌面</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> /etc/conky/conky.conf /home/<span class="variable">$USER</span>/.conkyrc <span class="comment"># 复制默认配置文件</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux软件源</tag>
        <tag>Conky</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux设置swap分区</title>
    <url>/2022/01/01/Linux/Linux%E8%AE%BE%E7%BD%AEswap%E5%88%86%E5%8C%BA/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>交换空间</tag>
        <tag>SWAP</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux配置sudo无密码</title>
    <url>/2025/03/19/Linux/Linux%E9%85%8D%E7%BD%AEsudo%E6%97%A0%E5%AF%86%E7%A0%81/</url>
    <content><![CDATA[<h3 id="方法1"><a href="#方法1" class="headerlink" title="方法1"></a>方法1</h3><p>最简单的一种方法，将当前用户添加到root组。这样做之后该用户将拥有所有<code>root</code>权限，从而使用户在使用<code>sudo</code>时不再需要输入密码。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> adduser &#123;当前用户名&#125; root </span><br></pre></td></tr></table></figure>

<p><strong>注意：</strong> 将用户添加到<code>root</code>组后，该用户将拥有最高权限，因此在执行系统级操作时要特别小心，以避免可能的系统破坏。</p>
<h3 id="方法2（推荐）"><a href="#方法2（推荐）" class="headerlink" title="方法2（推荐）"></a>方法2（推荐）</h3><p>通过编辑<code>/etc/sudoers</code>文件来配置特定用户或组的<code>sudo</code>行为。这种方法允许更灵活的控制哪些命令可以绕过密码提示。<br>![[Linux配置sudo无密码&#x2F;IMG-20250319160639846.png]]</p>
<p>单用户配置</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;用户名&#125; ALL=(ALL:ALL) NOPASSWD:ALL #在 root 后新添加一行</span><br></pre></td></tr></table></figure>

<p>用户组配置</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">%&#123;用户组&#125; ALL=(ALL:ALL) NOPASSWD:ALL # 在 %sudo 后添加</span><br></pre></td></tr></table></figure>
<p>使用此方式需将用户添加进组</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> usermod -a -G &#123;用户组&#125; &#123;用户名&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>sudo</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux配置网络及SSH配置</title>
    <url>/2018/05/24/Linux/Linux%E9%85%8D%E7%BD%AE%E7%BD%91%E7%BB%9C%E5%8F%8ASSH%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h4 id="识别接口名称"><a href="#识别接口名称" class="headerlink" title="识别接口名称"></a>识别接口名称</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 需要 net-tools</span></span><br><span class="line">ifconfig</span><br></pre></td></tr></table></figure>

<blockquote>
<p>如果使用标准的<strong>ifconfig</strong>命令没有显示出接口，尝试使用带有<code>-a</code>选项的相同的命令。这个选项强制这个工具去显示系统检测到的所有的网络接口，不管他们是up或down状态。如果<strong>ifconfig -a</strong>没有提供结果，则硬件有错误或者接口驱动没有加载到内核中。</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 新版本系统大部分支持</span><br><span class="line">ip addr</span><br></pre></td></tr></table></figure>



<h4 id="dhcp"><a href="#dhcp" class="headerlink" title="dhcp"></a>dhcp</h4><p>DHCP（动态主机配置协议）使自动接受网络信息（IP地址、掩码、广播地址、网关、名称服务器等）变得容易。这只在网络中有DHCP服务器（或者如果ISP提供商提供一个DHCP服务）时有用.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dhcpcd eth0 # eth0 为网口名称,根据上一步识别出的接口名称修改</span><br></pre></td></tr></table></figure>



<h4 id="ifconfig命令"><a href="#ifconfig命令" class="headerlink" title="ifconfig命令"></a>ifconfig命令</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 启用/禁用网卡</span></span><br><span class="line">ifconfig eth0 up/down</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置IP地址及掩码</span></span><br><span class="line">ifconfig eth0 &#123;IP地址&#125; netmask &#123;掩码&#125; up</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置默认网关</span></span><br><span class="line">route add default gw &#123;网关&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置DNS</span></span><br><span class="line">nano -w /etc.resolv.conf</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用下边模板填充</span></span><br><span class="line">nameserver &#123;名称服务器&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>花括号中内容使用具体的地址填充</p>
</blockquote>
<h4 id="ip命令"><a href="#ip命令" class="headerlink" title="ip命令"></a>ip命令</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 启用/禁用网卡</span></span><br><span class="line">ip <span class="built_in">link</span> <span class="built_in">set</span> dev eth0 up/down</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置Ip地址及掩码,掩码一般用 24 相当于255.255.255.0</span></span><br><span class="line">ip addr add &#123;IP地址&#125;/&#123;掩码&#125; dev eth0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除</span></span><br><span class="line">ip addr del dev eth0 &#123;IP&#125;/&#123;掩码&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 刷新接口IP(删除所有)</span></span><br><span class="line">ip addr flush eth0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置默认网关</span></span><br><span class="line">ip route add default via &#123;网关&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>网关的配置参考</p>
<p><a href="https://www.cnblogs.com/sudochen/p/15992994.html">ip route命令</a></p>
<p><a href="https://blog.csdn.net/meihualing/article/details/113058719">Linux上添加路由，删除路由，修改路由配置（route add, route del, 路由表项基本知识）</a></p>
<blockquote>
<p>| 子网掩码用来划分网络区域<br>| 子网掩码非0的位对应的ip上的数字表示这个ip的网络位<br>| 子网掩码0位对应的数字是ip的主机位<br>| 网络位表示网络区域<br>| 主机位表示网络区域里某台主机<br>|<br>| 11111111.11111111.11111111.00000000 &#x3D; 255.255.255.0 &#x3D; 24<br>| ——————————————  —————<br>|          网络位                                      主机位</p>
<p>| 网络位一致，主机位不一致的2个IP可以直接通讯<br>|<br>| 172.25.254.10&#x2F;24         #24&#x3D;255.255.255.0<br>|<br>| 172.25.254.20&#x2F;24<br>|<br>| 172.25.0.1&#x2F;16            #16&#x3D;255.255.0.0<br>| 前两个可以直接通讯，最后一个与其他俩个不能直接通讯</p>
</blockquote>
<h4 id="无线网连接"><a href="#无线网连接" class="headerlink" title="无线网连接"></a>无线网连接</h4><p>当使用一块无线（802.11）网卡，在继续之前需要先配置无线设置。要查看当前无线网卡的设置，你可以使用<strong>iw</strong>。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看连接信息</span></span><br><span class="line">iw dev wlan0 info</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查连接状态</span></span><br><span class="line">iw dev wlan0 <span class="built_in">link</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 连接网络 （确保接口处于活动状态）</span></span><br><span class="line">iw dev wlan0 connect -w &#123;网络名称&#125; key 0:d:&#123;密码&#125; </span><br></pre></td></tr></table></figure>

<p>如果无线网络配置为WPA或WPA2，则需要使用<strong>wpa_supplicant</strong>。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查找附近热点</span></span><br><span class="line">wpa_cli -i wlan0 scan</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成连接配置文件</span></span><br><span class="line">wpa_passphrase &#123;网络名称&#125; &#123;密码&#125; &gt; /etc/wpa_supplicant.conf</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 连接网络</span></span><br><span class="line"><span class="comment"># -D 驱动程序名称（可以是多个驱动程序：nl80211,wext）</span></span><br><span class="line"><span class="comment"># -i 接口名称</span></span><br><span class="line"><span class="comment"># -c 配置文件</span></span><br><span class="line"><span class="comment"># -B 在后台运行守护进程</span></span><br><span class="line">wpa_supplicant -D nl80211 -i wlan0 -c /etc/wpa_supplicant.conf -B</span><br></pre></td></tr></table></figure>



<h4 id="SSH配置"><a href="#SSH配置" class="headerlink" title="SSH配置"></a>SSH配置</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nano -w /etc/ssh/sshd_config</span><br><span class="line"></span><br><span class="line"><span class="comment"># 放开注释</span></span><br><span class="line">PasswordAuthentication <span class="built_in">yes</span></span><br><span class="line">PermitRootLogin <span class="built_in">yes</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启用SSH密钥对登录，取消如下行的注释符</span></span><br><span class="line">PubkeyAuthentication <span class="built_in">yes</span></span><br><span class="line">AuthorizeKeysFile .ssh/authorized_keys</span><br></pre></td></tr></table></figure>

<h4 id="启动SSHD"><a href="#启动SSHD" class="headerlink" title="启动SSHD"></a>启动SSHD</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 启动SSH服务(需要有可登录的账户)</span></span><br><span class="line">/etc/init.d/sshd start</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Linux</category>
      </categories>
  </entry>
  <entry>
    <title>OpenSSL生成自签名证书</title>
    <url>/2024/09/03/Linux/OpenSSL%E7%94%9F%E6%88%90%E8%87%AA%E7%AD%BE%E5%90%8D%E8%AF%81%E4%B9%A6/</url>
    <content><![CDATA[<h4 id="名词解释"><a href="#名词解释" class="headerlink" title="名词解释"></a>名词解释</h4><h5 id="CA-Certificate-Authority"><a href="#CA-Certificate-Authority" class="headerlink" title="CA(Certificate Authority)"></a>CA(Certificate Authority)</h5><p>证书授权机构,  负责发放和管理数字证书的权威机构，有自己的证书，可以拿自己的证书给别人签名。</p>
<h5 id="RootCA"><a href="#RootCA" class="headerlink" title="RootCA"></a>RootCA</h5><p>根证书，权威机构持有的证书，安装根证书意味着对这个证书机构的信任，所有其他证书都由这个根证书来签发。只需要把这个根证书添加到受信任的根证书，所有其他由此根证书签发的证书都会被自动信任。</p>
<h5 id="SubCA"><a href="#SubCA" class="headerlink" title="SubCA"></a>SubCA</h5><p>中间证书机构，由权威机构签发的证书，</p>
<h5 id="CSR-Certificate-Signing-Request"><a href="#CSR-Certificate-Signing-Request" class="headerlink" title="CSR(Certificate Signing Request)"></a>CSR(Certificate Signing Request)</h5><p>证书请求文件，证书申请者在申请数字证书时生成私钥的同时也生成证书请求文件，证书申请者只要把CSR文件提交给证书颁发机构后，证书颁发机构使用其根证书给私钥签名就生成了证书公钥文件，也就是颁发给用户的证书。</p>
<h5 id="常用后缀名"><a href="#常用后缀名" class="headerlink" title="常用后缀名"></a>常用后缀名</h5><table>
<thead>
<tr>
<th>格式</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>.crt,.cer</td>
<td>证书文件</td>
</tr>
<tr>
<td>.key</td>
<td>私钥文件</td>
</tr>
<tr>
<td>.csr</td>
<td>证书签名请求文件</td>
</tr>
<tr>
<td>.pem</td>
<td>base64编码证书文件,可以单独放证书或密钥，也可以同时放两个。Apache 和 NGINX 服务器偏向于使用这种编码格式，也是 openssl 默认采用的信息存放方式。</td>
</tr>
<tr>
<td>.der</td>
<td>二进制证书文件，可包含所有私钥、公钥和证书，是大多数浏览器的缺省格式，常见于 Windows 系统中的证书格式。</td>
</tr>
</tbody></table>
<h4 id="证书链"><a href="#证书链" class="headerlink" title="证书链"></a>证书链</h4><p>在证书链中，通常分为三级结构，分别是根证书、中间证书、服务器证书。正确的证书链顺序中服务器证书处在最底端，里面包含服务器域名域名服务器公钥和签名值等。服务器证书的上一级是中间证书，可以由多张证书组合在一起，最上级是根证书。对服务器身份进行校验时，需要验证一整个证书链。每一级证书都有签名值，根证书使用自己的根CA公钥验证自己的签名，也用来验证中间证书的签名值，中间证书的公钥用来验证下一级证书的签名值。</p>
<img src="/2024/09/03/Linux/OpenSSL%E7%94%9F%E6%88%90%E8%87%AA%E7%AD%BE%E5%90%8D%E8%AF%81%E4%B9%A6/IMG-20250908095942730.png" class="">


<h4 id="生成根证书"><a href="#生成根证书" class="headerlink" title="生成根证书"></a>生成根证书</h4><h5 id="生成根私钥"><a href="#生成根私钥" class="headerlink" title="生成根私钥"></a>生成根私钥</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 生成CA认证机构的证书密钥</span></span><br><span class="line"><span class="comment"># 需要设置密码(输入两次)</span></span><br><span class="line">openssl genrsa -des3 -out root-ca.priv.key 4096</span><br><span class="line"></span><br><span class="line"><span class="comment"># 去除密钥里的密码,有密码的话每次使用的时候都要输入密码才能使用。</span></span><br><span class="line"><span class="comment"># 需要再输入一次上一步的密码</span></span><br><span class="line">openssl rsa -<span class="keyword">in</span> root-ca.priv.key -out root-ca.key</span><br></pre></td></tr></table></figure>

<p>第一次生成的私钥，是带有 passphrase 的。这带来一个副作用，就是需要在使用过程中输入密码。这对于一些特定场景来说会带来一些问题。比如：Apache 的自动启动过程，或者一些工具，甚至有没有提供输入 passphrase 的机会。其实是<strong>可以将 3DES 的加密从秘钥中移除</strong>的，这样，使用的过程中就不再需要输入 passphrase。这也带来另一个问题，如果其他人获取到了未加密的私钥，对应的证书也需要被吊销，以避免带来危害。</p>
<h5 id="生成自签名的根证书请求"><a href="#生成自签名的根证书请求" class="headerlink" title="生成自签名的根证书请求"></a>生成自签名的根证书请求</h5><p>-subj 参考<a href="#%E8%AF%81%E4%B9%A6%E8%AF%B7%E6%B1%82%E6%96%87%E4%BB%B6%E5%8F%82%E6%95%B0%E8%AF%B4%E6%98%8E">证书请求文件参数说明</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 生成根证书自签名请求</span></span><br><span class="line">openssl req -new -key root-ca.key \</span><br><span class="line">    -subj <span class="string">&quot;/C=CN/ST=Tianjin/L=Tianjin/O=Example/OU=DEV/CN=Example Root&quot;</span> \</span><br><span class="line">    -out root-ca.csr </span><br></pre></td></tr></table></figure>

<h5 id="生成自签名根证书"><a href="#生成自签名根证书" class="headerlink" title="生成自签名根证书"></a>生成自签名根证书</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 参数说明</span></span><br><span class="line"><span class="comment"># -x509	使用X.509证书结构生成证书，X.509 证书的结构是用 ASN1(Abstract Syntax Notation One)进行描述数据结构。</span></span><br><span class="line"><span class="comment"># -days 证书有效期,按天来算</span></span><br><span class="line">openssl x509 -req -<span class="keyword">in</span> root-ca.csr -signkey root-ca.key -out root-ca.crt -days 3650</span><br></pre></td></tr></table></figure>



<h4 id="生成中间证书"><a href="#生成中间证书" class="headerlink" title="生成中间证书"></a>生成中间证书</h4><p><strong>如果不是复杂场景可以跳过此步骤，使用根证书直接生成客户端证书</strong></p>
<p> 使用root-ca签发sub-ca的证书签名请求,中间证书指的是可以允许继续生成下级证书，否则的话默认生成终端证书，即使可以用中间证书生成下一级客户端和服务端等用户证书，最终验证的无法通过。</p>
<h5 id="生成中间证书私钥"><a href="#生成中间证书私钥" class="headerlink" title="生成中间证书私钥"></a>生成中间证书私钥</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 生成私钥,方式1(参考根证书私钥)</span></span><br><span class="line">openssl genrsa -des3 -out mid-ca.priv.key 4096</span><br><span class="line">openssl rsa -<span class="keyword">in</span> mid-ca.priv.key -out mid-ca.key</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成私钥,方式2</span></span><br><span class="line">openssl genpkey -algorithm RSA -out mid-ca.key -pkeyopt rsa_keygen_bits:4096</span><br></pre></td></tr></table></figure>

<h5 id="生成中间证书请求"><a href="#生成中间证书请求" class="headerlink" title="生成中间证书请求"></a>生成中间证书请求</h5><p>-subj参考<a href="#%E8%AF%81%E4%B9%A6%E8%AF%B7%E6%B1%82%E6%96%87%E4%BB%B6%E5%8F%82%E6%95%B0%E8%AF%B4%E6%98%8E">证书请求文件参数说明</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 生成中间证书自签名请求</span></span><br><span class="line">openssl req -new -key root-ca.key \</span><br><span class="line">    -subj <span class="string">&quot;/C=CN/ST=Tianjin/L=Tianjin/O=Example/OU=DEV/CN=Example Root&quot;</span> \</span><br><span class="line">    -out mid-ca.csr </span><br><span class="line"></span><br><span class="line"><span class="comment"># 同时生成key和csr</span></span><br><span class="line">openssl req -new -newkey rsa:4096 -nodes -keyout mid-ca.key -out mid-ca.csr \</span><br><span class="line">    -subj=<span class="string">&quot;/C=CN/ST=Tianjin/L=Tianjin/O=Example/OU=DEV/CN=Example Mid&quot;</span></span><br></pre></td></tr></table></figure>

<h5 id="生成中间证书-1"><a href="#生成中间证书-1" class="headerlink" title="生成中间证书"></a>生成中间证书</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 生成证书</span></span><br><span class="line">openssl x509 -req -extfile &lt;(<span class="built_in">printf</span> <span class="string">&quot;subjectKeyIdentifier=hash\nauthorityKeyIdentifier=keyid:always,issuer:always&quot;</span>) \</span><br><span class="line">    -days 3650 -<span class="keyword">in</span> mid-ca.csr -CA root-ca.crt -CAkey root-ca.key \</span><br><span class="line">    -CAcreateserial -out mid-ca.crt</span><br></pre></td></tr></table></figure>

<h5 id="验证中间证书"><a href="#验证中间证书" class="headerlink" title="验证中间证书"></a>验证中间证书</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl verify -CAfile root-ca.crt mid-ca.crt</span><br></pre></td></tr></table></figure>



<h4 id="生成终端证书"><a href="#生成终端证书" class="headerlink" title="生成终端证书"></a>生成终端证书</h4><p>假设服务器域名为<code>example.io</code></p>
<h5 id="生成终端证书私钥"><a href="#生成终端证书私钥" class="headerlink" title="生成终端证书私钥"></a>生成终端证书私钥</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 生成私钥，方式1(参考根证书私钥)</span></span><br><span class="line">openssl genrsa -des3 -out example.io.priv.key 4096</span><br><span class="line">openssl rsa -<span class="keyword">in</span> example.io.priv.key -out example.io.priv.key</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成私钥，方式2</span></span><br><span class="line">openssl genpkey -algorithm RSA -out example.io.key -pkeyopt rsa_keygen_bits:4096</span><br></pre></td></tr></table></figure>



<h5 id="生成终端证书请求"><a href="#生成终端证书请求" class="headerlink" title="生成终端证书请求"></a>生成终端证书请求</h5><p>-subj 参考<a href="#%E8%AF%81%E4%B9%A6%E8%AF%B7%E6%B1%82%E6%96%87%E4%BB%B6%E5%8F%82%E6%95%B0%E8%AF%B4%E6%98%8E">证书请求文件参数说明</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 生成终端证书自签名请求</span></span><br><span class="line">openssl req -new -key example.io.key -out example.io.csr -subj=<span class="string">&quot;/CN=example.io&quot;</span></span><br></pre></td></tr></table></figure>



<h5 id="生成终端证书-1"><a href="#生成终端证书-1" class="headerlink" title="生成终端证书"></a>生成终端证书</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"> <span class="comment"># 生成证书,如果不使用中间证书可把mid-ca.crt替换为root-ca.crt</span></span><br><span class="line">openssl x509 -req -days 3650 \</span><br><span class="line">    -extfile v3.ext</span><br><span class="line">    -CA root-ca.crt -CAkey root-ca.key -CAcreateserial \</span><br><span class="line">    -<span class="keyword">in</span> example.io.csr -signkey example.io.key \</span><br><span class="line">    -out example.io.crt</span><br><span class="line">    </span><br><span class="line">openssl x509 -req -extfile v3.ext -days 365 -<span class="keyword">in</span> example.io.csr -CA mid-ca.crt -CAkey mid-ca.key -CAcreateserial -out example.io.crt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 导出pfx,</span></span><br><span class="line">openssl pkcs12 -<span class="built_in">export</span> -out example.io.pfx -inkey example.io.key -<span class="keyword">in</span> example.io.crt</span><br></pre></td></tr></table></figure>

<p>v3.ext参考<a href="#X.509%E6%89%A9%E5%B1%95%E9%85%8D%E7%BD%AE">X.509扩展配置</a></p>
<p><strong>注意:</strong> v3.ext中<code>basicConstraints=CA:FALSE</code>为必选项，否则生成证书无法使用</p>
<h5 id="验证终端证书"><a href="#验证终端证书" class="headerlink" title="验证终端证书"></a>验证终端证书</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl verify -CAfile root-ca.crt example.io.crt</span><br></pre></td></tr></table></figure>



<h4 id="查看证书信息"><a href="#查看证书信息" class="headerlink" title="查看证书信息"></a>查看证书信息</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看公钥的内容,如果为.PEM ,则会以 base 64 明文方式显示</span></span><br><span class="line">openssl rsa -noout -text -<span class="keyword">in</span> cakey.key</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看证书的内容命令为</span></span><br><span class="line">openssl x509 -noout -text -<span class="keyword">in</span> cacert.crt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 证书编码格式转换</span></span><br><span class="line"><span class="comment"># PEM 转为 DER</span></span><br><span class="line">openssl x509 -<span class="keyword">in</span> cacert.crt -outform der -out cacert.der</span><br><span class="line"><span class="comment"># DER 转为 PEM</span></span><br><span class="line">openssl x509 -<span class="keyword">in</span> cert.crt -inform der -outform pem -out cacert.pem</span><br></pre></td></tr></table></figure>



<h4 id="证书有效性验证"><a href="#证书有效性验证" class="headerlink" title="证书有效性验证"></a>证书有效性验证</h4><p>可以利用<code>openssl</code> 的<code>s_server</code>命令来模拟一个服务端，要使用到证书管理员生成的证书<code>client.crt</code>，以及申请人在创建<code>csr</code>时生成的 <code>client.key</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl s_server -cert example.io.crt -key example.io.key -debug -HTTP -accept 443</span><br></pre></td></tr></table></figure>

<p>然后浏览器访问 <code>https://ip地址</code>来查看证书是否有效（要先导入根证书到</p>
<p>信任的根证书颁发机构）。</p>
<h4 id="吊销证书"><a href="#吊销证书" class="headerlink" title="吊销证书"></a>吊销证书</h4><p>一般由于用户私钥泄露等情况才需要吊销一个未过期的证书。</p>
<p>假设需要被吊销的证书文件为 <code>cert.pem</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 生成证书吊销列表文件</span></span><br><span class="line"><span class="comment"># 可选参数</span></span><br><span class="line"><span class="comment">#   -crldays 下一个吊销列表将在n天后发布</span></span><br><span class="line"><span class="comment">#   -crlhours 下一个吊销列表将在n小时后发布</span></span><br><span class="line">openssl ca -revoke cert.pem </span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看吊销列表</span></span><br><span class="line">openssl crl -<span class="keyword">in</span> testca.crl -text -noout</span><br></pre></td></tr></table></figure>



<h4 id="附件"><a href="#附件" class="headerlink" title="附件"></a>附件</h4><h5 id="证书请求文件参数说明"><a href="#证书请求文件参数说明" class="headerlink" title="证书请求文件参数说明"></a>证书请求文件参数说明</h5><table>
<thead>
<tr>
<th>参数</th>
<th>说明</th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>&#x2F;C</td>
<td>Country Name (2 letter code)</td>
<td>两字母的国家代码，例如 “CN”。</td>
</tr>
<tr>
<td>&#x2F;ST</td>
<td>State or Province Name</td>
<td>州或省的全名。</td>
</tr>
<tr>
<td>&#x2F;L</td>
<td>Locality Name (e.g., city)</td>
<td>城市或地区的全名。</td>
</tr>
<tr>
<td>&#x2F;O</td>
<td>Organization Name (e.g., company)</td>
<td>公司或组织的全名。</td>
</tr>
<tr>
<td>&#x2F;OU</td>
<td>Organizational Unit Name (e.g., section)</td>
<td>部门或单位的全名。</td>
</tr>
<tr>
<td>&#x2F;CN</td>
<td>Common Name (e.g., your name or your server’s hostname)</td>
<td>通常是你的服务器的主机名。</td>
</tr>
<tr>
<td>emailAddress</td>
<td>Email Address</td>
<td>电子邮件地址，用于证书联系。</td>
</tr>
</tbody></table>
<p>这些信息将用于填写证书请求文件。在实际情况中，一些字段可能不是必需的，具体取决于你的使用场景和证书颁发机构（CA）的要求。通常，“Common Name” 是最重要的字段，应该设置为与你的服务器域名或主机名相匹配的值。其他字段的值可以根据实际情况填写。</p>
<p>示例</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/C=CN/ST=Tianjin/L=Tianjin/O=Example/OU=DEV/CN=example.com/emailAddress=dev@example.com</span><br></pre></td></tr></table></figure>



<h5 id="X-509扩展配置"><a href="#X-509扩展配置" class="headerlink" title="X.509扩展配置"></a>X.509扩展配置</h5><p>v3.ext</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">authorityKeyIdentifier</span>=keyid,issuer</span><br><span class="line"><span class="attr">subjectKeyIdentifier</span>=hash</span><br><span class="line"><span class="attr">basicConstraints</span>=CA:<span class="literal">FALSE</span></span><br><span class="line"><span class="attr">keyUsage</span> = digitalSignature, nonRepudiation, keyEncipherment, dataEncipherment</span><br><span class="line"><span class="comment">#extendedKeyUsage = serverAuth</span></span><br><span class="line"><span class="attr">subjectAltName</span> = @alt_names</span><br><span class="line"><span class="section">[alt_names]</span></span><br><span class="line"><span class="attr">DNS.1</span>=example.io</span><br><span class="line"><span class="attr">DNS.2</span>=*.example.io</span><br><span class="line"><span class="attr">IP.3</span>=<span class="number">192.168</span>.<span class="number">0.2</span></span><br></pre></td></tr></table></figure>

<p> extendedKeyUsage 可以指定证书目的，即用途，一般有</p>
<p>​	serverAuth 保证远程计算机的身份</p>
<p>​	clientAuth 向远程计算机证明你的身份</p>
<p>​	codeSigning 确保软件来自软件发布者，保护软件在发行后不被更改</p>
<p>​	emailProtection 保护电子邮件消息</p>
<p>​	timeStamping 允许用当前时间签名数据,如果不指定，则默认为 所有应用程序策略</p>
<p>SubjectAlternativeName</p>
<p>​	DNS.1用来确保网站的域名必须时<code>*.example.com</code>，</p>
<p>​	IP.1用来确保网站的IP地址，如果证书里面的内容和实际对应不上，浏览器就会报错。</p>
<h5 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h5><p><a href="https://developer.baidu.com/article/detail.html?id=3350912">构建安全的X.509三级证书体系：OpenSSL实战指南-百度开发者中心 (baidu.com)</a></p>
<p><a href="https://www.cnblogs.com/happy-8090/articles/11830636.html">如何创建自签名的 SSL 证书 - HappyVK - 博客园 (cnblogs.com)</a></p>
<p><a href="https://www.cnblogs.com/linziping/p/16857167.html">关于OpeSSL生成自签名证书-包含完整证书链生成（全网最全） - 52只鱼 - 博客园 (cnblogs.com)</a></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Https证书</tag>
        <tag>OpenSSL</tag>
      </tags>
  </entry>
  <entry>
    <title>Systemd服务管理</title>
    <url>/2022/01/01/Linux/Systemd%E6%9C%8D%E5%8A%A1%E7%AE%A1%E7%90%86/</url>
    <content><![CDATA[<p><a href="https://cloud.tencent.com/developer/article/1516125">可能是史上最全面易懂的 Systemd 服务管理教程！( 强烈建议收藏 )-腾讯云开发者社区-腾讯云 (tencent.com)</a></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Systemd</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu/Debian安装PostgreSQL和TimescaleDB插件</title>
    <url>/2022/07/01/Linux/Ubuntu-Debian%E5%AE%89%E8%A3%85PostgreSQL%E5%92%8CTimescaleDB%E6%8F%92%E4%BB%B6/</url>
    <content><![CDATA[<p>导入pg源及签名</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo sh -c &#x27;echo &quot;deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main&quot; &gt; /etc/apt/sources.list.d/pgdg.list&#x27;</span><br><span class="line">wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -</span><br></pre></td></tr></table></figure>

<p>导入TimeScalaDB 源及签名<br>debian版</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sh -c &quot;echo &#x27;deb [signed-by=/usr/share/keyrings/timescale.keyring] https://packagecloud.io/timescale/timescaledb/debian/ $(lsb_release -c -s) main&#x27; &gt; /etc/apt/sources.list.d/timescaledb.list&quot;</span><br><span class="line">wget --quiet -O - https://packagecloud.io/timescale/timescaledb/gpgkey | gpg --dearmor -o /usr/share/keyrings/timescale.keyring</span><br></pre></td></tr></table></figure>

<p><a href="https://so.csdn.net/so/search?q=ubuntu&spm=1001.2101.3001.7020">ubuntu</a>版</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sh -c &quot;echo &#x27;deb [signed-by=/usr/share/keyrings/timescale.keyring] https://packagecloud.io/timescale/timescaledb/ubuntu/ $(lsb_release -c -s) main&#x27; &gt; /etc/apt/sources.list.d/timescaledb.list&quot;</span><br><span class="line">wget --quiet -O - https://packagecloud.io/timescale/timescaledb/gpgkey | gpg --dearmor -o /usr/share/keyrings/timescale.keyring</span><br></pre></td></tr></table></figure>

<p>安装</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">apt install postgresql-14</span><br></pre></td></tr></table></figure>

<p>启动pg</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">service postgresql start</span><br><span class="line"></span><br><span class="line">apt install postgresql-14-postgis-3</span><br><span class="line"></span><br><span class="line">apt install timescaledb-2-2.5.1-postgresql-14</span><br><span class="line"></span><br><span class="line">create databases test;</span><br><span class="line"></span><br><span class="line">\c test</span><br><span class="line"></span><br><span class="line">create extension postgis;</span><br><span class="line"></span><br><span class="line">create extension timescaledb;</span><br></pre></td></tr></table></figure>

<p>创建timescaledb扩展时会报一下错误</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">FATAL:  extension &quot;timescaledb&quot; must be preloaded</span><br><span class="line">HINT:  Please preload the timescaledb library via shared_preload_libraries.</span><br><span class="line"></span><br><span class="line">This can be done by editing the config file at: /etc/postgresql/14/main/postgresql.conf</span><br><span class="line">and adding &#x27;timescaledb&#x27; to the list in the shared_preload_libraries config.</span><br><span class="line">        # Modify postgresql.conf:</span><br><span class="line">        shared_preload_libraries = &#x27;timescaledb&#x27;</span><br><span class="line"></span><br><span class="line">Another way to do this, if not preloading other libraries, is with the command:</span><br><span class="line">        echo &quot;shared_preload_libraries = &#x27;timescaledb&#x27;&quot; &gt;&gt; /etc/postgresql/14/main/postgresql.conf</span><br><span class="line"></span><br><span class="line">(Will require a database restart.)</span><br><span class="line"></span><br><span class="line">If you REALLY know what you are doing and would like to load the library without preloading, you can disable this check with:</span><br><span class="line">        SET timescaledb.allow_install_without_preload = &#x27;on&#x27;;</span><br><span class="line">server closed the connection unexpectedly</span><br><span class="line">        This probably means the server terminated abnormally</span><br><span class="line">        before or while processing the request.</span><br><span class="line">The connection to the server was lost. Attempting reset: Succeeded.</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>根据提示修改配置文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo &quot;shared_preload_libraries = &#x27;timescaledb&#x27;&quot; &gt;&gt; /etc/postgresql/14/main/postgresql.conf</span><br></pre></td></tr></table></figure>

<p>重启pg</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">service postgresql restart</span><br></pre></td></tr></table></figure>

<p>再次建立扩展</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create extension timescaledb;</span><br></pre></td></tr></table></figure>

<p>查看已安装好的扩展</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">\dx</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>PostgreSQL</tag>
        <tag>TimescaleDB</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu18.04安装ROS-Melodic</title>
    <url>/2025/09/04/Linux/Ubuntu18.04%E5%AE%89%E8%A3%85ROS-Melodic/</url>
    <content><![CDATA[<h2 id="系统要求"><a href="#系统要求" class="headerlink" title="系统要求"></a>系统要求</h2><ul>
<li><strong>操作系统</strong>: Ubuntu 18.04 (Bionic Beaver)</li>
<li><strong>ROS 版本</strong>: Melodic Morenia (官方长期支持版本)</li>
<li><strong>Python 版本</strong>: 2.7.x (ROS Melodic 默认使用)</li>
</ul>
<h2 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h2><h3 id="1-配置软件源和密钥"><a href="#1-配置软件源和密钥" class="headerlink" title="1. 配置软件源和密钥"></a>1. 配置软件源和密钥</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> sh -c <span class="string">&#x27;echo &quot;deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main&quot; &gt; /etc/apt/sources.list.d/ros-latest.list&#x27;</span></span><br><span class="line"><span class="built_in">sudo</span> apt-key adv --keyserver <span class="string">&#x27;hkp://keyserver.ubuntu.com:80&#x27;</span> --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654</span><br></pre></td></tr></table></figure>

<h3 id="2-更新软件包列表"><a href="#2-更新软件包列表" class="headerlink" title="2. 更新软件包列表"></a>2. 更新软件包列表</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt update</span><br></pre></td></tr></table></figure>

<h3 id="3-安装-ROS-Melodic"><a href="#3-安装-ROS-Melodic" class="headerlink" title="3. 安装 ROS Melodic"></a>3. 安装 ROS Melodic</h3><p><strong>完整桌面版</strong> (推荐，包含 GUI 工具、仿真器和常用库):</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt install ros-melodic-desktop-full</span><br></pre></td></tr></table></figure>

<p><strong>其他可选版本</strong>:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt install ros-melodic-desktop    <span class="comment"># 基础桌面版（无仿真器）</span></span><br><span class="line"><span class="built_in">sudo</span> apt install ros-melodic-ros-base   <span class="comment"># 最小核心版（仅通信库和工具）</span></span><br></pre></td></tr></table></figure>

<h3 id="4-初始化-rosdep"><a href="#4-初始化-rosdep" class="headerlink" title="4. 初始化 rosdep"></a>4. 初始化 rosdep</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> rosdep init</span><br><span class="line">rosdep update</span><br></pre></td></tr></table></figure>

<h3 id="5-设置环境变量"><a href="#5-设置环境变量" class="headerlink" title="5. 设置环境变量"></a>5. 设置环境变量</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;source /opt/ros/melodic/setup.bash&quot;</span> &gt;&gt; ~/.bashrc</span><br><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure>

<h3 id="6-安装构建工具和依赖"><a href="#6-安装构建工具和依赖" class="headerlink" title="6. 安装构建工具和依赖"></a>6. 安装构建工具和依赖</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt install python-rosinstall python-rosinstall-generator python-wstool build-essential</span><br></pre></td></tr></table></figure>

<h3 id="7-创建示例工作空间-可选"><a href="#7-创建示例工作空间-可选" class="headerlink" title="7. 创建示例工作空间 (可选)"></a>7. 创建示例工作空间 (可选)</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p ~/catkin_ws/src</span><br><span class="line"><span class="built_in">cd</span> ~/catkin_ws/</span><br><span class="line">catkin_make</span><br><span class="line"><span class="built_in">source</span> devel/setup.bash</span><br></pre></td></tr></table></figure>

<h2 id="验证安装"><a href="#验证安装" class="headerlink" title="验证安装"></a>验证安装</h2><p>打开新终端，运行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">roscore</span><br></pre></td></tr></table></figure>

<p>如果看到类似以下输出，说明安装成功：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">... logging to /home/username/.ros/log/xxx/roslaunch-hostname-xxx.log</span><br><span class="line">Checking log directory for disk usage. This may take a while.</span><br><span class="line">Press Ctrl-C to interrupt</span><br><span class="line">Done checking log file disk usage. Usage is &lt;1GB.</span><br><span class="line"></span><br><span class="line">started roslaunch server http://hostname:xxx/</span><br><span class="line">ros_comm version 1.14.3</span><br></pre></td></tr></table></figure>

<h2 id="常见问题解决"><a href="#常见问题解决" class="headerlink" title="常见问题解决"></a>常见问题解决</h2><h3 id="1-密钥获取失败"><a href="#1-密钥获取失败" class="headerlink" title="1. 密钥获取失败"></a>1. 密钥获取失败</h3><p>如果 <code>apt-key adv</code> 失败，可以手动下载并添加：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -sSL <span class="string">&#x27;http://keyserver.ubuntu.com/pks/lookup?op=get&amp;search=0xC1CF6E31E6BADE8868B172B4F42ED6FBAB17C654&#x27;</span> | <span class="built_in">sudo</span> apt-key add -</span><br></pre></td></tr></table></figure>

<h3 id="2-网络问题"><a href="#2-网络问题" class="headerlink" title="2. 网络问题"></a>2. 网络问题</h3><p>如果下载速度慢，可以替换为国内镜像源（如清华源）：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> sh -c <span class="string">&#x27;. /etc/lsb-release &amp;&amp; echo &quot;deb https://mirrors.tuna.tsinghua.edu.cn/ros/ubuntu/ `lsb_release -cs` main&quot; &gt; /etc/apt/sources.list.d/ros-latest.list&#x27;</span></span><br></pre></td></tr></table></figure>

<h3 id="3-Python-版本验证"><a href="#3-Python-版本验证" class="headerlink" title="3. Python 版本验证"></a>3. Python 版本验证</h3><p>确保系统中已安装 Python 2.7：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python --version  <span class="comment"># 应显示 Python 2.7.x</span></span><br></pre></td></tr></table></figure>

<h2 id="测试命令"><a href="#测试命令" class="headerlink" title="测试命令"></a>测试命令</h2><p>安装完成后，可以使用以下命令测试 ROS 功能：</p>
<ul>
<li><code>roscore</code> - 启动 ROS master</li>
<li><code>rosrun roscpp_tutorials talker</code> - 运行发布者节点</li>
<li><code>rosrun roscpp_tutorials listener</code> - 运行订阅者节点</li>
</ul>
<h2 id="参考资源"><a href="#参考资源" class="headerlink" title="参考资源"></a>参考资源</h2><ul>
<li><a href="http://wiki.ros.org/melodic">ROS Melodic 官方文档</a></li>
<li><a href="http://wiki.ros.org/ROS/Installation">ROS 安装指南</a></li>
</ul>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>ROS</tag>
        <tag>Ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu部署LIO-SAM</title>
    <url>/2025/09/04/Linux/Ubuntu%E9%83%A8%E7%BD%B2LIO-SAM/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>LIO-SAM (Lidar Inertial Odometry and Mapping) 是一个紧耦合的激光雷达惯性里程计框架，集成了 IMU 预积分和 GPS 数据，适用于机器人建图和定位。</p>
<h2 id="环境要求"><a href="#环境要求" class="headerlink" title="环境要求"></a>环境要求</h2><table>
<thead>
<tr>
<th>组件</th>
<th>版本</th>
<th>下载地址</th>
</tr>
</thead>
<tbody><tr>
<td><strong>Ubuntu</strong></td>
<td>18.04+</td>
<td>-</td>
</tr>
<tr>
<td><strong>ROS</strong></td>
<td>Melodic</td>
<td>-</td>
</tr>
<tr>
<td><strong>gtsam</strong></td>
<td>4.0.2</td>
<td><a href="https://github.com/borglab/gtsam">GitHub</a></td>
</tr>
<tr>
<td><strong>Eigen</strong></td>
<td>3.3.7</td>
<td><a href="https://gitlab.com/libeigen/eigen/-/archive/3.3.7/eigen-3.3.7.tar.gz">GitLab</a></td>
</tr>
<tr>
<td><strong>LIO-SAM</strong></td>
<td>最新版</td>
<td><a href="https://github.com/TixiaoShan/LIO-SAM.git">GitHub</a></td>
</tr>
</tbody></table>
<h2 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h2><h3 id="1-安装系统依赖"><a href="#1-安装系统依赖" class="headerlink" title="1. 安装系统依赖"></a>1. 安装系统依赖</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 更新系统包列表</span></span><br><span class="line"><span class="built_in">sudo</span> apt update</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装必要的开发工具和依赖库</span></span><br><span class="line"><span class="built_in">sudo</span> apt install -y build-essential cmake libboost-all-dev</span><br></pre></td></tr></table></figure>

<h3 id="2-安装-Eigen-库"><a href="#2-安装-Eigen-库" class="headerlink" title="2. 安装 Eigen 库"></a>2. 安装 Eigen 库</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 下载并解压 Eigen</span></span><br><span class="line">wget https://gitlab.com/libeigen/eigen/-/archive/3.3.7/eigen-3.3.7.tar.gz</span><br><span class="line">tar -zxvf eigen-3.3.7.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译安装</span></span><br><span class="line"><span class="built_in">cd</span> eigen-3.3.7</span><br><span class="line"><span class="built_in">mkdir</span> build &amp;&amp; <span class="built_in">cd</span> build</span><br><span class="line"><span class="built_in">sudo</span> cmake ..</span><br><span class="line"><span class="built_in">sudo</span> make install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建符号链接以便系统找到 Eigen 头文件</span></span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">cp</span> -r /usr/local/include/eigen3/Eigen/ /usr/local/include/</span><br></pre></td></tr></table></figure>

<h3 id="3-安装-ROS-Melodic"><a href="#3-安装-ROS-Melodic" class="headerlink" title="3. 安装 ROS Melodic"></a>3. 安装 ROS Melodic</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 设置 ROS 软件源（清华镜像）</span></span><br><span class="line"><span class="built_in">sudo</span> sh -c <span class="string">&#x27;. /etc/lsb-release &amp;&amp; echo &quot;deb http://mirrors.tuna.tsinghua.edu.cn/ros/ubuntu/ $DISTRIB_CODENAME main&quot; &gt; /etc/apt/sources.list.d/ros-latest.list&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加 ROS 密钥</span></span><br><span class="line"><span class="built_in">sudo</span> apt-key adv --keyserver keyserver.ubuntu.com --recv-keys F42ED6FBAB17C654</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新包列表并安装 ROS</span></span><br><span class="line"><span class="built_in">sudo</span> apt update</span><br><span class="line"><span class="built_in">sudo</span> apt-get install -y ros-melodic-desktop-full</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装 ROS 开发工具</span></span><br><span class="line"><span class="built_in">sudo</span> apt-get install -y ros-melodic-rqt* python-rosdep python-rosinstall python-rosinstall-generator python-wstool build-essential</span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化 rosdep</span></span><br><span class="line"><span class="built_in">sudo</span> rosdep init</span><br><span class="line">rosdep update</span><br></pre></td></tr></table></figure>

<h3 id="4-配置-ROS-环境"><a href="#4-配置-ROS-环境" class="headerlink" title="4. 配置 ROS 环境"></a>4. 配置 ROS 环境</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 将 ROS 环境变量添加到 bashrc</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;source /opt/ros/melodic/setup.bash&quot;</span> &gt;&gt; ~/.bashrc</span><br><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure>

<h3 id="5-安装-gtsam"><a href="#5-安装-gtsam" class="headerlink" title="5. 安装 gtsam"></a>5. 安装 gtsam</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 克隆 gtsam 仓库</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/borglab/gtsam.git</span><br><span class="line"><span class="built_in">cd</span> gtsam</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换到 4.0.2 版本</span></span><br><span class="line">git checkout 4.0.2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译安装</span></span><br><span class="line"><span class="built_in">mkdir</span> build &amp;&amp; <span class="built_in">cd</span> build</span><br><span class="line">cmake ..</span><br><span class="line">make -j$(<span class="built_in">nproc</span>)</span><br><span class="line"><span class="built_in">sudo</span> make install</span><br></pre></td></tr></table></figure>

<h3 id="6-安装-LIO-SAM"><a href="#6-安装-LIO-SAM" class="headerlink" title="6. 安装 LIO-SAM"></a>6. 安装 LIO-SAM</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建工作空间</span></span><br><span class="line"><span class="built_in">mkdir</span> -p ~/catkin_ws/src</span><br><span class="line"><span class="built_in">cd</span> ~/catkin_ws/src</span><br><span class="line"></span><br><span class="line"><span class="comment"># 克隆 LIO-SAM</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/TixiaoShan/LIO-SAM.git</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装依赖</span></span><br><span class="line"><span class="built_in">cd</span> ~/catkin_ws</span><br><span class="line">rosdep install --from-paths src --ignore-src -y</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译</span></span><br><span class="line">catkin_make -j$(<span class="built_in">nproc</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置工作空间环境</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;source ~/catkin_ws/devel/setup.bash&quot;</span> &gt;&gt; ~/.bashrc</span><br><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure>

<h2 id="验证安装"><a href="#验证安装" class="headerlink" title="验证安装"></a>验证安装</h2><h3 id="测试-ROS-安装"><a href="#测试-ROS-安装" class="headerlink" title="测试 ROS 安装"></a>测试 ROS 安装</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 启动 ROS 核心</span></span><br><span class="line">roscore</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新终端中检查 ROS 环境</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$ROS_PACKAGE_PATH</span></span><br></pre></td></tr></table></figure>

<h3 id="测试-LIO-SAM-编译"><a href="#测试-LIO-SAM-编译" class="headerlink" title="测试 LIO-SAM 编译"></a>测试 LIO-SAM 编译</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 检查 LIO-SAM 包是否存在</span></span><br><span class="line">rospack find lio_sam</span><br><span class="line"></span><br><span class="line"><span class="comment"># 尝试运行节点（需要相应的启动文件）</span></span><br><span class="line">roslaunch lio_sam run.launch</span><br></pre></td></tr></table></figure>

<h2 id="常见问题解决"><a href="#常见问题解决" class="headerlink" title="常见问题解决"></a>常见问题解决</h2><h3 id="1-Eigen-头文件找不到"><a href="#1-Eigen-头文件找不到" class="headerlink" title="1. Eigen 头文件找不到"></a>1. Eigen 头文件找不到</h3><p><strong>问题</strong>：编译时出现 <code>fatal error: Eigen/Dense: No such file or directory</code></p>
<p><strong>解决方案</strong>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 确保 Eigen 头文件在正确位置</span></span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">ln</span> -s /usr/local/include/eigen3/Eigen /usr/local/include/Eigen</span><br></pre></td></tr></table></figure>

<h3 id="2-gtsam-版本不兼容"><a href="#2-gtsam-版本不兼容" class="headerlink" title="2. gtsam 版本不兼容"></a>2. gtsam 版本不兼容</h3><p><strong>问题</strong>：需要特定版本的 gtsam</p>
<p><strong>解决方案</strong>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 确保使用 gtsam 4.0.2 版本</span></span><br><span class="line"><span class="built_in">cd</span> gtsam</span><br><span class="line">git checkout 4.0.2</span><br></pre></td></tr></table></figure>

<h3 id="3-ROS-依赖问题"><a href="#3-ROS-依赖问题" class="headerlink" title="3. ROS 依赖问题"></a>3. ROS 依赖问题</h3><p><strong>问题</strong>：缺少 ROS 包依赖</p>
<p><strong>解决方案</strong>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装所有缺失的依赖</span></span><br><span class="line">rosdep install --from-paths src --ignore-src -y</span><br></pre></td></tr></table></figure>

<h2 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h2><h3 id="启动-LIO-SAM"><a href="#启动-LIO-SAM" class="headerlink" title="启动 LIO-SAM"></a>启动 LIO-SAM</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 启动 LIO-SAM 主要节点</span></span><br><span class="line">roslaunch lio_sam run.launch</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动可视化工具</span></span><br><span class="line">roslaunch lio_sam visualization.launch</span><br></pre></td></tr></table></figure>

<h3 id="数据播放"><a href="#数据播放" class="headerlink" title="数据播放"></a>数据播放</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 播放 bag 文件</span></span><br><span class="line">rosbag play your_data.bag</span><br></pre></td></tr></table></figure>

<h2 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">~/catkin_ws/</span><br><span class="line">└── src/</span><br><span class="line">    └── LIO-SAM/</span><br><span class="line">        ├── config/          # 配置文件</span><br><span class="line">        ├── launch/          # 启动文件</span><br><span class="line">        ├── src/            # 源代码</span><br><span class="line">        └── package.xml     # ROS 包配置</span><br></pre></td></tr></table></figure>

<h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ol>
<li><strong>版本匹配</strong>：确保所有组件的版本兼容性</li>
<li><strong>内存要求</strong>：编译过程需要足够的内存，建议 8GB+ RAM</li>
<li><strong>网络连接</strong>：下载依赖需要稳定的网络连接</li>
<li><strong>权限问题</strong>：某些操作需要 sudo 权限</li>
</ol>
<h2 id="后续步骤"><a href="#后续步骤" class="headerlink" title="后续步骤"></a>后续步骤</h2><ol>
<li><strong>配置参数</strong>：根据你的传感器调整 <code>config/params.yaml</code></li>
<li><strong>数据采集</strong>：使用你的传感器采集数据</li>
<li><strong>性能调优</strong>：根据实际场景调整算法参数</li>
</ol>
<h2 id="参考资源"><a href="#参考资源" class="headerlink" title="参考资源"></a>参考资源</h2><ul>
<li><a href="https://github.com/TixiaoShan/LIO-SAM">LIO-SAM 官方文档</a></li>
<li><a href="http://wiki.ros.org/melodic/Installation/Ubuntu">ROS Melodic 安装指南</a></li>
<li><a href="https://gtsam.org/">gtsam 文档</a></li>
</ul>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Ubuntu</tag>
        <tag>机器人</tag>
        <tag>LIO-SAM</tag>
        <tag>SLAM</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu部署ROS</title>
    <url>/2025/08/29/Linux/Ubuntu%E9%83%A8%E7%BD%B2ROS/</url>
    <content><![CDATA[<h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p>建议准备一个干净、换好源的 <strong>Ubuntu 16.04</strong> 及以上版本（建议 <a href="https://mirrors-i.tuna.tsinghua.edu.cn/help/ubuntu/">清华源</a> ），本教程也适用其他 ROS1版本。</p>
<p>查看ubuntu 版本</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsb_release -a</span><br></pre></td></tr></table></figure>
<p>根据自己的 Ubuntu 的版本选择 ROS 版本 (示例是 <strong>Ubuntu 18.04</strong> 所以对应ROS版本为 <strong>melodic</strong>）<br>![[Ubuntu部署ROS&#x2F;IMG-20250829234441526.png]]</p>
<h2 id="ROS安装"><a href="#ROS安装" class="headerlink" title="ROS安装"></a>ROS安装</h2><h4 id="1-安装源"><a href="#1-安装源" class="headerlink" title="1. 安装源"></a>1. 安装源</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> sh -c <span class="string">&#x27;. /etc/lsb-release &amp;&amp; echo &quot;deb http://mirrors.tuna.tsinghua.edu.cn/ros/ubuntu/ `lsb_release -cs` main&quot; &gt; /etc/apt/sources.list.d/ros-latest.list&#x27;</span></span><br></pre></td></tr></table></figure>

<h4 id="2-设置密钥"><a href="#2-设置密钥" class="headerlink" title="2. 设置密钥"></a>2. 设置密钥</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt-key adv --keyserver <span class="string">&#x27;hkp://keyserver.ubuntu.com:80&#x27;</span> --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="3-安装"><a href="#3-安装" class="headerlink" title="3. 安装"></a>3. 安装</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt update</span><br><span class="line"><span class="built_in">sudo</span> apt install ros-melodic-desktop</span><br><span class="line"><span class="comment"># 其他版本替换对应的版本（例如 noetic ）</span></span><br><span class="line"><span class="comment"># sudo apt install ros-noetic-desktop</span></span><br></pre></td></tr></table></figure>

<h4 id="4-配置环境变量"><a href="#4-配置环境变量" class="headerlink" title="4. 配置环境变量"></a>4. 配置环境变量</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;source /opt/ros/melodic/setup.bash&quot;</span> &gt;&gt; ~/.bashrc</span><br><span class="line"><span class="built_in">source</span> ~/.bashrc  <span class="comment">#使环境生效</span></span><br><span class="line"><span class="comment"># 替换对应版本同上</span></span><br><span class="line"><span class="comment"># echo &quot;source /opt/ros/noetic/setup.bash&quot; &gt;&gt; ~/.bashrc</span></span><br></pre></td></tr></table></figure>

<h4 id="5-配置rosdep"><a href="#5-配置rosdep" class="headerlink" title="5. 配置rosdep"></a>5. 配置rosdep</h4><p>在使用许多 ROS 工具之前，需要初始化 <code>rosdep</code>，有些功能包源码编译需要<code>rosdep</code> 来安装这些系统依赖项，不配置也不影响ros使用，所以后面需要时再来配置也可以。 rosdep 请求的文件都放在 github 上的, 推荐使用代理。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># 安装依赖</span></span><br><span class="line"><span class="built_in">sudo</span> apt install python-rosdep python-rosinstall python-rosinstall-generator python-wstool build-essential</span><br><span class="line"><span class="comment"># 对于Ubuntu20</span></span><br><span class="line"><span class="comment"># sudo apt install python3-rosdep python3-rosinstall python3-rosinstall-generator python3-wstool build-essential</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化</span></span><br><span class="line"><span class="built_in">sudo</span> rosdep init</span><br><span class="line">rosdep update</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">roscore</span><br><span class="line">rosrun turtlesim turtlesim_node</span><br><span class="line">rosrun turtlesim turtle_teleop_key</span><br></pre></td></tr></table></figure>

<p>参考<br><a href="https://wiki.ros.org/melodic/Installation/Ubuntu">官方文档(melodic)</a><br><a href="https://blog.csdn.net/qq_41450811/article/details/99079041">ubuntu18.04安装ROS Melodic（最详细配置）-CSDN博客</a><br><a href="https://blog.csdn.net/qq_43310597/article/details/105756819?utm_medium=distribute.pc_relevant.none-task-blog-baidujs_title-2&spm=1001.2101.3001.4242">基于Ubuntu18.04的ROS Melodic环境详细配置（含各种大坑及填坑）</a><br><a href="https://blog.csdn.net/maizousidemao/article/details/119846292">[ROS 系列学习教程] ROS与操作系统版本对应关系_ros版本-CSDN博客</a></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>ROS</tag>
        <tag>Ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows与Linux文件互传工具</title>
    <url>/2024/03/10/Linux/Windows%E4%B8%8ELinux%E6%96%87%E4%BB%B6%E4%BA%92%E4%BC%A0%E5%B7%A5%E5%85%B7/</url>
    <content><![CDATA[<p>参考</p>
<p><a href="https://www.linuxidc.com/Linux/2015-02/113309.htm">pscp使用详解 Windows与Linux文件互传工具_Linux教程_Linux公社-Linux系统门户网站 (linuxidc.com)</a></p>
<p><a href="https://blog.csdn.net/zxl315/article/details/5955202">psftp的用法（超级详细）_psftp压缩文件夹命令-CSDN博客</a></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>pscp</tag>
        <tag>scp</tag>
        <tag>sftp</tag>
        <tag>psftp</tag>
      </tags>
  </entry>
  <entry>
    <title>wpa_supplicant及wpa_cli使用方法</title>
    <url>/2019/08/04/Linux/wpa_supplicant%E5%8F%8Awpa_cli%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<p><code>wpa_supplicant</code>是一个连接、配置<code>WIFI</code>的工具，它主要包含<code>wpa_supplicant</code>与<code>wpa_cli</code>两个程序。通常情况下，可以通过<code>wpa_cli</code>来进行<code>WIFI</code>的配置与连接，如果有特殊的需要，可以编写应用程序直接调用<code>wpa_supplicant</code>的接口直接开发。</p>
<h2 id="启动wpa-supplicant应用"><a href="#启动wpa-supplicant应用" class="headerlink" title="启动wpa_supplicant应用"></a>启动<code>wpa_supplicant</code>应用</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">wpa_supplicant -D nl80211 -i wlan0 -c /etc/wpa_supplicant.conf -B</span></span><br></pre></td></tr></table></figure>

<p><code>/etc/wpa_supplicant.conf</code>文件里，添加下面代码:</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">ctrl_interface</span>=/var/run/wpa_supplicant update_config=<span class="number">1</span></span><br></pre></td></tr></table></figure>

<h2 id="启动wpa-cli应用"><a href="#启动wpa-cli应用" class="headerlink" title="启动wpa_cli应用"></a>启动<code>wpa_cli</code>应用</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ wpa_cli -i wlan0 scan <span class="comment"># 搜索附近wifi网络 </span></span><br><span class="line">$ wpa_cli -i wlan0 scan_result <span class="comment"># 打印搜索wifi网络结果 </span></span><br><span class="line">$ wpa_cli -i wlan0 add_network <span class="comment"># 添加一个网络连接</span></span><br></pre></td></tr></table></figure>

<p>如果要连接加密方式是<code>[WPA-PSK-CCMP+TKIP][WPA2-PSK-CCMP+TKIP][ESS]</code> (<code>wpa</code>加密)，<code>wifi</code>名称是<code>name</code>，<code>wifi</code>密码是：<code>psk</code>。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ wpa_cli -i wlan0 set_network 0 ssid <span class="string">&#x27;&quot;name&quot;&#x27;</span> </span><br><span class="line">$ wpa_cli -i wlan0 set_network 0 psk <span class="string">&#x27;&quot;psk&quot;&#x27;</span> </span><br><span class="line">$ wpa_cli -i wlan0 enable_network 0</span><br></pre></td></tr></table></figure>

<p>如果要连接加密方式是<code>[WEP][ESS]</code> (<code>wep</code>加密)，<code>wifi</code>名称是<code>name</code>，<code>wifi</code>密码是<code>psk</code>。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ wpa_cli -i wlan0 set_network 0 ssid <span class="string">&#x27;&quot;name&quot;&#x27;</span> </span><br><span class="line">$ wpa_cli -i wlan0 set_network 0 key_mgmt NONE </span><br><span class="line">$ wpa_cli -i wlan0 set_network 0 wep_key0 <span class="string">&#x27;&quot;psk&quot;&#x27;</span> </span><br><span class="line">$ wpa_cli -i wlan0 enable_network 0</span><br></pre></td></tr></table></figure>

<p>如果要连接加密方式是<code>[ESS]</code> (无加密)，<code>wifi</code>名称是<code>name</code>。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ wpa_cli -i wlan0 set_network 0 ssid <span class="string">&#x27;&quot;name&quot;&#x27;</span> </span><br><span class="line">$ wpa_cli -i wlan0 set_network 0 key_mgmt NONE </span><br><span class="line">$ wpa_cli -i wlan0 enable_network 0</span><br></pre></td></tr></table></figure>

<h2 id="分配ip-netmask-gateway-dns"><a href="#分配ip-netmask-gateway-dns" class="headerlink" title="分配ip/netmask/gateway/dns"></a>分配<code>ip/netmask/gateway/dns</code></h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">udhcpc -i wlan0 -s /etc/udhcpc.script -q</span></span><br></pre></td></tr></table></figure>

<p>执行完毕，就可以连接网络了。</p>
<h2 id="保存连接"><a href="#保存连接" class="headerlink" title="保存连接"></a>保存连接</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ wpa_cli -i wlan0 save_config</span><br></pre></td></tr></table></figure>

<h2 id="断开连接"><a href="#断开连接" class="headerlink" title="断开连接"></a>断开连接</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ wpa_cli -i wlan0 disable_network 0</span><br></pre></td></tr></table></figure>

<h2 id="连接已有的连接"><a href="#连接已有的连接" class="headerlink" title="连接已有的连接"></a>连接已有的连接</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ wpa_cli -i wlan0 list_network <span class="comment">#列举所有保存的连接 </span></span><br><span class="line">$ wpa_cli -i wlan0 select_network 0 <span class="comment">#连接第1个保存的连接 </span></span><br><span class="line">$ wpa_cli -i wlan0 enable_network 0 <span class="comment">#使能第1个保存的连接</span></span><br></pre></td></tr></table></figure>

<h2 id="断开wifi"><a href="#断开wifi" class="headerlink" title="断开wifi"></a>断开<code>wifi</code></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ifconfig wlan0 down </span><br><span class="line">$ killall udhcpc </span><br><span class="line">$ killall wpa_supplicant</span><br></pre></td></tr></table></figure>

<h2 id="wpa-wifi-tool使用方法"><a href="#wpa-wifi-tool使用方法" class="headerlink" title="wpa_wifi_tool使用方法"></a><code>wpa_wifi_tool</code>使用方法</h2><p><code>wpa_wifi_tool</code>是基于<code>wpa_supplicant</code>及<code>wpa_cli</code>的一个用于快速设置<code>wifi</code>的工具，方便调试时连接<code>wifi</code>使用。使用方法：1、运行<code>wpa_wifi_tool</code>;2、输入<code>help</code>进行命令查看;3、<code>s</code>进行<code>SSID</code>扫描;4、<code>c[n]</code>进行<code>wifi</code>连接，连接时若为新的<code>SSID</code>则需输入密码，若为已保存的<code>SSID</code>则可以使用保存过的密码或者重新输入密码;5、<code>e</code>退出工具。</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>wifi</tag>
        <tag>wpa_cli</tag>
        <tag>wpa_supplicant</tag>
        <tag>无线</tag>
        <tag>Wi-Fi</tag>
      </tags>
  </entry>
  <entry>
    <title>编译Qt 4.8.7源码</title>
    <url>/2025/08/04/Linux/%E7%BC%96%E8%AF%91Qt%204.8.7%E6%BA%90%E7%A0%81/</url>
    <content><![CDATA[<p>一、先来看一篇转载文章《<a href="https://www.jianshu.com/p/e2bf0dd962d9">在 VS2015 中使用 Qt4</a>》</p>
<p><a href="http://tangzx.qiniudn.com/post-0111-qt4-vs2015.html">http://tangzx.qiniudn.com/post-0111-qt4-vs2015.html</a> 最早的原文，看不到了</p>
<p><a href="https://github.com/district10/qt4-vs2015x64">https://github.com/district10/qt4-vs2015x64</a> 原作者的github，里面的东东都下载不了了</p>
<p>二、firecat本人的教程</p>
<p>0、Qt官方</p>
<p>Qt4.8.7官方源码下载</p>
<p><a href="https://download.qt.io/new_archive/qt/4.8/4.8.7/">https://download.qt.io/new_archive&#x2F;qt&#x2F;4.8&#x2F;4.8.7&#x2F;</a></p>
<p>官网的exe只提供了MSVC2010，没有更高版本的。高版本需要自己下载源码编译。</p>
<p>源码里面的配置文件已经提供了MSVC 2015的编译选项，\qt-everywhere-opensource-src-4.8.7\mkspecs\win32-msvc2015</p>
<p>参照官方提供的编译文档一步一步执行即可；但是配置文件里没有提供MSVC 2017的编译选项。</p>
<p>官方编译的文档</p>
<p><a href="https://doc.qt.io/archives/qt-4.8/installation.html">https://doc.qt.io/archives/qt-4.8/installation.html</a></p>
<p><a href="https://doc.qt.io/archives/qt-4.8/configure-options.html">https://doc.qt.io/archives/qt-4.8/configure-options.html</a></p>
<p><a href="https://doc.qt.io/archives/qt-4.8/install-win.html">https://doc.qt.io/archives/qt-4.8/install-win.html</a></p>
<p><a href="https://doc.qt.io/archives/qt-4.8/install-mac.html">https://doc.qt.io/archives/qt-4.8/install-mac.html</a></p>
<p><a href="https://doc.qt.io/qt-5/build-sources.html">https://doc.qt.io/qt-5/build-sources.html</a></p>
<p>1、Qt 4.8.7+MSVC 2017</p>
<p>推荐使用第三方提供的源码，它已经是修改好的，里面含有MSVC 2017编译选项，可以编译。</p>
<p><a href="https://github.com/scharsig/Qt">https://github.com/scharsig/Qt</a> Qt4.8.7+MSVC2017源码</p>
<p><a href="https://forum.qt.io/topic/91623/building-qt-4-8-7-with-visual-studio-2017">https://forum.qt.io/topic/91623/building-qt-4-8-7-with-visual-studio-2017</a> Qt4.8.7+MSVC2017论坛</p>
<p><a href="https://github.com/sandym/qt-patches">https://github.com/sandym/qt-patches</a> 仅供参考，编译补丁</p>
<p><a href="https://github.com/Homebrew/formula-patches/tree/master/qt">https://github.com/Homebrew/formula-patches/tree/master/qt</a> 仅供参考，编译补丁</p>
<p><a href="https://github.com/BartVandewoestyne/qt_4_8_7_with_vs2017_patch">https://github.com/BartVandewoestyne/qt_4_8_7_with_vs2017_patch</a> 仅供参考，编译补丁</p>
<p>完整的编译过程：</p>
<p>下载第三方源码<a href="https://github.com/scharsig/Qt/tree/master/qt-4.8.7-vs2017">https://github.com/scharsig/Qt/tree/master/qt-4.8.7-vs2017</a> 然后解压</p>
<p>-–step1—</p>
<p>Windows桌面-开始-程序-Visual Studio 2017-Visual Studio Tools-VC-x86 Native Tools Command Prompt for VS 2017</p>
<p>-–step2—</p>
<p>C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise&gt;cd F:\Qt\setup-exe\4.8.7\Qt-master\qt-4.8.7-vs2017</p>
<p>-–step3—</p>
<p>F:\Qt\setup-exe\4.8.7\Qt-master\qt-4.8.7-vs2017&gt;configure -help</p>
<p>-–step4—</p>
<p>F:\Qt\setup-exe\4.8.7\Qt-master\qt-4.8.7-vs2017&gt;<br>configure -make nmake -debug-and-release -opensource -confirm-license -platform win32-msvc2017 -prefix F:\Qt\Qt4.8.7-msvc2017 -nomake examples -nomake tests</p>
<p>如果不想编译这么多功能模块，可以精简为：</p>
<p>configure -make nmake -debug-and-release -opensource -confirm-license -platform win32-msvc2017 -prefix F:\Qt\Qt4.8.7-msvc2017 \<br>  -no-qt3support -no-multimedia \<br>  -no-audio-backend -no-phonon -no-phonon-backend -no-libtiff \<br>  -no-libmng -no-dbus -no-nis -nomake examples -nomake tests</p>
<pre><code> -release              Compile and link Qt with debugging turned off. -debug                Compile and link Qt with debugging turned on. -nomake tests         Disable building of tests to speed up compilation -nomake examples      Disable building of examples to speed up compilation -confirm-license      Automatically acknowledge the LGPL 2.1 license.
</code></pre>
<p>-–step5—</p>
<p>F:\Qt\setup-exe\4.8.7\Qt-master\qt-4.8.7-vs2017&gt;nmake</p>
<p>-–step6—</p>
<p>F:\Qt\setup-exe\4.8.7\Qt-master\qt-4.8.7-vs2017&gt;nmake install</p>
<p>-–step7—</p>
<p>添加到Qt Creator</p>
<p>![[编译Qt 4.8.7源码&#x2F;IMG-20250807081809727.png]]</p>
<p>-–step8—</p>
<p>新建项目测试，Qt Creator+Qt4.8.7+MSVC2017编译项目时，如果报错：</p>
<blockquote>
<p>intermediate\moc\moc_rs_actionzoompan.cpp:-1: error: C1041: 无法打开程序数据库“F:\CADCAM\QCAD\src\build-LibreCAD-v1.0.4-qt4-Desktop_Qt_4_8_7_MSVC2017_32bit-Debug\librecad\vc140.pdb”；如果要将多个 CL.EXE 写入同一个 .PDB 文件，请使用 &#x2F;FS</p>
</blockquote>
<p>解决办法：</p>
<p>在Qt Creator的项目文件，即.pro文件中，可以通过QMAKE_CXXFLAGS来给MSVC编译器传递编译开关。</p>
<p>QMAKE_CXXFLAGS +&#x3D; &#x2F;FS</p>
<pre><code>win32-msvc*:QMAKE_CXXFLAGS += /wd&quot;4819&quot; QMAKE_CXXFLAGS_RELEASE_WITH_DEBUGINFO -= -Zc:strictStrings 
</code></pre>
<p>MSVC 2017编译器常见错误的解决：</p>
<p><a href="https://docs.microsoft.com/en-us/cpp/error-messages/compiler-errors-1/c-cpp-build-errors?view=vs-2017">https://docs.microsoft.com/en-us/cpp/error-messages/compiler-errors-1/c-cpp-build-errors?view=vs-2017</a></p>
<p>2、Mac OS+Qt 4.8.7</p>
<p>笔者的Mac OS版本是MacOS-10.15-Catalina，高版本的OS和Clang已经不再支持Qt官方发布的Qt4了。</p>
<p>解决办法可以参见我的另一篇博文：<a href="https://blog.csdn.net/libaineu2004/article/details/104740623">https://blog.csdn.net/libaineu2004/article/details/104740623</a></p>
<p><a href="https://trac.macports.org/ticket/58651">https://trac.macports.org/ticket/58651</a> mac下编译qt4遇到问题</p>
<p><a href="https://github.com/macports/macports-ports/tree/master/aqua/qt4-mac">https://github.com/macports/macports-ports/tree/master/aqua/qt4-mac</a> mac编译补丁</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Qt源码编译</tag>
      </tags>
  </entry>
  <entry>
    <title>KubeEdge设备孪生设计</title>
    <url>/2024/07/04/%E6%95%B0%E6%8D%AE%E5%BA%93/KubeEdge%E8%AE%BE%E5%A4%87%E5%AD%AA%E7%94%9F%E8%AE%BE%E8%AE%A1/</url>
    <content><![CDATA[<p>KubeEdge中的数据结构设计</p>
<p>Device</p>
<table>
<thead>
<tr>
<th>字段</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>ID</td>
<td>string</td>
<td>设备唯一编码</td>
</tr>
<tr>
<td>Name</td>
<td>string</td>
<td>设备名称</td>
</tr>
<tr>
<td>Description</td>
<td>string</td>
<td>设别描述</td>
</tr>
<tr>
<td>State</td>
<td>string</td>
<td>设备状态</td>
</tr>
<tr>
<td>LastOnline</td>
<td>DateTime</td>
<td>最后在线时间</td>
</tr>
<tr>
<td>Attributes</td>
<td>Map&lt;string,MsgAttr&gt;</td>
<td>设备属性(上报属性)</td>
</tr>
<tr>
<td>Twin</td>
<td>Map&lt;string,MsgTwin&gt;</td>
<td>设备孪生属性(可控制属性)</td>
</tr>
</tbody></table>
<p>MsgAttr</p>
<table>
<thead>
<tr>
<th>字段</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>Value</td>
<td>string</td>
<td>属性名称</td>
</tr>
<tr>
<td>Optional</td>
<td>bool</td>
<td>是否可为空</td>
</tr>
<tr>
<td>Metadata</td>
<td>TypeMetadata</td>
<td>属性类型元数据</td>
</tr>
</tbody></table>
<p>MsgTwin</p>
<table>
<thead>
<tr>
<th>字段</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>Expected</td>
<td>TwinValue</td>
<td>期望值</td>
</tr>
<tr>
<td>Actual</td>
<td>TwinValue</td>
<td>实际值</td>
</tr>
<tr>
<td>Optional</td>
<td>bool</td>
<td>是否可为空</td>
</tr>
<tr>
<td>Metadata</td>
<td>TypeMetadata</td>
<td>属性类型元数据</td>
</tr>
<tr>
<td>ExpectedVersion</td>
<td>TwinVersion</td>
<td>期望值版本</td>
</tr>
<tr>
<td>ActualVersion</td>
<td>TwinVersion</td>
<td>实际值版本</td>
</tr>
</tbody></table>
<hr>
<p>数据库表设计</p>
<p>Device</p>
<table>
<thead>
<tr>
<th>字段</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>ID</td>
<td></td>
<td>设备实例唯一ID</td>
</tr>
<tr>
<td>Name</td>
<td></td>
<td>设备实例名称</td>
</tr>
<tr>
<td>Description</td>
<td></td>
<td>设备描述</td>
</tr>
<tr>
<td>State</td>
<td></td>
<td>设备状态</td>
</tr>
<tr>
<td>LastOnline</td>
<td></td>
<td>最后在线时间</td>
</tr>
</tbody></table>
<p>DeviceAttr</p>
<table>
<thead>
<tr>
<th>字段</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>ID</td>
<td></td>
<td>属性实例唯一ID</td>
</tr>
<tr>
<td>DeviceId</td>
<td></td>
<td>设备实例唯一ID</td>
</tr>
<tr>
<td>Name</td>
<td></td>
<td>设备名称</td>
</tr>
<tr>
<td>Description</td>
<td></td>
<td>设备描述</td>
</tr>
<tr>
<td>Value</td>
<td></td>
<td>设备属性值</td>
</tr>
<tr>
<td>Optional</td>
<td>bool</td>
<td>是否可空</td>
</tr>
<tr>
<td>AttrType</td>
<td></td>
<td>属性类型</td>
</tr>
<tr>
<td>Metadata</td>
<td></td>
<td>属性元数据</td>
</tr>
</tbody></table>
<p>DeviceTwin</p>
<table>
<thead>
<tr>
<th>字段</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>ID</td>
<td></td>
<td></td>
</tr>
<tr>
<td>DeviceID</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Name</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Description</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Expected</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Actual</td>
<td></td>
<td></td>
</tr>
<tr>
<td>ExpectedMeta</td>
<td></td>
<td></td>
</tr>
<tr>
<td>ActualMeta</td>
<td></td>
<td></td>
</tr>
<tr>
<td>ExpectedVersion</td>
<td></td>
<td></td>
</tr>
<tr>
<td>ActualVersion</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Optional</td>
<td></td>
<td></td>
</tr>
<tr>
<td>AttrType</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Metadata</td>
<td></td>
<td></td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>数字孪生</tag>
        <tag>KubeEdge</tag>
      </tags>
  </entry>
  <entry>
    <title>设备孪生表结构设计</title>
    <url>/2024/07/04/%E6%95%B0%E6%8D%AE%E5%BA%93/%E8%AE%BE%E5%A4%87%E5%AD%AA%E7%94%9F%E8%A1%A8%E7%BB%93%E6%9E%84%E8%AE%BE%E8%AE%A1/</url>
    <content><![CDATA[<p>DEVICE</p>
<table>
<thead>
<tr>
<th>字段</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>ID</td>
<td>int</td>
<td>自增ID</td>
</tr>
<tr>
<td>SN</td>
<td>varchar(20)</td>
<td>设备唯一编码</td>
</tr>
<tr>
<td>NAME</td>
<td>varchar(20)</td>
<td>设备名称</td>
</tr>
<tr>
<td>MARKED</td>
<td>BOOL</td>
<td>设备是否标记</td>
</tr>
<tr>
<td>IP</td>
<td>varchar(15)</td>
<td>设备IP地址</td>
</tr>
<tr>
<td>LOCATION</td>
<td>varchar(200)</td>
<td>设备安装位置</td>
</tr>
</tbody></table>
<p>DEVICE_ATTR</p>
<table>
<thead>
<tr>
<th>字段</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>ID</td>
<td>int</td>
<td>自增ID</td>
</tr>
<tr>
<td>KEY</td>
<td>varchar(20)</td>
<td>属性名</td>
</tr>
<tr>
<td>CHANNEL</td>
<td></td>
<td></td>
</tr>
<tr>
<td>VALUE</td>
<td>int</td>
<td>属性值</td>
</tr>
<tr>
<td>DEVICE_ID</td>
<td>int</td>
<td>属性所属设备ID</td>
</tr>
<tr>
<td>SCALE</td>
<td>int</td>
<td>缩放倍率，当数值有小数时可用倍率缩放</td>
</tr>
<tr>
<td>UNIT</td>
<td>varchar(20)</td>
<td>数值单位</td>
</tr>
</tbody></table>
<p>DEVICE_STATE</p>
<table>
<thead>
<tr>
<th>字段</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>ID</td>
<td>int</td>
<td>自增ID</td>
</tr>
<tr>
<td>DEVICE_ID</td>
<td>int</td>
<td>属性所属设备ID</td>
</tr>
<tr>
<td>PORT</td>
<td>int</td>
<td>设备接收端口</td>
</tr>
<tr>
<td>VALUE</td>
<td>int</td>
<td>数值</td>
</tr>
<tr>
<td>UNIT</td>
<td>varchar(20)</td>
<td>数值单位</td>
</tr>
</tbody></table>
<p>DEVICE_LINKAGE</p>
<table>
<thead>
<tr>
<th>字段</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>ID</td>
<td>int</td>
<td>自增ID</td>
</tr>
<tr>
<td>CAT</td>
<td></td>
<td></td>
</tr>
<tr>
<td>DEVICE_ID</td>
<td>int</td>
<td>属性所属设备ID</td>
</tr>
<tr>
<td>PORT</td>
<td>int</td>
<td>设备接收端口</td>
</tr>
<tr>
<td>TARGET</td>
<td></td>
<td>联动目标</td>
</tr>
<tr>
<td>TRIGGER</td>
<td></td>
<td>联动触发器</td>
</tr>
<tr>
<td>TRIGGER_ALARM</td>
<td></td>
<td>联动触发告警</td>
</tr>
<tr>
<td>ACTION</td>
<td></td>
<td>联动动作</td>
</tr>
<tr>
<td>PARAM</td>
<td></td>
<td>参数</td>
</tr>
</tbody></table>
<p>DEVICE_ALARM</p>
<table>
<thead>
<tr>
<th>字段</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>ID</td>
<td></td>
<td>自增ID</td>
</tr>
<tr>
<td>APP_ID</td>
<td></td>
<td>固件ID</td>
</tr>
<tr>
<td>CAT</td>
<td></td>
<td></td>
</tr>
<tr>
<td>REPORTER</td>
<td></td>
<td></td>
</tr>
<tr>
<td>PORT</td>
<td></td>
<td>端口</td>
</tr>
<tr>
<td>CODE</td>
<td></td>
<td>编码</td>
</tr>
<tr>
<td>MSG</td>
<td></td>
<td>消息</td>
</tr>
<tr>
<td>ALARM_TYPE</td>
<td></td>
<td>告警类型</td>
</tr>
<tr>
<td>SEVERITY</td>
<td></td>
<td></td>
</tr>
<tr>
<td>STATUS</td>
<td></td>
<td>状态</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>数字孪生</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker使用</title>
    <url>/2017/02/10/%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Docker%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<p><a href="https://www.open-open.com/lib/view/open1423703640748.html">非常详细的 Docker 学习笔记 - Docker - 服务器软件 - 深度开源 (open-open.com)</a></p>
<p><a href="https://www.cnblogs.com/zydev/p/5803461.html">Docker-创建和分享应用（3） - 头痛不头痛 - 博客园 (cnblogs.com)</a></p>
<p><a href="https://blog.csdn.net/wsscy2004/article/details/25878363">常用docker命令，及一些坑_dockerfile 2&gt;&amp;1-CSDN博客</a></p>
<p><a href="https://blog.csdn.net/zhang__jiayu/article/details/42611469">Docker常用命令_docker -i -t -v-CSDN博客</a></p>
<p><a href="https://phuker.github.io/posts/docker-commands.html">Docker 常用命令 - Phuker’s Blog</a></p>
<p><a href="https://www.jb51.net/article/101509.htm">详解Docker 容器基础系统镜像打包_docker_脚本之家 (jb51.net)</a></p>
<p><a href="https://blog.csdn.net/hjh00/article/details/51437815">一种docker基础镜像制作方法_docker 从iso制作镜像-CSDN博客</a></p>
<p><a href="https://linux.cn/article-5427-1.html">系统运维|两种方式创建你自己的 Docker 基本映像 (linux.cn)</a></p>
]]></content>
      <categories>
        <category>容器技术</category>
      </categories>
      <tags>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker编译多系统架构镜像</title>
    <url>/2025/03/20/%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Docker%E7%BC%96%E8%AF%91%E5%A4%9A%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84%E9%95%9C%E5%83%8F/</url>
    <content><![CDATA[<h3 id=""><a href="#" class="headerlink" title=""></a></h3><p>Docker 19.03以上版本可以使用 <code>docker buildx build</code>命令使用<code>BuildKit</code>构建镜像。该命令支持<code>--platform</code>参数可以同时构建多种系统架构的Docker镜像。</p>
<h4 id="新建builder实例"><a href="#新建builder实例" class="headerlink" title="新建builder实例"></a>新建builder实例</h4><p>Docker for Linux不支持构建<code>arm</code>架构镜像，可以运行一个新的容器让其支持该特性，Docker Desktop版本无需进行此项设置。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run --rm --privileged tonistiigi/binfmt:latest --install all </span><br></pre></td></tr></table></figure>
<p>由于Docker默认的<code>build</code>实例不支持同时指定多个 <code>--platform</code>，必须首先创建一个新的<code>builder</code>实例。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 适用于国内环境</span></span><br><span class="line">$ docker buildx create --use --name=mybuilder-cn --driver docker-container --driver-opt image=dockerpracticesig/buildkit:master</span><br><span class="line"></span><br><span class="line"><span class="comment"># 适用于腾讯云环境(腾讯云主机、coding.net 持续集成)</span></span><br><span class="line">$ docker buildx create --use --name=mybuilder-cn --driver docker-container --driver-opt image=dockerpracticesig/buildkit:master-tencent</span><br><span class="line"></span><br><span class="line"><span class="comment"># $ docker buildx create --name mybuilder --driver docker-container</span></span><br><span class="line"></span><br><span class="line">$ docker buildx use mybuilder</span><br></pre></td></tr></table></figure>

<p>构建镜像</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">FROM</span> --platform=$TARGETPLATFORM alpine</span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">uname</span> -a &gt; os.txt</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CMD</span><span class="language-bash"> [<span class="string">&quot;cat&quot;</span>, <span class="string">&quot;os.txt&quot;</span>]</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker buildx build --platform linux/arm,linux/arm64,linux/amd64 -t &#123;镜像名称&#125; . --push</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看镜像信息</span></span><br><span class="line">docker buildx imagetools inspect &#123;镜像名称&#125;</span><br></pre></td></tr></table></figure>
<p><code>--push</code> 参数表示将构建好的镜像推送到Docker仓库</p>
<h3 id="架构相关变量"><a href="#架构相关变量" class="headerlink" title="架构相关变量"></a>架构相关变量</h3><p><strong>TARGETPLATFORM</strong><br>构建镜像的目标平台，例如 <code>linux/amd64</code>，<code>linux/arm/v7</code>，<code>windows/amd64</code></p>
<p><strong>TARGETOS</strong><br>构建镜像的OS类型，例如 <code>linux</code>，<code>windows</code></p>
<p><strong>TARGETARCH</strong><br>构建镜像的架构类型，例如 <code>amd64</code>，<code>arm</code></p>
<p><strong>BUILDPLATFORM</strong><br>构建镜像主机平台，例如 <code>linux/amd64</code></p>
<p><strong>BUILDOS</strong><br>构建镜像主机的OS类型，例如 <code>linux</code></p>
<p><strong>BUILDARCH</strong><br>构建镜像主机的架构类型，例如 <code>amd64</code></p>
<p><strong>BUILDVARIANT</strong><br><code>BUILDPLATFORM</code>的变种，该变量可能为空，例如 <code>v7</code></p>
<p>使用举例<br>例如要构建 <code>linux/arm/v7</code>和 <code>linux/amd64</code>两种架构的镜像</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">FROM</span> docker.io/library/python:<span class="number">3.10</span>-alpine</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用变量必须申明</span></span><br><span class="line"><span class="keyword">ARG</span> TARGETOS</span><br><span class="line"><span class="keyword">ARG</span> TARGETARCH</span><br><span class="line"></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="language-bash"> /app</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> main.py /app</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ENTRYPOINT [/app]</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>容器技术</category>
      </categories>
      <tags>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker部署单节点ETCD</title>
    <url>/2025/03/17/%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Docker%E9%83%A8%E7%BD%B2%E5%8D%95%E8%8A%82%E7%82%B9ETCD/</url>
    <content><![CDATA[<h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><h4 id="镜像选择"><a href="#镜像选择" class="headerlink" title="镜像选择"></a>镜像选择</h4><p>quay.io&#x2F;coreos&#x2F;etcd:3.2.7<br>bitname&#x2F;etcd</p>
<h4 id="创建ETCD数据目录"><a href="#创建ETCD数据目录" class="headerlink" title="创建ETCD数据目录"></a>创建ETCD数据目录</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># data 存储容器持久化数据</span></span><br><span class="line"><span class="comment"># config 存储容器使用的配置文件</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /usr/local/docker/etcd/&#123;data,config&#125;</span><br></pre></td></tr></table></figure>

<h4 id="创建ETCD配置文件"><a href="#创建ETCD配置文件" class="headerlink" title="创建ETCD配置文件"></a>创建ETCD配置文件</h4><p>配置文件路径为 <code>/usr/local/docker/etcd/config/etcd.config.yml</code></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">etcd</span> <span class="comment"># etcd member 名称，可根据实际情况修改</span></span><br><span class="line"><span class="attr">data-dir:</span> <span class="string">/var/etcd</span> <span class="comment">#etcd 数据目录，可根据实际情况修改</span></span><br><span class="line"><span class="attr">listen-client-urls:</span> <span class="string">http://0.0.0.0:2379</span> <span class="comment">#client 流量监听地址，没特殊需求按文档填写即可</span></span><br><span class="line"><span class="attr">advertise-client-urls:</span> <span class="string">http://0.0.0.0:2379</span> <span class="comment"># 该 member 向外部通告的客户端 url 列表，单节点部署时不需要修改，集群部署模式需修改为容器所在节点对外提供服务的 IP</span></span><br><span class="line"><span class="attr">listen-peer-urls:</span> <span class="string">http://0.0.0.0:2380</span> <span class="comment"># peer 流量监听地址，没特殊需求按文档填写即可</span></span><br><span class="line"><span class="attr">initial-advertise-peer-urls:</span> <span class="string">http://0.0.0.0:2380</span> <span class="comment"># 该 member 向同一集群内其他 member 通告的 peer url 列表，单节点部署时不需要修改，集群部署模式需修改为容器所在节点对外提供服务的 IP</span></span><br><span class="line"><span class="attr">initial-cluster:</span> <span class="string">etcd=http://0.0.0.0:2380</span> <span class="comment"># 初始化集群节点信息，单节点部署时不需要修改，集群部署模式需要填写集群中所有 member 的信息</span></span><br><span class="line"><span class="attr">initial-cluster-token:</span> <span class="string">etcd-cluster</span>  <span class="comment"># 初始化集群时使用的 token，随便写</span></span><br><span class="line"><span class="attr">initial-cluster-state:</span> <span class="string">new</span> <span class="comment"># 初始化集群状态，可选的值为 **new** 或者 **existing**，通常采用 **new**</span></span><br><span class="line"><span class="attr">logger:</span> <span class="string">zap</span></span><br><span class="line"><span class="attr">log-level:</span> <span class="string">info</span></span><br><span class="line"><span class="comment"># log-outputs: stderr</span></span><br></pre></td></tr></table></figure>
<h3 id="创建并启动ETCD服务"><a href="#创建并启动ETCD服务" class="headerlink" title="创建并启动ETCD服务"></a>创建并启动ETCD服务</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d --name etcd -p 2379:2379 -p 2380:2380 -v /usr/local/docker/etcd/data:/var/etcd -v /usr/local/docker/etcd/config:/var/lib/etcd/config quay.io/coreos/etcd: 3.5.12 </span><br></pre></td></tr></table></figure>

<h3 id="使用docker-compose部署"><a href="#使用docker-compose部署" class="headerlink" title="使用docker-compose部署"></a>使用docker-compose部署</h3><p>创建Docker-compose</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">etcd:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">etcd</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">quay.io/coreos/etcd:v3.5.12</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">/usr/local/bin/etcd</span> <span class="string">--config-file=/var/lib/etcd/config/etcd.conf.yml</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">$&#123;DOCKER_VOLUME_DIRECTORY:-.&#125;/data:/var/lib/etcd</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">$&#123;DOCKER_VOLUME_DIRECTORY:-.&#125;/config/etcd.config.yml:/var/lib/etcd/conf/etcd.conf.yml</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">2379</span><span class="string">:2379</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">2380</span><span class="string">:2380</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line"></span><br><span class="line"><span class="attr">networks:</span> <span class="comment"># 船舰一个新的bridge模式网络，名称 etcd-tier,名称可以根据需求自定义</span></span><br><span class="line">  <span class="attr">default:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">etcd-tier</span></span><br><span class="line">    <span class="attr">driver:</span> <span class="string">bridge</span></span><br><span class="line">    </span><br></pre></td></tr></table></figure>

<p>基于环境变量配置, 配置参考配置文件方式</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">etcd:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">etcd</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">quay.io/coreos/etcd:v3.5.12</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">ETCD_NAME=etcd</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">ETCD_DATA_DIR=</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">ETCD_LISTEN_CLIENT_URLS=</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">ETCD_ADVERTISE_CLIENT_URLS=</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">ETCD_LISTEN_PEER_URLS=</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">ETCD_INSTALL_ADVERTISE_PEER_URLS=</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">ETCD_INSTALL_CLUSTER_TOKEN=</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">ETCD_INSTALL_CLUSTER</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">ETCD_INSTALL_CLUSTER_STATE=new</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">ETCD_LOGGER=zap</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">ETCD_LOG_LEVEL=info</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">ALLOW_NONE_AUTHENTICATION=&quot;yes&quot;</span> <span class="comment"># 允许无身份验证访问</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">TZ=&quot;Asia/Shanghai&quot;</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">$&#123;DOCKER_VOLUME_DIRECTORY:=.&#125;/data:/var/etcd</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/etc/localtime:/etc/localtime:rw</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">2379</span><span class="string">:2379</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">2380</span><span class="string">:2380</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">default:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">etcd-tier</span></span><br><span class="line">    <span class="attr">driver:</span> <span class="string">bridge</span></span><br></pre></td></tr></table></figure>

<p>创建并启动etcd</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> &#123;docker-compose文件所在目录&#125;</span><br><span class="line">docker compose up -d </span><br></pre></td></tr></table></figure>

<h3 id="测试命令"><a href="#测试命令" class="headerlink" title="测试命令"></a>测试命令</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">etcdctl --endpoints=192.168.1.2:2379 --write-out=table endpoint health</span><br><span class="line"></span><br><span class="line">etcdctl --endpoints=192.168.1.2:2379 --write-out=table endpoint status</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看member状态</span></span><br><span class="line">etcdctl --endpoints=192.168.1.2:2379 --write-out=table member list</span><br><span class="line"></span><br><span class="line"><span class="comment"># 写入数据</span></span><br><span class="line">etcdctl --endpoints=192.168.1.2:2379 put foo bar</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取数据</span></span><br><span class="line">etcdctl --endpoints=192.168.1.2:2379 get foo</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>容器技术</category>
      </categories>
      <tags>
        <tag>Docker</tag>
        <tag>ETCD</tag>
      </tags>
  </entry>
  <entry>
    <title>EdgeX Foundry</title>
    <url>/2022/07/27/%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/EdgeX-Foundry/</url>
    <content><![CDATA[<p><a href="https://blog.csdn.net/Jason_LiQuan/article/details/109717954">https://blog.csdn.net/Jason_LiQuan/article/details/109717954</a><br><a href="https://www.jianshu.com/nb/78768">https://www.jianshu.com/nb/78768</a><br><a href="https://www.hangge.com/blog/cache/detail_2351.html">https://www.hangge.com/blog/cache/detail_2351.html</a><br><a href="https://unblocked-pw.github.io/">https://unblocked-pw.github.io/</a><br><a href="https://blog.csdn.net/ewtewtewrt/article/details/110161010">https://blog.csdn.net/ewtewtewrt/article/details/110161010</a><br><a href="https://bthub11.xyz/cn">https://bthub11.xyz/cn</a><br><a href="https://blog.csdn.net/ewtewtewrt/article/details/110382703">https://blog.csdn.net/ewtewtewrt/article/details/110382703</a><br><a href="https://www.tpbaysproxy.com/">https://www.tpbaysproxy.com/</a><br><a href="https://github.com/fwonggh/Bthub">https://github.com/fwonggh/Bthub</a><br><a href="https://limetorrent.cc/">https://limetorrent.cc/</a><br><a href="https://blog.csdn.net/woaizard100/article/details/80910356">https://blog.csdn.net/woaizard100/article/details/80910356</a><br><a href="https://blog.csdn.net/woaizard100/category_7776741.html">https://blog.csdn.net/woaizard100/category_7776741.html</a><br><a href="https://cloud.tencent.com/developer/article/1671077">https://cloud.tencent.com/developer/article/1671077</a><br><a href="https://www.cnblogs.com/harrychinese/p/quartz_net.html#:~:text=Quartz.Net%20%E6%9C%89%E4%B8%A4%E7%B1%BB%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%2C%201.%20Quartz.%E7%B3%BB%E7%BB%9F%E7%BA%A7%E5%88%AB%E9%85%8D%E7%BD%AE%2C%20%E9%BB%98%E8%AE%A4%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E5%90%8D%E4%B8%BA%20quartz.config%20%2C%20%E6%98%AFjava,job%2Ftrigger%E7%9A%84%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%2C%20%E9%BB%98%E8%AE%A4%E5%90%8D%E7%A7%B0%E4%B8%BA%20quartz_jobs.xml%2C%20%E7%94%A8%E6%9D%A5%E9%85%8D%E7%BD%AE%20job%20%E5%92%8C%20trigger%20%E5%AE%9A%E4%B9%89%E4%BF%A1%E6%81%AF">https://www.cnblogs.com/harrychinese/p/quartz_net.html#:~:text=Quartz.Net%20%E6%9C%89%E4%B8%A4%E7%B1%BB%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%2C%201.%20Quartz.%E7%B3%BB%E7%BB%9F%E7%BA%A7%E5%88%AB%E9%85%8D%E7%BD%AE%2C%20%E9%BB%98%E8%AE%A4%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E5%90%8D%E4%B8%BA%20quartz.config%20%2C%20%E6%98%AFjava,job%2Ftrigger%E7%9A%84%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%2C%20%E9%BB%98%E8%AE%A4%E5%90%8D%E7%A7%B0%E4%B8%BA%20quartz_jobs.xml%2C%20%E7%94%A8%E6%9D%A5%E9%85%8D%E7%BD%AE%20job%20%E5%92%8C%20trigger%20%E5%AE%9A%E4%B9%89%E4%BF%A1%E6%81%AF</a>.<br><a href="https://www.cnblogs.com/z-huan/p/7412181.html">https://www.cnblogs.com/z-huan/p/7412181.html</a><br><a href="https://www.cnblogs.com/abeam/p/8044460.html">https://www.cnblogs.com/abeam/p/8044460.html</a><br><a href="https://blog.csdn.net/freewebsys/article/details/107950520">https://blog.csdn.net/freewebsys/article/details/107950520</a><br><a href="https://cloud.tencent.com/developer/article/1171966">https://cloud.tencent.com/developer/article/1171966</a><br><a href="https://blog.csdn.net/mr_zhongjie/article/details/106916512">https://blog.csdn.net/mr_zhongjie/article/details/106916512</a><br><a href="https://www.jianshu.com/p/e48dbd087133">https://www.jianshu.com/p/e48dbd087133</a><br><a href="https://blog.csdn.net/tianhuanqingyun/article/details/90454329">https://blog.csdn.net/tianhuanqingyun/article/details/90454329</a><br><a href="https://blog.csdn.net/Frank_Abagnale/article/details/114333740">https://blog.csdn.net/Frank_Abagnale/article/details/114333740</a><br><a href="https://blog.csdn.net/emqx_broker/article/details/106490836">https://blog.csdn.net/emqx_broker/article/details/106490836</a><br><a href="https://blog.csdn.net/qq_36827625/article/details/106502620">https://blog.csdn.net/qq_36827625/article/details/106502620</a><br><a href="https://blog.csdn.net/qq_41626768/article/details/109384703">https://blog.csdn.net/qq_41626768/article/details/109384703</a><br><a href="https://www.jianshu.com/p/af515094244b">https://www.jianshu.com/p/af515094244b</a><br><a href="https://my.oschina.net/LFAPAC/blog/4522385">https://my.oschina.net/LFAPAC/blog/4522385</a><br><a href="https://www.jianshu.com/p/f6b7f6781481">https://www.jianshu.com/p/f6b7f6781481</a><br><a href="https://mp.weixin.qq.com/s?__biz=MzI1OTI5NjU0Mg==&mid=2247484968&idx=1&sn=44e773b6a0df47b7634ca5f8c1014649&chksm=ea7a5a59dd0dd34f002b01a5249e0afe61ae9597d36949abb95cc2e28c2e085cfdd68b59c26e&scene=132#wechat_redirect">https://mp.weixin.qq.com/s?__biz=MzI1OTI5NjU0Mg==&amp;mid=2247484968&amp;idx=1&amp;sn=44e773b6a0df47b7634ca5f8c1014649&amp;chksm=ea7a5a59dd0dd34f002b01a5249e0afe61ae9597d36949abb95cc2e28c2e085cfdd68b59c26e&amp;scene=132#wechat_redirect</a><br><a href="https://blog.csdn.net/flystreet7/article/details/122086529">https://blog.csdn.net/flystreet7/article/details/122086529</a></p>
]]></content>
      <categories>
        <category>容器技术</category>
      </categories>
  </entry>
  <entry>
    <title>K3s安装</title>
    <url>/2024/03/11/%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/K3S%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<h2 id="安装基础环境"><a href="#安装基础环境" class="headerlink" title="安装基础环境"></a>安装基础环境</h2><h3 id="新装环境"><a href="#新装环境" class="headerlink" title="新装环境"></a>新装环境</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># master安装</span></span><br><span class="line">curl -sfL https://rancher-mirror.rancher.cn/k3s/k3s-install.sh | \</span><br><span class="line">    INSTALL_K3S_MIRROR=cn \</span><br><span class="line">    INSTALL_K3S_EXEC=<span class="string">&#x27;--write-kubeconfig-mode=644&#x27;</span> sh -</span><br><span class="line"></span><br><span class="line"><span class="comment">#  加入其他节点</span></span><br><span class="line">curl -sfL https://rancher-mirror.rancher.cn/k3s/k3s-install.sh | \</span><br><span class="line">    K3S_URL=https://&lt;k3s-server-ip&gt;:6443 \</span><br><span class="line">    K3S_TOKEN=&lt;token&gt; \</span><br><span class="line">    INSTALL_K3S_EXEC=<span class="string">&#x27;--write-kubeconfig-mode=644&#x27;</span> sh -</span><br><span class="line"></span><br><span class="line"><span class="comment"># EXEC参数</span></span><br><span class="line"><span class="comment"># --write-kubeconfig-mode=644 设置配置文件权限</span></span><br><span class="line"><span class="comment"># --service-node-port-range=1-65535 解除端口限制，默认30000-32767</span></span><br><span class="line"><span class="comment"># --advertise-address=192.168.1.1 指定集群管理IP,默认端口6443</span></span><br><span class="line"><span class="comment"># --disable=traefik 禁用Traefik Ingress</span></span><br><span class="line"><span class="comment"># --default-local-storage-path=/mnt/storage/k3s # 自定义本地存储（local-path-config）的默认存储路径 </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 环境变量</span></span><br><span class="line"><span class="comment"># INSTALL_K3S_MIRROR=cn 设置未中国区镜像</span></span><br><span class="line"><span class="comment"># INSTALL_K3S_SKIP_SELINUX_RPM=true 安装由于selinux导致失败时可加此配置跳过k3s selinux配置,注意是在 INSTALL_K3S_MIRROR后添加</span></span><br></pre></td></tr></table></figure>

<p>其中<code>&lt;k3s-server-ip&gt;</code>是K3s服务器的IP地址，<code>&lt;token&gt;</code>是由K3s服务器生成的唯一令牌。可以使用以下命令在K3s服务器上获取此令牌：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> <span class="built_in">cat</span> /var/lib/rancher/k3s/server/node-token</span><br></pre></td></tr></table></figure>

<p>设置 kubeconfig 文件路径用于对 Kubernetes 集群的访问。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;export KUBECONFIG=/etc/rancher/k3s/k3s.yaml&quot;</span> &gt;&gt; ~/.bashrc</span><br></pre></td></tr></table></figure>

<h3 id="现有环境修改"><a href="#现有环境修改" class="headerlink" title="现有环境修改"></a>现有环境修改</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemctl stop k3s.service</span><br><span class="line">vim /etc/systemd/system/k3s.service </span><br><span class="line"><span class="comment"># 修改ExecStart</span></span><br><span class="line"><span class="comment"># 原有内容</span></span><br><span class="line">ExecStart=/usr/local/bin/k3s \</span><br><span class="line">	server \</span><br><span class="line">		<span class="string">&#x27;--write-kubeconfig-mode=644&#x27;</span></span><br><span class="line"><span class="comment"># 修改后</span></span><br><span class="line">ExecStart=/usr/local/bin/k3s \</span><br><span class="line">	server \</span><br><span class="line">		<span class="string">&#x27;--write-kubeconfig-mode=644&#x27;</span> \</span><br><span class="line">        <span class="string">&#x27;--service-node-port-range=1-65535&#x27;</span> \</span><br><span class="line">        <span class="string">&#x27;--default-local-storage-path=/mnt/storage/k3s&#x27;</span> \</span><br><span class="line">        </span><br><span class="line">  </span><br><span class="line"><span class="built_in">sudo</span> systemctl daemon-reload</span><br><span class="line"><span class="built_in">sudo</span> systemctl start k3s.service</span><br></pre></td></tr></table></figure>

<h2 id="安装管理工具Helm"><a href="#安装管理工具Helm" class="headerlink" title="安装管理工具Helm"></a>安装管理工具Helm</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#安装helm</span></span><br><span class="line">curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash</span><br><span class="line"></span><br><span class="line"><span class="comment"># ubuntu 使用snap安装</span></span><br><span class="line"><span class="built_in">sudo</span> snap install helm --classic</span><br><span class="line"></span><br><span class="line"><span class="comment"># 离线安装</span></span><br><span class="line"><span class="comment"># 下载最新版离线安装包 https://github.com/helm/helm/releases</span></span><br><span class="line">tar xf helm-v2.11.0-linux-amd64.tar.gz</span><br><span class="line"><span class="built_in">cp</span> linux-amd64/helm linux-amd64/tiller /usr/local/bin/</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="添加命令自动补全"><a href="#添加命令自动补全" class="headerlink" title="添加命令自动补全"></a>添加命令自动补全</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 安装自动补全</span><br><span class="line">sudo apt install bash-completion</span><br><span class="line"></span><br><span class="line">source /usr/share/bash-completion/bash_completion</span><br><span class="line"></span><br><span class="line"># kubectl自动补全</span><br><span class="line"># 临时使用</span><br><span class="line">echo &#x27;source &lt; (kubectl completion bash)&#x27; &gt;&gt; ~/.bashrc </span><br><span class="line"></span><br><span class="line"># 永久生效</span><br><span class="line">kubectl completion bash | sudo tee /etc/bash_completion/kubectl &gt; /dev/null </span><br><span class="line"></span><br><span class="line"># helm 自动补全</span><br><span class="line"># 临时使用</span><br><span class="line">echo &#x27;source &lt; (helm completion bash)&#x27; &gt;&gt; ~/.bashrc</span><br><span class="line"></span><br><span class="line"># 永久生效</span><br><span class="line">helm completion bash | sudo tee /etc/bash_completion/helm &gt; /dev/null</span><br></pre></td></tr></table></figure>


<h3 id="常用Helm-Charts"><a href="#常用Helm-Charts" class="headerlink" title="常用Helm Charts"></a>常用Helm Charts</h3><p><a href="https://artificthub.io/">Artifact Hub</a></p>
<p><a href="https://charts.bitnami.com/">Bitnami Helm Charts</a></p>
<p><a href="https://mirror.azure.cn/kubernetes/charts/">Microsoft</a></p>
<h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看集权所有资源</span></span><br><span class="line">kubectl get all -A -o wide</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看指定命名空间</span></span><br><span class="line">kubectl get all -n &#123;namespace name&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看容器日志</span></span><br><span class="line">kubectl logs -n &#123;namespace name&#125; pod/&#123;pod name&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看指定命名空间下资源详细信息</span></span><br><span class="line">kubectl describe -n &#123;namespace name&#125; [service|pod|secret|carificate|...]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看节点相关</span></span><br><span class="line">kubectl get node --show-labels -o wide</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启pod</span></span><br><span class="line">kubectl rollout restart &#123;pod name&#125;  -n </span><br><span class="line"></span><br><span class="line"><span class="comment"># 伸缩实例数量</span></span><br><span class="line">kubectl scale deploy <span class="built_in">whoami</span> --replicas=5</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看 k3s 集群配置文件</span></span><br><span class="line">kubectl cluster-info</span><br><span class="line"></span><br><span class="line"><span class="comment">## Helm常用命令</span></span><br><span class="line"><span class="comment"># 获取charts的values文件</span></span><br><span class="line">helm show values bitnami/redis &gt; values.yaml</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建2副本的whoami应用，默认1副本</span></span><br><span class="line">kubectl create deploy <span class="built_in">whoami</span> --image=traefik/whoami --replicas=2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看部署应用信息</span></span><br><span class="line">kubectl describe deploy <span class="built_in">whoami</span></span><br><span class="line"><span class="comment"># 监控Pod状态，通过缩容\扩容可直观看到Pod的调度状态</span></span><br><span class="line">kubectl get pods --watch</span><br><span class="line"></span><br><span class="line">kubectl scale deploy <span class="built_in">whoami</span> --replicas=5</span><br><span class="line"></span><br><span class="line"><span class="comment"># 请求链路理解</span></span><br><span class="line">request public-ip -&gt; node-port -&gt; svc-port -&gt; pod-port -&gt; container</span><br><span class="line"></span><br><span class="line"><span class="comment"># 发布K3s内网的服务</span></span><br><span class="line">kubectl expose deploy <span class="built_in">whoami</span> --port=80</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看服务状态</span></span><br><span class="line">kubectl get svc <span class="built_in">whoami</span> -owide</span><br><span class="line">kubectl describe svc <span class="built_in">whoami</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 映射端口到宿主机</span></span><br><span class="line"><span class="comment"># --tareget-port 容器映射端口</span></span><br><span class="line"><span class="comment"># --external-ip 指定公网IP</span></span><br><span class="line"><span class="comment"># --prot 集群内暴露端口</span></span><br><span class="line"><span class="comment"># --node-port type=NodePort时提供给集群外访问的端口</span></span><br><span class="line">kubectl expose deploy <span class="built_in">whoami</span> --<span class="built_in">type</span>=LoadBalancer --port=80 --external-ip &lt;PUBLIC_IP&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 清空测试</span></span><br><span class="line">kubectl delete all --all</span><br></pre></td></tr></table></figure>



<h2 id="配置国内源-私有镜像库"><a href="#配置国内源-私有镜像库" class="headerlink" title="配置国内源(私有镜像库)"></a>配置国内源(私有镜像库)</h2><p>K3s 默认的 containerd 配置文件目录为&#x2F;var&#x2F;lib&#x2F;rancher&#x2F;k3s&#x2F;agent&#x2F;etc&#x2F;containerd&#x2F;config.toml，但直接操作 containerd 的配置文件去设置镜像仓库或加速器相比于操作 docker 要复杂许多。K3s 为了简化配置 containerd 镜像仓库的复杂度，K3s 会在启动时检查&#x2F;etc&#x2F;rancher&#x2F;k3s&#x2F;中是否存在 registries.yaml 文件，如果存在该文件，就会根据 registries.yaml 的内容转换为 containerd 的配置并存储到&#x2F;var&#x2F;lib&#x2F;rancher&#x2F;k3s&#x2F;agent&#x2F;etc&#x2F;containerd&#x2F;config.toml，从而降低了配置 containerd 镜像仓库的复杂度。</p>
<p>K3s 镜像仓库配置文件由两大部分组成：mirrors 和 configs:</p>
<ul>
<li>Mirrors 是一个用于定义专用镜像仓库的名称和 endpoint 的指令</li>
<li>Configs 部分定义了每个 mirror 的 TLS 和证书配置。对于每个 mirror，你可以定义 auth 和&#x2F;或 tls</li>
</ul>
<p>containerd 使用了类似 K8S 中 svc 与 endpoint 的概念，svc 可以理解为访问名称，这个名称会解析到对应的 endpoint 上。也可以理解 mirror 配置就是一个反向代理，它把客户端的请求代理到 endpoint 配置的后端镜像仓库。mirror 名称可以随意填写，但是必须符合 IP 或域名的定义规则。并且可以配置多个 endpoint，默认解析到第一个 endpoint，如果第一个 endpoint 没有返回数据，则自动切换到第二个 endpoint，以此类推。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mirrors:</span><br><span class="line">  &quot;172.31.6.200:5000&quot;:</span><br><span class="line">    endpoint:</span><br><span class="line">      - &quot;http://172.31.6.200:5000&quot;</span><br><span class="line">  &quot;rancher.ksd.top:5000&quot;:</span><br><span class="line">    endpoint:</span><br><span class="line">      - &quot;http://172.31.6.200:5000&quot;</span><br><span class="line">  &quot;docker.io&quot;:</span><br><span class="line">    endpoint:</span><br><span class="line">      - &quot;https://fogjl973.mirror.aliyuncs.com&quot;</span><br><span class="line">      - &quot;https://registry-1.docker.io&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="非安全（http）私有仓库配置"><a href="#非安全（http）私有仓库配置" class="headerlink" title="非安全（http）私有仓库配置"></a>非安全（http）私有仓库配置</h4><p>配置非安全（http）私有仓库，只需要在 endpoint 中指定 http 协议头的地址即可。</p>
<p>在没有 TLS 通信的情况下，需要为 endpoints 指定 http:&#x2F;&#x2F;，否则将默认为 https。</p>
<h5 id="无认证"><a href="#无认证" class="headerlink" title="无认证"></a>无认证</h5><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">mirrors:</span></span><br><span class="line">  <span class="attr">&quot;172.31.6.200:5000&quot;:</span></span><br><span class="line">    <span class="attr">endpoint:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;http://172.31.6.200:5000&quot;</span></span><br></pre></td></tr></table></figure>

<h5 id="有认证"><a href="#有认证" class="headerlink" title="有认证"></a>有认证</h5><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">mirrors:</span></span><br><span class="line">  <span class="attr">&quot;35.182.134.80&quot;:</span></span><br><span class="line">    <span class="attr">endpoint:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;http://35.182.134.80&quot;</span></span><br><span class="line"><span class="attr">configs:</span></span><br><span class="line">  <span class="attr">&quot;35.182.134.80&quot;:</span></span><br><span class="line">    <span class="attr">auth:</span></span><br><span class="line">      <span class="attr">username:</span> <span class="string">admin</span> <span class="comment"># this is the registry username</span></span><br><span class="line">      <span class="attr">password:</span> <span class="string">Harbor12345</span> <span class="comment"># this is the registry password</span></span><br></pre></td></tr></table></figure>



<h4 id="安全（https）私有仓库配置"><a href="#安全（https）私有仓库配置" class="headerlink" title="安全（https）私有仓库配置"></a>安全（https）私有仓库配置</h4><h5 id="使用授信-ssl-证书"><a href="#使用授信-ssl-证书" class="headerlink" title="使用授信 ssl 证书"></a>使用授信 ssl 证书</h5><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">mirrors:</span></span><br><span class="line">  <span class="attr">&quot;harbor.kingsd.top&quot;:</span></span><br><span class="line">    <span class="attr">endpoint:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;https://harbor.kingsd.top&quot;</span></span><br><span class="line"><span class="attr">configs:</span></span><br><span class="line">  <span class="attr">&quot;harbor.kingsd.top&quot;:</span></span><br><span class="line">    <span class="attr">auth:</span></span><br><span class="line">      <span class="attr">username:</span> <span class="string">admin</span> <span class="comment"># this is the registry username</span></span><br><span class="line">      <span class="attr">password:</span> <span class="string">Harbor12345</span> <span class="comment"># this is the registry password</span></span><br></pre></td></tr></table></figure>

<h5 id="使用自签-ssl-证书"><a href="#使用自签-ssl-证书" class="headerlink" title="使用自签 ssl 证书"></a>使用自签 ssl 证书</h5><p>如果后端仓库使用的是自签名的 ssl 证书，那么需要配置 CA 证书 用于 ssl 证书的校验。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">mirrors:</span></span><br><span class="line">  <span class="attr">&quot;harbor-ksd.kingsd.top&quot;:</span></span><br><span class="line">    <span class="attr">endpoint:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;https://harbor-ksd.kingsd.top&quot;</span></span><br><span class="line"><span class="attr">configs:</span></span><br><span class="line">  <span class="attr">&quot;harbor-ksd.kingsd.top&quot;:</span></span><br><span class="line">    <span class="attr">auth:</span></span><br><span class="line">      <span class="attr">username:</span> <span class="string">admin</span> <span class="comment"># this is the registry username</span></span><br><span class="line">      <span class="attr">password:</span> <span class="string">Harbor12345</span> <span class="comment"># this is the registry password</span></span><br><span class="line">    <span class="attr">tls:</span></span><br><span class="line">      <span class="attr">ca_file:</span> <span class="string">/opt/certs/ca.crt</span></span><br></pre></td></tr></table></figure>

<h5 id="ssl-双向认证"><a href="#ssl-双向认证" class="headerlink" title="ssl 双向认证"></a>ssl 双向认证</h5><p>如果镜像仓库配置了双向认证，那么需要为 containerd 配置 ssl 证书用于 镜像仓库对 containerd 做认证。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">mirrors:</span></span><br><span class="line">  <span class="attr">&quot;harbor-ksd.kingsd.top&quot;:</span></span><br><span class="line">    <span class="attr">endpoint:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;https://harbor-ksd.kingsd.top&quot;</span></span><br><span class="line"><span class="attr">configs:</span></span><br><span class="line">  <span class="attr">&quot;harbor-ksd.kingsd.top&quot;:</span></span><br><span class="line">    <span class="attr">auth:</span></span><br><span class="line">      <span class="attr">username:</span> <span class="string">admin</span> <span class="comment"># this is the registry username</span></span><br><span class="line">      <span class="attr">password:</span> <span class="string">Harbor12345</span> <span class="comment"># this is the registry password</span></span><br><span class="line">    <span class="attr">tls:</span></span><br><span class="line">      <span class="attr">ca_file:</span> <span class="string">/opt/certs/ca.crt</span> <span class="comment"># path to the ca file used in the registry</span></span><br><span class="line">      <span class="attr">cert_file:</span> <span class="string">/opt/certs/harbor-ksd.kingsd.top.cert</span> <span class="comment"># path to the cert file used in the registry</span></span><br><span class="line">      <span class="attr">key_file:</span> <span class="string">/opt/certs/harbor-ksd.kingsd.top.key</span> <span class="comment"># path to the key file used in the registry</span></span><br></pre></td></tr></table></figure>



<h4 id="加速器配置"><a href="#加速器配置" class="headerlink" title="加速器配置"></a>加速器配置</h4><p>Containerd 与 docker 都有默认仓库，均为 docker.io 。如果配置中未指定 mirror 为 docker.io，containerd 后会自动加载 docker.io 配置。与 docker 不同的是，containerd 可以修改 docker.io 对应的 endpoint（默认为 <a href="https://registry-1.docker.io/">https://registry-1.docker.io</a>），而 docker 无法修改。</p>
<p>Docker 中可以通过 registry-mirrors 设置镜像加速地址。如果 pull 的镜像不带仓库地址（项目名+镜像名:tag），则会从默认镜像仓库去拉取镜像。如果配置了镜像加速地址，会先访问镜像加速仓库，如果没有返回数据，再访问默认的镜像仓库。</p>
<p>Containerd 目前没有直接配置镜像加速的功能，但 containerd 中可以修改 docker.io 对应的 endpoint，所以可以通过修改 endpoint 来实现镜像加速下载。因为 endpoint 是轮询访问，所以可以给 docker.io 配置多个仓库地址来实现 加速地址+默认仓库地址。如下配置示例：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">mirrors:</span></span><br><span class="line">  <span class="attr">&quot;docker.io&quot;:</span></span><br><span class="line">    <span class="attr">endpoint:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;https://fogjl973.mirror.aliyuncs.com&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;https://registry-1.docker.io&quot;</span></span><br></pre></td></tr></table></figure>



<p>参考</p>
<p><a href="https://zhuanlan.zhihu.com/p/584076089">Kubernetes 入门到实践：搭建 K3s 集群初体验 - 知乎 (zhihu.com)</a></p>
<p>离线安装<a href="https://docs.k3s.io/installation/airgap">Air-Gap Install | K3s</a></p>
]]></content>
      <categories>
        <category>容器技术</category>
      </categories>
      <tags>
        <tag>Kubernetes</tag>
        <tag>K8s</tag>
        <tag>K3s</tag>
      </tags>
  </entry>
  <entry>
    <title>K3s导出证书</title>
    <url>/2024/04/02/%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/K3s%E5%AF%BC%E5%87%BA%E8%AF%81%E4%B9%A6/</url>
    <content><![CDATA[<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 导出根证书</span><br><span class="line">kubectl get secret example-secret -o jsonpath=&#x27;&#123;.data.ca\.crt&#125;&#x27;| base64 --decode</span><br><span class="line"></span><br><span class="line">kubectl get secret example-secret -o jsonpath=&#x27;&#123;.data.tls\.crt&#125;&#x27;| base64 --decode</span><br><span class="line"></span><br><span class="line">kubectl get secret example-secret -o jsonpath=&#x27;&#123;.data.tls\.key&#125;&#x27;| base64 --decode</span><br></pre></td></tr></table></figure>
<hr>
<p>导出Secret</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl get secret example-secret -o yaml &gt; example-secret.yaml</span><br></pre></td></tr></table></figure>

<p>导出内容格式如下</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">ca.crt:</span> <span class="string">...</span></span><br><span class="line">  <span class="attr">tls.crt:</span> <span class="string">...</span></span><br><span class="line">  <span class="attr">tls.key:</span> <span class="string">...</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Secret</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">cert-manager.io/alt-names:</span> <span class="string">&#x27;...&#x27;</span></span><br><span class="line">    <span class="attr">cert-manager.io/certificate-name:</span> <span class="string">...</span></span><br><span class="line">    <span class="attr">cert-manager.io/common-name:</span> <span class="string">Tianjin</span> <span class="string">Pengan</span></span><br><span class="line">    <span class="attr">cert-manager.io/ip-sans:</span> <span class="number">192.168</span><span class="number">.0</span><span class="number">.2</span></span><br><span class="line">    <span class="attr">cert-manager.io/issuer-group:</span> <span class="string">cert-manager.io</span></span><br><span class="line">    <span class="attr">cert-manager.io/issuer-kind:</span> <span class="string">ClusterIssuer</span></span><br><span class="line">    <span class="attr">cert-manager.io/issuer-name:</span> <span class="string">selfsigned-cluster-issuer</span></span><br><span class="line">    <span class="attr">cert-manager.io/subject-organizations:</span> <span class="string">...</span></span><br><span class="line">    <span class="attr">cert-manager.io/uri-sans:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">creationTimestamp:</span> <span class="string">&quot;2024-09-10T10:54:59Z&quot;</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">controller.cert-manager.io/fao:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">tjpengan-io-secret</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line">  <span class="attr">resourceVersion:</span> <span class="string">&quot;1730340&quot;</span></span><br><span class="line">  <span class="attr">uid:</span> <span class="string">1c7d877b-ed86-4a1a-ad8c-0d8466c46506</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">kubernetes.io/tls</span></span><br></pre></td></tr></table></figure>

<p>Base64解码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># cert</span></span><br><span class="line"><span class="built_in">cat</span> example-secret.yaml | grep tls.crt | awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span> | <span class="built_in">base64</span> --decode &gt; example-secret.cert</span><br><span class="line"></span><br><span class="line"><span class="comment">#key</span></span><br><span class="line"><span class="built_in">cat</span> example-secret.yaml | grep tls.key | awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span> | <span class="built_in">base64</span> --decode &gt; example-secret.key</span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>容器技术</category>
      </categories>
      <tags>
        <tag>Https证书</tag>
        <tag>Kubernetes</tag>
        <tag>K3s</tag>
        <tag>TLS</tag>
      </tags>
  </entry>
  <entry>
    <title>K3s部署Dashboard</title>
    <url>/2024/04/08/%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/K3s%E9%83%A8%E7%BD%B2Dashboard/</url>
    <content><![CDATA[<h2 id="Helm部署"><a href="#Helm部署" class="headerlink" title="Helm部署"></a>Helm部署</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">helm repo add kubernetes-dashboard https://kubernetes.github.io/dashboard/</span><br><span class="line"></span><br><span class="line"><span class="comment">#helm会使用kubectl默认的KUBECONFIG配置，这里我们需要将KUBECONFIG换成k3s的否则会链接失败。</span></span><br><span class="line"><span class="built_in">export</span> KUBECONFIG=/etc/rancher/k3s/k3s.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment">#注意要指定端口号等信息，方便访问</span></span><br><span class="line"><span class="comment"># service.type=NodePort 默认是ClusterIP只能本机访问 </span></span><br><span class="line"><span class="comment"># service.nodePort=30080 指定访问端口号</span></span><br><span class="line"><span class="comment"># replicaCount=2 2个节点</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># helm v2</span></span><br><span class="line">helm upgrade --install kubernetes-dashboard kubernetes-dashboard/kubernetes-dashboard \</span><br><span class="line">--create-namespace \</span><br><span class="line">--namespace kubernetes-dashboard  \</span><br><span class="line"><span class="comment"># --set service.type=NodePort \</span></span><br><span class="line"><span class="comment"># --set service.nodePort=30080 \</span></span><br><span class="line"><span class="comment"># --set replicaCount=2</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># helm v3+</span></span><br><span class="line">helm install kubernetes-dashboard kubernetes-dashboard/kubernetes-dashboard \</span><br><span class="line">--create-namespace \</span><br><span class="line">--namespace kubernetes-dashboard \</span><br><span class="line"><span class="comment"># --set service.type=NodePort \</span></span><br><span class="line"><span class="comment"># --set service.nodePort=30080 \</span></span><br><span class="line"><span class="comment"># --set replicaCount=2</span></span><br></pre></td></tr></table></figure>



<h2 id="配置远程访问"><a href="#配置远程访问" class="headerlink" title="配置远程访问"></a>配置远程访问</h2><h4 id="NodePort暴露端口"><a href="#NodePort暴露端口" class="headerlink" title="NodePort暴露端口"></a>NodePort暴露端口</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl -n kubernetes-dashboard edit service kubernetes-dashboard-web</span><br></pre></td></tr></table></figure>

<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Please edit the object below. Lines beginning with a &#x27;#&#x27; will be ignored,</span></span><br><span class="line"><span class="comment"># and an empty file will abort the edit. If an error occurs while saving this file will be</span></span><br><span class="line"><span class="comment"># reopened with the relevant failures.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="string">...</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">resourceVersion:</span> <span class="string">&quot;343478&quot;</span></span><br><span class="line">  <span class="attr">selfLink:</span> <span class="string">/api/v1/namespaces/kubernetes-dashboard/services/kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">uid:</span> <span class="string">8e48f478-993d-11e7-87e0-901b0e532516</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">clusterIP:</span> <span class="number">10.100</span><span class="number">.124</span><span class="number">.90</span></span><br><span class="line">  <span class="attr">externalTrafficPolicy:</span> <span class="string">Cluster</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">443</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">8443</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">sessionAffinity:</span> <span class="string">None</span></span><br><span class="line">  <span class="comment"># 修改开放端口方式</span></span><br><span class="line">  <span class="comment">#type: ClusterIP</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">NodePort</span></span><br><span class="line"><span class="attr">status:</span></span><br><span class="line">  <span class="attr">loadBalancer:</span> &#123;&#125;</span><br></pre></td></tr></table></figure>



<h4 id="Traefik-Ingress反向代理"><a href="#Traefik-Ingress反向代理" class="headerlink" title="Traefik Ingress反向代理"></a>Traefik Ingress反向代理</h4><p>创建证书请求文件<code>dashboard-cert-manager.yaml</code></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">cert-manager.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Certificate</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">k3s-chemmy-io</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">secretName:</span> <span class="string">k3s-chemmy-io-tls</span></span><br><span class="line">  <span class="attr">issuerRef:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">letsencrypt-staging</span></span><br><span class="line">    <span class="attr">kind:</span> <span class="string">ClusterIssuer</span></span><br><span class="line">  <span class="attr">commonName:</span> <span class="string">k3s.chemmy.io</span></span><br><span class="line">  <span class="attr">dnsNames:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">k3s.sample.net</span></span><br></pre></td></tr></table></figure>

<p>此配置文件是测试版，正式版参考<a href="Kubernetes/K3s%E9%83%A8%E7%BD%B2cert-manager.md">K3s部署cert-manager</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl apply -f dashboard-cert-manager.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看</span></span><br><span class="line">kubectl get certificates</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果状态不是READY，检查 </span></span><br><span class="line">kubectl describe certificates k3s-chemmy-io</span><br><span class="line"></span><br><span class="line"><span class="comment"># 清理证书</span></span><br><span class="line">kubectl delete certificates k3s-chemmy-io</span><br><span class="line">kubectl delete secrets k3s-chemmy-io-tls</span><br></pre></td></tr></table></figure>





<h2 id="配置账户"><a href="#配置账户" class="headerlink" title="配置账户"></a>配置账户</h2><p>新建dashboard-admin.yaml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建ServiceAccount</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">admin-user</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment">#创建clusterRoleBinding</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">admin-user</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">cluster-admin</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">admin-user</span></span><br><span class="line">    <span class="attr">namespace:</span> <span class="string">kubernetes-dashboard</span></span><br></pre></td></tr></table></figure>

<p>新建用户</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 部署用户资源</span></span><br><span class="line">kubectl apply -f dashboard-admin.yaml</span><br></pre></td></tr></table></figure>

<p>获取token</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># v1.24+</span></span><br><span class="line"><span class="built_in">sudo</span> k3s kubectl -n kubernetes-dashboard create token admin-user</span><br><span class="line"></span><br><span class="line"><span class="comment"># v1.23 及之前的版本</span></span><br><span class="line"><span class="built_in">sudo</span> k3s kubectl -n kubernetes-dashboard describe secret admin-user-token | grep <span class="string">&#x27;^token&#x27;</span></span><br></pre></td></tr></table></figure>



<h2 id="Kubectl部署"><a href="#Kubectl部署" class="headerlink" title="Kubectl部署"></a>Kubectl部署</h2><p>最新版本只支持Helm,旧版本v2.7支持Kubectl部署</p>
<p>下载 <a href="https://github.com/kubernetes/dashboard/blob/v2.7.0/aio/deploy/recommended.yaml">recommended.yaml</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl apply -f recommended.yaml</span><br></pre></td></tr></table></figure>

<p>修改recommended.yaml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">...</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="comment"># 直接暴露端口使用NodePort,Traefik使用ClusterIP</span></span><br><span class="line">  <span class="comment">#type: ClusterIP</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">NodePort</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">443</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">8443</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="string">...</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>dashboard的默认webui证书是自动生成的，由于时间和名称存在问题，导致谷歌和ie浏览器无法打开登录界面，经过测试Firefox可以正常打开。解决证书问题参考<a href="https://www.jianshu.com/p/c6d560d12d50">Kubernetes Dashboard的安装与坑 - 简书 (jianshu.com)</a></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="comment"># 注释内置自动生成的证书 </span></span><br><span class="line"><span class="comment">#apiVersion: v1</span></span><br><span class="line"><span class="comment">#kind: Secret</span></span><br><span class="line"><span class="comment">#metadata:</span></span><br><span class="line"><span class="comment">#  labels:</span></span><br><span class="line"><span class="comment">#    k8s-app: kubernetes-dashboard</span></span><br><span class="line"><span class="comment">#  name: kubernetes-dashboard-certs</span></span><br><span class="line"><span class="comment">#  namespace: kubernetes-dashboard</span></span><br><span class="line"><span class="comment">#type: Opaque</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="string">...</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="meta"> </span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">revisionHistoryLimit:</span> <span class="number">10</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">kubernetesui/dashboard:v2.1.0</span></span><br><span class="line">          <span class="attr">imagePullPolicy:</span> <span class="string">Always</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">8443</span></span><br><span class="line">              <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">          <span class="attr">args:</span></span><br><span class="line">          <span class="comment"># 注释自动生成证书</span></span><br><span class="line">          <span class="comment">#  - --auto-generate-certificates</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--namespace=kubernetes-dashboard</span></span><br><span class="line">            <span class="comment"># 添加证书配置及证书文件映射</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--token-ttl=3600</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--bind-address=0.0.0.0</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--tls-cert-file=tls.crt</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--tls-key-file=tls.key</span></span><br><span class="line">            <span class="comment"># Uncomment the following line to manually specify Kubernetes API server Host</span></span><br><span class="line">            <span class="comment"># If not specified, Dashboard will attempt to auto discover the API server and connect</span></span><br><span class="line">            <span class="comment"># to it. Uncomment only if the default does not work.</span></span><br><span class="line">            <span class="comment"># - --apiserver-host=http://my-address:port</span></span><br><span class="line">          <span class="attr">volumeMounts:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">kubernetes-dashboard-certs</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/certs</span></span><br><span class="line">              <span class="comment"># Create on-disk volume to store exec logs</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/tmp</span></span><br><span class="line">              <span class="attr">name:</span> <span class="string">tmp-volume</span></span><br><span class="line">          <span class="attr">livenessProbe:</span></span><br><span class="line">            <span class="attr">httpGet:</span></span><br><span class="line">              <span class="attr">scheme:</span> <span class="string">HTTPS</span></span><br><span class="line">              <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">              <span class="attr">port:</span> <span class="number">8443</span></span><br><span class="line">            <span class="attr">initialDelaySeconds:</span> <span class="number">30</span></span><br><span class="line">            <span class="attr">timeoutSeconds:</span> <span class="number">30</span></span><br><span class="line">          <span class="attr">securityContext:</span></span><br><span class="line">            <span class="attr">allowPrivilegeEscalation:</span> <span class="literal">false</span></span><br><span class="line">            <span class="attr">readOnlyRootFilesystem:</span> <span class="literal">true</span></span><br><span class="line">            <span class="attr">runAsUser:</span> <span class="number">1001</span></span><br><span class="line">            <span class="attr">runAsGroup:</span> <span class="number">2001</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">kubernetes-dashboard-certs</span></span><br><span class="line">          <span class="attr">secret:</span></span><br><span class="line">            <span class="attr">secretName:</span> <span class="string">kubernetes-dashboard-certs</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">tmp-volume</span></span><br><span class="line">          <span class="attr">emptyDir:</span> &#123;&#125;</span><br><span class="line">      <span class="attr">serviceAccountName:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">      <span class="attr">nodeSelector:</span></span><br><span class="line">        <span class="attr">&quot;kubernetes.io/os&quot;:</span> <span class="string">linux</span></span><br><span class="line">      <span class="comment"># Comment the following tolerations if Dashboard must not be deployed on master</span></span><br><span class="line">      <span class="attr">tolerations:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">node-role.kubernetes.io/master</span></span><br><span class="line">          <span class="attr">effect:</span> <span class="string">NoSchedule</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="string">...</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>生成证书文件 tls.crt,tls.csr,tls.key</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 生成key</span></span><br><span class="line">openssl genrsa -out tls.key 2048</span><br><span class="line"><span class="comment"># 生成csr</span></span><br><span class="line">openssl req -new -out tls.csr -key tls.key -subj <span class="string">&#x27;/CN=0.0.0.0&#x27;</span></span><br><span class="line"><span class="comment"># 生成</span></span><br><span class="line">openssl x509 -req -<span class="keyword">in</span> tls.csr -signkey tls.key -out tls.crt </span><br><span class="line"></span><br><span class="line"><span class="comment">#创建secret</span></span><br><span class="line">kubectl create secret generic kubernetes-dashboard-certs --from-file=tls.crt --from-file=tls.key -n kubernetes-dashboard</span><br></pre></td></tr></table></figure>

<p>subj子参数解释</p>
<table>
<thead>
<tr>
<th>缩写</th>
<th>翻译</th>
<th>英文对照</th>
</tr>
</thead>
<tbody><tr>
<td>C</td>
<td>国家名称缩写</td>
<td>Country Name (2 letter code)</td>
</tr>
<tr>
<td>ST</td>
<td>州或省名称</td>
<td>State or Province Name (full name)</td>
</tr>
<tr>
<td>L</td>
<td>城市或区域称</td>
<td>Locality Name (eg, city)</td>
</tr>
<tr>
<td>O</td>
<td>组织名（或公司名）</td>
<td>Organization Name (eg, company)</td>
</tr>
<tr>
<td>OU</td>
<td>组织单位名称（或部门名）</td>
<td>Organizational Unit Name (eg, section)</td>
</tr>
<tr>
<td>CN</td>
<td>服务器域名&#x2F;证书拥有者名称</td>
<td>Common Name (e.g. server FQDN or YOUR name)</td>
</tr>
<tr>
<td>emailAddress</td>
<td>邮件地址</td>
<td>Email</td>
</tr>
</tbody></table>
<p>参考</p>
<p><a href="https://zhuanlan.zhihu.com/p/666638890">k3s集群单节点部署与集群内DashBoard部署 - 知乎 (zhihu.com)</a></p>
<p><a href="https://www.cnblogs.com/databank/p/15664859.html">k3s集群搭建并安装kubernetes-dashboard - 东峰叵,com - 博客园 (cnblogs.com)</a></p>
<p>[K8S 快速入门（十九）通过Helm 安装 Kubernetes Dashboard_helm安装dashboard ingress-CSDN博客](<a href="https://blog.csdn.net/weixin_41947378/article/details/111661539#:~:text=%E9%80%9A%E8%BF%87Helm">https://blog.csdn.net/weixin_41947378/article/details/111661539#:~:text=通过Helm</a> 安装 Kubernetes Dashboard 1 1. 下载 %23,外网访问 %23 将svc的ClusterIP改为NotePort，外网访问  … 5 5. 令牌方式登录仪表盘)</p>
<p><a href="https://blog.csdn.net/lwlfox/article/details/113403133">使用 traefik ingress暴露kubernetes-dashbord - HTTPS版本_svclb-traefik-CSDN博客</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/655525723">Kubernetes dashboardv2.7.0安装指南：从零开始搭建可视化界面 - 知乎</a></p>
]]></content>
      <categories>
        <category>容器技术</category>
      </categories>
      <tags>
        <tag>Kubernetes</tag>
        <tag>K3s</tag>
        <tag>Dashboard</tag>
      </tags>
  </entry>
  <entry>
    <title>基于K3S搭建DevOps</title>
    <url>/2024/03/12/%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/K3s%E9%83%A8%E7%BD%B2DevOps/</url>
    <content><![CDATA[<h2 id="K3s安装"><a href="#K3s安装" class="headerlink" title="K3s安装"></a>K3s安装</h2><p>参考 <a href="/2024/03/11/%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/K3S%E5%AE%89%E8%A3%85/" title="K3s安装">K3S安装</a></p>
<h2 id="组件配置信息"><a href="#组件配置信息" class="headerlink" title="组件配置信息"></a>组件配置信息</h2><p>开放端口</p>
<table>
<thead>
<tr>
<th>端口</th>
<th>用途</th>
</tr>
</thead>
<tbody><tr>
<td>53</td>
<td>CoreDNS服务，替代修改Hosts方式实现内网域名访问</td>
</tr>
<tr>
<td>5432&#x2F;3306</td>
<td>PostgreSQL&#x2F;MySQL数据库（二选一即可）</td>
</tr>
<tr>
<td>443，80</td>
<td>HTTPS、HTTP访问入口，Traefik</td>
</tr>
<tr>
<td>6379</td>
<td>Redis缓存</td>
</tr>
<tr>
<td>8022</td>
<td>SSH管理端口</td>
</tr>
<tr>
<td>22</td>
<td>git+ssh方式代码上传</td>
</tr>
</tbody></table>
<p>域名规划</p>
<table>
<thead>
<tr>
<th>组件</th>
<th>访问地址</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>Cert-Manager</td>
<td></td>
<td>证书管理服务，有公网域名推荐使用，内网部署可生成自签名证书</td>
</tr>
<tr>
<td>Traefik Dashboard</td>
<td><a href="https://dashboard.example.io/">https://dashboard.example.io</a></td>
<td>反向代理&#x2F;负载均衡</td>
</tr>
<tr>
<td>Harbor</td>
<td><a href="https://harbor.example.io/">https://harbor.example.io</a></td>
<td>私有镜像库,镜像缓存</td>
</tr>
<tr>
<td>Gitea</td>
<td><a href="https://gitea.example.io/">https://gitea.example.io</a></td>
<td>源代码仓库</td>
</tr>
<tr>
<td>Tekton</td>
<td><a href="https://tekton.example.io/">https://tekton.example.io</a></td>
<td>云原生持续集成</td>
</tr>
<tr>
<td>Drone</td>
<td><a href="https://drone.example.io/">https://drone.example.io</a></td>
<td>容器化持续集成</td>
</tr>
<tr>
<td>Sonar Qube</td>
<td><a href="https://sonar.example.io/">https://sonar.example.io</a></td>
<td>静态代码审查。</td>
</tr>
<tr>
<td>ArgoCD</td>
<td><a href="https://argocd.example.io/">https://argocd.example.io</a></td>
<td>持续部署组件</td>
</tr>
</tbody></table>
<h2 id="组件部署"><a href="#组件部署" class="headerlink" title="组件部署"></a>组件部署</h2><h3 id="Traefik"><a href="#Traefik" class="headerlink" title="Traefik"></a>Traefik</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">```</span><br><span class="line"></span><br><span class="line">### ArgoCD</span><br><span class="line"></span><br><span class="line">Helm方式部署</span><br><span class="line"></span><br><span class="line">```bash</span><br></pre></td></tr></table></figure>

<h3 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h3><p>参考 <a href="K3s%E9%83%A8%E7%BD%B2MySQL.md">K3s部署MySQL</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># k3s使用 local-path 部署</span></span><br><span class="line">kubectl apply -f https://gitee.com/Chemmy/kube-template/MySQL/mysql-pvc-local-path.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 部署mysql-config</span></span><br><span class="line">kubectl apply -f https://gitee.com/Chemmy/kube-template/MySQL/mysql-config.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 部署deploy</span></span><br><span class="line">kubectl apply -f https://gitee.com/Chemmy/kube-template/MySQL/mysql-deployment.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 部署service(NodePort 方式)</span></span><br><span class="line">kubectl apply -f https://gitee.com/Chemmy/kube-template/MySQL/mysql-service.yaml</span><br></pre></td></tr></table></figure>

<h3 id="PostgresSQL"><a href="#PostgresSQL" class="headerlink" title="PostgresSQL"></a>PostgresSQL</h3><p>参考 <a href="K3s%E9%83%A8%E7%BD%B2PostgreSQL.md">K3s部署PostgreSQL</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># k3s使用 local-path 部署</span></span><br><span class="line">kubectl apply -f https://gitee.com/Chemmy/kube-template/PostgreSQL/postgres-pvc-local-path.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 部署config</span></span><br><span class="line">kubectl apply -fhttps://gitee.com/Chemmy/kube-template/PostgreSQL/postgres-config.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 部署deploy</span></span><br><span class="line">kubectl apply -fhttps://gitee.com/Chemmy/kube-template/PostgreSQL/postgres-deployment.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 部署service(NodePort 方式)</span></span><br><span class="line">kubectl apply -fhttps://gitee.com/Chemmy/kube-template/PostgreSQL/postgres-service.yaml</span><br></pre></td></tr></table></figure>


<h3 id="cert-manager"><a href="#cert-manager" class="headerlink" title="cert-manager"></a>cert-manager</h3><p>参考<a href="/2024/04/02/%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/k3s%E8%AF%81%E4%B9%A6%E7%AE%A1%E7%90%86/" title="K3s证书管理">k3s证书管理</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 添加镜像源</span></span><br><span class="line">helm repo add jetstack https://charts.jetstack.io</span><br><span class="line"></span><br><span class="line">helm upgrade cert-manager jetstack/cert-manager \</span><br><span class="line">	--namespace cert-manager \</span><br><span class="line">	--install --create-namespace \</span><br><span class="line">	--<span class="built_in">set</span> crds.enabled=<span class="literal">true</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="Harbor"><a href="#Harbor" class="headerlink" title="Harbor"></a>Harbor</h3><p>参考<a href="K3s%E9%83%A8%E7%BD%B2Harbor%E7%A7%81%E6%9C%89%E9%95%9C%E5%83%8F%E4%BB%93%E5%BA%93.md">K3s部署Harbor私有镜像仓库</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="Gitea"><a href="#Gitea" class="headerlink" title="Gitea"></a>Gitea</h3><p>参考<a href="K3s%E9%83%A8%E7%BD%B2Gitea.md">K3s部署Gitea</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="Tekton"><a href="#Tekton" class="headerlink" title="Tekton"></a>Tekton</h3><p>参考[[K3s部署Tenton]]</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">```</span><br><span class="line"></span><br><span class="line">### Drone (已弃用)</span><br><span class="line"></span><br><span class="line">参考[K3s部署Drone](K3s部署Drone.md)</span><br><span class="line"></span><br><span class="line">```bash</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h3 id="SonarQube"><a href="#SonarQube" class="headerlink" title="SonarQube"></a>SonarQube</h3><p>参考<a href="K3s%E9%83%A8%E7%BD%B2SonarQube.md">K3s部署SonarQube</a></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>



<h2 id="组件之间联动配置"><a href="#组件之间联动配置" class="headerlink" title="组件之间联动配置"></a>组件之间联动配置</h2><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://docs.gitea.com/">Gitea官方文档</a></p>
<p><a href="https://gitea.cn/gitea/gitea">Gitea README</a></p>
<p><a href="https://docs.drone.io/">Drone官方文档</a></p>
<p><a href="https://helm.sh/zh/docs">Helm官方文档</a></p>
<p><a href="https://goharbor.io/docs/2.11.0">Harbor官方文档</a></p>
<p><a href="https://doc.traefik.io/traefik/">Traefik Proxy Documentation - Traefik</a></p>
<p><a href="https://blog.csdn.net/qq_21233759/article/details/125947303">k3s 部署gitea+drone_golang k3s-CSDN博客</a></p>
<p><a href="https://cloud.tencent.com/developer/article/1839419">Harbor 结合 Traefik 的 HA 安装配置-腾讯云开发者社区-腾讯云 (tencent.com)</a></p>
<p><a href="https://cloud.tencent.com/developer/article/2014106">Traefik - Kubernetes 配置TCP&#x2F;HTTP服务-腾讯云开发者社区-腾讯云 (tencent.com)</a></p>
<p><a href="https://www.cnblogs.com/wosperry/p/17202852.html">Drone CI使用docker插件构建和推送镜像 - wosperry - 博客园 (cnblogs.com)</a></p>
<p><a href="https://hanggi.me/post/deployment/drone-ci-k8s/">在 Kubernetes 上部署 Drone 持续集成环境 | Hanggi - NGNL</a></p>
<p><a href="https://www.cnblogs.com/Gitea/p/drone.html">Gitea 与 Drone 集成实践：完全基于 Docker 搭建的轻量级 CI&#x2F;CD 系统 - Gitea - 博客园 (cnblogs.com)</a></p>
<p><a href="https://blog.csdn.net/weixin_46660849/article/details/133386989">Helm Chart Kubernetes安装SonarQube_helm安装sunaqube-CSDN博客</a></p>
]]></content>
      <categories>
        <category>容器技术</category>
      </categories>
      <tags>
        <tag>Kubernetes</tag>
        <tag>K8s</tag>
        <tag>K3s</tag>
        <tag>Drone</tag>
        <tag>Gitea</tag>
        <tag>Harbor</tag>
        <tag>DevOps</tag>
      </tags>
  </entry>
  <entry>
    <title>K3s部署EMQX.md</title>
    <url>/2024/11/12/%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/K3s%E9%83%A8%E7%BD%B2EMQX.md/</url>
    <content><![CDATA[<p><a href="https://www.emqx.com/zh/blog/emqx-mqtt-broker-k8s-cluster">https://www.emqx.com/zh/blog/emqx-mqtt-broker-k8s-cluster</a></p>
]]></content>
      <categories>
        <category>容器技术</category>
      </categories>
      <tags>
        <tag>Kubernetes</tag>
        <tag>K3s</tag>
        <tag>EMQX</tag>
        <tag>mqtt</tag>
      </tags>
  </entry>
  <entry>
    <title>K3s部署Harbor(私有镜像仓库)</title>
    <url>/2024/04/10/%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/K3s%E9%83%A8%E7%BD%B2Harbor%E7%A7%81%E6%9C%89%E9%95%9C%E5%83%8F%E4%BB%93%E5%BA%93/</url>
    <content><![CDATA[<h2 id="准备环境"><a href="#准备环境" class="headerlink" title="准备环境"></a>准备环境</h2><h3 id="证书"><a href="#证书" class="headerlink" title="证书"></a>证书</h3><p>[[..&#x2F;杂项&#x2F;OpenSSL生成自签名证书|OpenSSL生成自签名证书]]</p>
<a href="/2024/04/02/%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/k3s%E8%AF%81%E4%B9%A6%E7%AE%A1%E7%90%86/" title="K3s证书管理">k3s证书管理</a>

<h3 id="默认配置文件"><a href="#默认配置文件" class="headerlink" title="默认配置文件"></a>默认配置文件</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">helm show values harbor/harbor &gt; harbor-values.yaml</span><br></pre></td></tr></table></figure>



<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="配置清单"><a href="#配置清单" class="headerlink" title="配置清单"></a>配置清单</h3><p>harbor-value.yaml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">expose:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">ingress</span></span><br><span class="line">  <span class="attr">tls:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">certSource:</span> <span class="string">secret</span></span><br><span class="line">    <span class="attr">secret:</span></span><br><span class="line">      <span class="attr">secretName:</span> <span class="string">&quot;example.io&quot;</span></span><br><span class="line">      <span class="attr">notarySecretName:</span> <span class="string">&quot;example.io&quot;</span></span><br><span class="line">  <span class="attr">ingress:</span></span><br><span class="line">    <span class="attr">hosts:</span></span><br><span class="line">      <span class="attr">core:</span> <span class="string">harbor.example.io</span></span><br><span class="line">      <span class="attr">notary:</span> <span class="string">notary.example.io</span></span><br><span class="line">    <span class="attr">controller:</span> <span class="string">default</span></span><br><span class="line">    <span class="attr">annotations:</span></span><br><span class="line">      <span class="attr">ingress.kubernetes.io/ssl-redirect:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line">      <span class="attr">ingress.kubernetes.io/proxy-body-size:</span> <span class="string">&quot;0&quot;</span></span><br><span class="line">      <span class="attr">kubernetes.io/ingress.class:</span> <span class="string">&quot;traefik&quot;</span></span><br><span class="line">      <span class="attr">traefik.ingress.kubernetes.io/router.tls:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line">      <span class="attr">traefik.ingress.kubernetes.io/router.entrypoints:</span> <span class="string">websecure</span></span><br><span class="line"></span><br><span class="line"><span class="attr">externalURL:</span> <span class="string">https://harbor.example.io</span></span><br><span class="line"></span><br><span class="line"><span class="attr">harborAdminPassword:</span> <span class="string">&quot;Harbor123456&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">logLevel:</span> <span class="string">info</span></span><br><span class="line"></span><br><span class="line"><span class="attr">chartmuseum:</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="attr">database:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">external</span></span><br><span class="line">  <span class="attr">external:</span></span><br><span class="line">    <span class="attr">host:</span> <span class="string">&quot;postgres.devops.svc.cluster.local&quot;</span></span><br><span class="line">    <span class="attr">port:</span> <span class="string">&quot;5432&quot;</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">&quot;harbor&quot;</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">&quot;harbor&quot;</span></span><br><span class="line"><span class="attr">redis:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">external</span></span><br><span class="line">  <span class="attr">external:</span></span><br><span class="line">    <span class="attr">addr:</span> <span class="string">&quot;redis.devops.svc.cluster.local:6379&quot;</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">&quot;passwd&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>harbor-ingress.yaml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">traefik.containo.us/v1alpha1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">IngressRoute</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-ops</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">harbor-http</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">entryPoints:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">websecure</span></span><br><span class="line">  <span class="attr">tls:</span></span><br><span class="line">    <span class="attr">secretName:</span> <span class="string">all-xxxx-com</span></span><br><span class="line">  <span class="attr">routes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">match:</span> <span class="string">Host(`harbor.example.com`)</span> <span class="string">&amp;&amp;</span> <span class="string">PathPrefix(`/`)</span></span><br><span class="line">      <span class="attr">kind:</span> <span class="string">Rule</span></span><br><span class="line">      <span class="attr">services:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">harbor-portal</span></span><br><span class="line">          <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">traefik.containo.us/v1alpha1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">IngressRoute</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-ops</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">harbor-api</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">entryPoints:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">websecure</span></span><br><span class="line">  <span class="attr">tls:</span></span><br><span class="line">    <span class="attr">secretName:</span> <span class="string">all-xxxx-com</span></span><br><span class="line">  <span class="attr">routes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">match:</span> <span class="string">Host(`harbor.example.com`)</span> <span class="string">&amp;&amp;</span> <span class="string">PathPrefix(`/api/`)</span></span><br><span class="line">      <span class="attr">kind:</span> <span class="string">Rule</span></span><br><span class="line">      <span class="attr">services:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">harbor-core</span></span><br><span class="line">          <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">traefik.containo.us/v1alpha1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">IngressRoute</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-ops</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">harbor-service</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">entryPoints:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">websecure</span></span><br><span class="line">  <span class="attr">tls:</span></span><br><span class="line">    <span class="attr">secretName:</span> <span class="string">all-xxxx-com</span></span><br><span class="line">  <span class="attr">routes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">match:</span> <span class="string">Host(`harbor.example.com`)</span> <span class="string">&amp;&amp;</span> <span class="string">PathPrefix(`/service/`)</span></span><br><span class="line">      <span class="attr">kind:</span> <span class="string">Rule</span></span><br><span class="line">      <span class="attr">services:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">harbor-core</span></span><br><span class="line">          <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">traefik.containo.us/v1alpha1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">IngressRoute</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-ops</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">harbor-v2</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">entryPoints:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">websecure</span></span><br><span class="line">  <span class="attr">tls:</span></span><br><span class="line">    <span class="attr">secretName:</span> <span class="string">all-xxxx-com</span></span><br><span class="line">  <span class="attr">routes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">match:</span> <span class="string">Host(`harbor.example.com`)</span> <span class="string">&amp;&amp;</span> <span class="string">PathPrefix(`/v2`)</span></span><br><span class="line">      <span class="attr">kind:</span> <span class="string">Rule</span></span><br><span class="line">      <span class="attr">services:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">harbor-core</span></span><br><span class="line">          <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">traefik.containo.us/v1alpha1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">IngressRoute</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-ops</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">harbor-chartrepo</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">entryPoints:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">websecure</span></span><br><span class="line">  <span class="attr">tls:</span></span><br><span class="line">    <span class="attr">secretName:</span> <span class="string">all-xxxx-com</span></span><br><span class="line">  <span class="attr">routes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">match:</span> <span class="string">Host(`harbor.example.com`)</span> <span class="string">&amp;&amp;</span> <span class="string">PathPrefix(`/chartrepo/`)</span></span><br><span class="line">      <span class="attr">kind:</span> <span class="string">Rule</span></span><br><span class="line">      <span class="attr">services:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">harbor-core</span></span><br><span class="line">          <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">traefik.containo.us/v1alpha1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">IngressRoute</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-ops</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">harbor-c</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">entryPoints:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">websecure</span></span><br><span class="line">  <span class="attr">tls:</span></span><br><span class="line">    <span class="attr">secretName:</span> <span class="string">all-xxxx-com</span></span><br><span class="line">  <span class="attr">routes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">match:</span> <span class="string">Host(`harbor.example.com`)</span> <span class="string">&amp;&amp;</span> <span class="string">PathPrefix(`/c/`)</span></span><br><span class="line">      <span class="attr">kind:</span> <span class="string">Rule</span></span><br><span class="line">      <span class="attr">services:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">harbor-core</span></span><br><span class="line">          <span class="attr">port:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure>



<h3 id="安装Harbor"><a href="#安装Harbor" class="headerlink" title="安装Harbor"></a>安装Harbor</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 添加Harbor仓库</span></span><br><span class="line">helm repo add harbor https://helm.goharbor.io</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用部署或升级Harbor</span></span><br><span class="line">helm upgrade harbor harbor/harbor --namespace harbor \</span><br><span class="line">	--install --create-namespace \</span><br><span class="line">	-f harbor-values.yaml</span><br></pre></td></tr></table></figure>



<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="配置library仓库源"><a href="#配置library仓库源" class="headerlink" title="配置library仓库源"></a>配置library仓库源</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kubectl edit configmap harobr-registry -n harbor</span><br><span class="line"></span><br><span class="line"># 在auth: 后边添加新节点</span><br><span class="line">proxy:</span><br><span class="line">  remoteurl: &quot;https://registry-1.docker.io&quot;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="使用Harbor"><a href="#使用Harbor" class="headerlink" title="使用Harbor"></a>使用Harbor</h3><h3 id="配置镜像缓存"><a href="#配置镜像缓存" class="headerlink" title="配置镜像缓存"></a>配置镜像缓存</h3><p>参考</p>
<p><a href="https://northes.io/posts/docker/harbor/mirror/">Harbor 搭建镜像代理 | Northes</a></p>
<p><a href="https://blog.csdn.net/qq_35925862/article/details/128641810">Kubernetes ≥ 1.25 Containerd配置Harbor私有镜像仓库_containerd登录镜像仓库-CSDN博客</a></p>
<p><a href="https://lusyoe.github.io/2019/06/22/%E7%BB%93%E5%90%88Cert-Manager%E5%AE%8C%E6%88%90Harbor%E7%9A%84Https%E8%AF%81%E4%B9%A6%E8%87%AA%E5%8A%A8%E7%AD%BE%E5%8F%91/">结合Cert-Manager完成Harbor的Https证书自动签发 | 风格 | 风起于青萍之末 (lusyoe.github.io)</a></p>
<p><a href="https://cloud.tencent.com/developer/article/2308391">Containerd容器镜像管理-腾讯云开发者社区-腾讯云 (tencent.com)</a></p>
<p><a href="https://www.jianshu.com/p/9df9ae97db39">通过helm在k8s上搭建Harbor - 简书 (jianshu.com)</a></p>
<p><a href="https://cloud.tencent.com/developer/article/1754686">Kubernetes 集群仓库 harbor Helm3 部署-腾讯云开发者社区-腾讯云 (tencent.com)</a></p>
<p><a href="https://www.cnblogs.com/yangmeichong/p/16661444.html">containerd基本使用命令 - 杨梅冲 - 博客园 (cnblogs.com)</a></p>
<p><a href="https://cloud.tencent.com/developer/article/1872039">Kubernetes1.21搭建harbor-腾讯云开发者社区-腾讯云 (tencent.com)</a></p>
]]></content>
      <categories>
        <category>容器技术</category>
      </categories>
      <tags>
        <tag>Kubernetes</tag>
        <tag>K3s</tag>
        <tag>Harbor</tag>
      </tags>
  </entry>
  <entry>
    <title>K3s部署Locust</title>
    <url>/2024/06/01/%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/K3s%E9%83%A8%E7%BD%B2Locust/</url>
    <content><![CDATA[<p>参考</p>
<p><a href="https://www.cnblogs.com/lvcisco/p/10697565.html">kubernetes Traefik ingress配置详解 - lvelvis - 博客园 (cnblogs.com)</a></p>
]]></content>
      <categories>
        <category>容器技术</category>
      </categories>
      <tags>
        <tag>Kubernetes</tag>
        <tag>K3s</tag>
        <tag>Locust</tag>
      </tags>
  </entry>
  <entry>
    <title>K3s部署MySQL</title>
    <url>/2024/04/26/%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/K3s%E9%83%A8%E7%BD%B2MySQL/</url>
    <content><![CDATA[<p>参考</p>
<p><a href="https://zhuanlan.zhihu.com/p/379127137">利用Kubernetes搭建便携式开发环境之MySQL和Redis - 知乎 (zhihu.com)</a></p>
]]></content>
      <categories>
        <category>容器技术</category>
      </categories>
      <tags>
        <tag>Kubernetes</tag>
        <tag>K3s</tag>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>K3s部署PostgreSQL</title>
    <url>/2024/04/28/%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/K3s%E9%83%A8%E7%BD%B2PostgreSQL/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>容器技术</category>
      </categories>
      <tags>
        <tag>PostgreSQL</tag>
        <tag>Kubernetes</tag>
        <tag>K8s</tag>
        <tag>K3s</tag>
      </tags>
  </entry>
  <entry>
    <title>K3s部署Redis</title>
    <url>/2024/04/02/%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/K3s%E9%83%A8%E7%BD%B2Redis/</url>
    <content><![CDATA[<h1 id="Kubectl部署"><a href="#Kubectl部署" class="headerlink" title="Kubectl部署"></a>Kubectl部署</h1><p>配置文件</p>
<h1 id="Helm部署"><a href="#Helm部署" class="headerlink" title="Helm部署"></a>Helm部署</h1><p>添加helm库</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 添加库</span></span><br><span class="line">helm repo add bitnami https://charts.bitnami.com/bitnami</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新库缓存</span></span><br><span class="line">helm repo update </span><br><span class="line"></span><br><span class="line"><span class="comment"># 搜索redis镜像</span></span><br><span class="line">helm search repo redis</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取package的values.yaml</span></span><br><span class="line">helm show values bitnami/redis &gt; values-default.yaml</span><br></pre></td></tr></table></figure>

<p>配置 values.yaml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">auth:</span></span><br><span class="line">  <span class="attr">password:</span> <span class="number">123456</span> <span class="comment"># redis 访问密码</span></span><br><span class="line"><span class="attr">master:</span></span><br><span class="line">  <span class="attr">service:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">NodePort</span>		<span class="comment"># 服务对外暴露端口方式</span></span><br><span class="line">  <span class="attr">persistence:</span>			<span class="comment"># 配置点存储</span></span><br><span class="line">    <span class="attr">storageClass:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="attr">size:</span> <span class="string">8Gi</span></span><br><span class="line"><span class="attr">replica:</span>				</span><br><span class="line">  <span class="attr">service:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">NodePort</span></span><br><span class="line">  <span class="attr">persistence:</span></span><br><span class="line">    <span class="attr">storageClass:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="attr">size:</span> <span class="string">8Gi</span></span><br></pre></td></tr></table></figure>

<p>部署</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">helm install -f values.yaml redis bitnami/redis --namespace --create-namespace</span><br></pre></td></tr></table></figure>



<p>参考</p>
<p><a href="https://www.cnblogs.com/zisefeizhu/p/14282299.html">kubernetes环境部署单节点redis - 紫色飞猪 - 博客园 (cnblogs.com)</a></p>
<p><a href="https://blog.csdn.net/muguazhi/article/details/132455056">K8S如何部署Redis（单机、集群）_k8部署redis单节点-CSDN博客</a></p>
<p><a href="https://blog.csdn.net/smile_pbb/article/details/117771389">4. K8S发布redis主从-CSDN博客</a></p>
<p><a href="https://segmentfault.com/a/1190000040364886">redis集群 - Helm3-安装Redis - 全栈工程师进阶 - SegmentFault 思否</a></p>
]]></content>
      <categories>
        <category>容器技术</category>
      </categories>
      <tags>
        <tag>Kubernetes</tag>
        <tag>K3s</tag>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>K3s部署Registry镜像仓库</title>
    <url>/2024/07/08/%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/K3s%E9%83%A8%E7%BD%B2Registry%E9%95%9C%E5%83%8F%E4%BB%93%E5%BA%93/</url>
    <content><![CDATA[<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/succing/article/details/122757052">Docker学习：部署本地私有镜像仓库registry （高级应用）_docker registry部署-CSDN博客</a></p>
<p><a href="https://cloud.tencent.com/developer/article/1688877">三分钟Docker-推送本地镜像到仓库-腾讯云开发者社区-腾讯云 (tencent.com)</a></p>
<p><a href="https://blog.csdn.net/Jerry00713/article/details/108318950">Docker registry 、网络类型、跨主机访问 –3_docker it does not belong to any of this network-CSDN博客</a></p>
<p><a href="https://shikanon.github.io/2019/%E8%BF%90%E7%BB%B4/docker-registry-%E8%AE%BE%E7%BD%AE%E7%A7%81%E6%9C%89%E7%9A%84%E9%95%9C%E5%83%8F%E7%BC%93%E5%AD%98%E4%BB%93%E5%BA%93/">docker registry:设置私有的镜像缓存仓库 | shikanon</a></p>
<p><a href="https://cloud.tencent.com/developer/article/1640240">私有docker registry的ssl访问实现-腾讯云开发者社区-腾讯云 (tencent.com)</a></p>
]]></content>
      <categories>
        <category>容器技术</category>
      </categories>
      <tags>
        <tag>Kubernetes</tag>
        <tag>K3s</tag>
        <tag>registry</tag>
        <tag>私有镜像仓库</tag>
        <tag>镜像缓存</tag>
      </tags>
  </entry>
  <entry>
    <title>K3s部署Tekton</title>
    <url>/2025/05/29/%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/K3s%E9%83%A8%E7%BD%B2Tekton/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>容器技术</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>Tekton</tag>
        <tag>CI</tag>
      </tags>
  </entry>
  <entry>
    <title>K3s配置NVIDIA GPU</title>
    <url>/2024/04/02/%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/K3s%E9%85%8D%E7%BD%AENVIDIA-GPU/</url>
    <content><![CDATA[<p><a href="https://fissssssh.aiursoft.cn/posts/configure-nvidia-gpus-in-k3s/">在K3s中配置使用NVIDIA GPUS | fissssssh (aiursoft.cn)</a></p>
]]></content>
      <categories>
        <category>容器技术</category>
      </categories>
      <tags>
        <tag>Kubernetes</tag>
        <tag>K3s</tag>
        <tag>NVIDIA</tag>
      </tags>
  </entry>
  <entry>
    <title>K3s 配置 Traefik Ingress</title>
    <url>/2024/06/01/%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/K3s%E9%85%8D%E7%BD%AEtraefik/</url>
    <content><![CDATA[<h2 id="启用Dashboard"><a href="#启用Dashboard" class="headerlink" title="启用Dashboard"></a>启用Dashboard</h2><p>K3s (≥1.21)默认没有启用 Traefik Dashboard。如果要在 K3s 中启用  Dashborad，我们可以借助 HelmChartConfig 来自定义由 Helm 部署的 Traefik 并启用 Dashboard。</p>
<blockquote>
<p>不建议手动编辑 <code>/var/lib/rancher/K3s/server/manifests/traefik.yaml</code> 来修改 Traefik 配置文件，因为 K3s 重启后会覆盖修改的内容。</p>
<p>建议通过在 <code>/var/lib/rancher/K3s/server/manifests</code> 中创建一个额外的 <code>HelmChartConfig</code> 清单来自定义 Traefik 配置，请参考：<a href="https://link.zhihu.com/?target=http://docs.rancher.cn/docs/K3s/helm/_index/">http://docs.rancher.cn/docs/K3</a></p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt;&gt; /var/lib/rancher/K3s/server/manifests/traefik-config.yaml &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">apiVersion: helm.cattle.io/v1</span></span><br><span class="line"><span class="string">kind: HelmChartConfig</span></span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="string">  name: traefik</span></span><br><span class="line"><span class="string">  namespace: kube-system</span></span><br><span class="line"><span class="string">spec:</span></span><br><span class="line"><span class="string">  valuesContent: |-</span></span><br><span class="line"><span class="string">    dashboard:</span></span><br><span class="line"><span class="string">      enabled: true</span></span><br><span class="line"><span class="string">    ports:</span></span><br><span class="line"><span class="string">      traefik:</span></span><br><span class="line"><span class="string">        expose: true</span></span><br><span class="line"><span class="string">    logs:</span></span><br><span class="line"><span class="string">      access:</span></span><br><span class="line"><span class="string">        enabled: true</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure>
<p>K8s 修改 traefik-vlues.yaml 中<code>ingressRoute.dashboard</code>并应用配置</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">helm upgrade traefik traefik/traefik \</span><br><span class="line">    --namespace traefik -f traefik-vlues.yaml</span><br></pre></td></tr></table></figure>
<h2 id="配置Service及路由规则"><a href="#配置Service及路由规则" class="headerlink" title="配置Service及路由规则"></a>配置Service及路由规则</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">cat</span> <span class="string">&gt;&gt;</span> <span class="string">traefik-dashboard.yaml</span> <span class="string">&lt;&lt;</span> <span class="string">EOF</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">traefik</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span> </span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">allocateLoadBalancerNodePorts:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">web</span></span><br><span class="line">    <span class="attr">nodePort:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="string">web</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">websecure</span></span><br><span class="line">    <span class="attr">nodePort:</span> <span class="number">443</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">443</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="string">websecure</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/instance:</span> <span class="string">traefik-kube-system</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">traefik</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">LoadBalancer</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">traefik.io/v1alpha1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">IngressRoute</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">traefik-dashboard-web</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">entryPoints:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">web</span></span><br><span class="line">  <span class="attr">routes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">Rule</span></span><br><span class="line">      <span class="attr">match:</span> <span class="string">PathPrefix(`/dashboard`)</span> <span class="string">||</span> <span class="string">PathPrefix(`/api`)</span></span><br><span class="line">      <span class="attr">services:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">api@internal</span></span><br><span class="line">          <span class="attr">kind:</span> <span class="string">TraefikService</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">traefik.io/v1alpha1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">IngressRoute</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">traefik-dashboard-websecure</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">entryPoints:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">websecure</span></span><br><span class="line">  <span class="attr">routes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">Rule</span></span><br><span class="line">      <span class="attr">match:</span> <span class="string">PathPrefix(`/dashboard`)</span> <span class="string">||</span> <span class="string">PathPrefix(`/api`)</span></span><br><span class="line">      <span class="attr">services:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">api@internal</span></span><br><span class="line">          <span class="attr">kind:</span> <span class="string">TraefikService</span></span><br><span class="line">  <span class="attr">tls:</span></span><br><span class="line">    <span class="attr">secretName:</span> <span class="string">traefik-dashboard-tls</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl apply -f traefik-dashboard.yaml</span><br></pre></td></tr></table></figure>

<p><strong>访问Dashboard需要在最后加一个<code>/</code> 否则可能出现page not found</strong></p>
<h2 id="配置IngressRoute"><a href="#配置IngressRoute" class="headerlink" title="配置IngressRoute"></a>配置IngressRoute</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 搭建测试环境</span></span><br><span class="line">kubectl create deploy <span class="built_in">whoami</span> --image=traefik/whoami --replicas=2</span><br><span class="line">kubectl expose deploy <span class="built_in">whoami</span> --port=80</span><br></pre></td></tr></table></figure>

<p>HTTP</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#whoami-no-tls-ingress-route.yaml </span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">traefik.containo.us/v1alpha1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">IngressRoute</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">whoami-ingress-web</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">entryPoints:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">web</span></span><br><span class="line">  <span class="attr">routes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">match:</span> <span class="string">Host(`192.168.0.2`)</span> <span class="string">&amp;&amp;</span> <span class="string">PathPrefix(`/notls`)</span></span><br><span class="line">      <span class="attr">kind:</span> <span class="string">Rule</span></span><br><span class="line">      <span class="attr">services:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">whoami</span></span><br><span class="line">          <span class="attr">port:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure>

<p>HTTPS</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 用 openssl 来创建一个自签名的证书</span></span><br><span class="line">openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout tls.key -out tls.crt -subj <span class="string">&quot;/CN=domain.example.com&quot;</span></span><br><span class="line"></span><br><span class="line">kubectl create secret tls whoami-tls --cert=tls.crt --key=tls.key</span><br></pre></td></tr></table></figure>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># whoami-tls-ingress-route.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">traefik.containo.us/v1alpha1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">IngressRoute</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">whoami-ingress-websecure</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">entryPoints:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">websecure</span></span><br><span class="line">  <span class="attr">routes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">match:</span> <span class="string">Host(`192.168.0.2`)</span> <span class="string">&amp;&amp;</span> <span class="string">PathPrefix(`/tls`)</span></span><br><span class="line">      <span class="attr">kind:</span> <span class="string">Rule</span></span><br><span class="line">      <span class="attr">services:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">whoami</span></span><br><span class="line">          <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">  <span class="attr">tls:</span></span><br><span class="line">    <span class="attr">secretName:</span> <span class="string">whoami-tls</span></span><br></pre></td></tr></table></figure>
<p>证书生成参考<a href="/2024/04/02/%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/k3s%E8%AF%81%E4%B9%A6%E7%AE%A1%E7%90%86/" title="K3s证书管理">k3s证书管理</a></p>
<p>TCP&#x2F;UDP<br>默认配置文件下，只有<code>traefik</code>(9000)、<code>web</code>(80)、<code>websecure</code>(443)以及<code>metrics</code>(9100)开放，如果想要反代MySQL tcp又想自定义端口的话，需要单独在配置文件中进行配置。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">traefik.containo.us/v1alpha1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">IngressRouteTCP</span> <span class="comment">#IngressRouteUDP</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">redis</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">devops</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">entryPoints:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">redis</span></span><br><span class="line">  <span class="attr">routes:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">match:</span> <span class="string">HostSNI(`*`)</span></span><br><span class="line">    <span class="attr">services:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">redis</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">6379</span></span><br></pre></td></tr></table></figure>

<p> <strong>TCP Routers与HTTP Routers的routes有所不同：</strong></p>
<ul>
<li>TCP Routers match采用HostSNI,而HTTP Routers match直接匹配Host。</li>
<li>TCP Routers只能定位TCP服务（不能定位HTTP服务）。</li>
<li>如果HTTP Routers和TCP Routers都侦听相同的入口点，则TCP Routers将在HTTP Routers之前应用。如果找不到与TCP Routers匹配的路由，则HTTP Routers将接管。</li>
</ul>
<p>参考</p>
<p>K3s版本 &gt; v.121(Traefik 2.x)</p>
<p><a href="https://zhuanlan.zhihu.com/p/471264503?utm_id=0">K3S 中 Traefik v2 安装及采坑纪实 - 知乎 (zhihu.com)</a></p>
<p><a href="https://blog.csdn.net/qf0129/article/details/127564258">k3s开启traefik的dashboard网页-CSDN博客</a></p>
<p><a href="https://www.cnblogs.com/k3s2019/p/12671777.html">Step by Step！教你如何在k3s集群上使用Traefik 2.x - k3s中文社区 - 博客园 (cnblogs.com)</a></p>
<p><a href="https://cloud.tencent.com/developer/article/2275318">traefik系列之一 | 简介、部署和配置-腾讯云开发者社区-腾讯云 (tencent.com)</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/431491328">还不会Traefik？看这篇文章就够了！ - 知乎 (zhihu.com)</a></p>
<p><a href="https://cloud.tencent.com/developer/article/2347486">k3s 使用 Letsencrypt 和 Traefik 完成 https 入口部署-腾讯云开发者社区-腾讯云 (tencent.com)</a></p>
<p>[Kubernetes环境Traefik部署与应用 - Tiscs - 博客园 (cnblogs.com)](<a href="https://www.cnblogs.com/tiscs/p/notes-k8s-traefik.html#:~:text=%E5%AE%89%E8%A3%85Traefik">https://www.cnblogs.com/tiscs/p/notes-k8s-traefik.html#:~:text=安装Traefik</a> 1 配置 Helm Repo helm repo add, … 3 其他准备工作 获取 traefik 服务的负载均衡器地址。 )</p>
<p><a href="https://cloud.tencent.com/developer/article/2014106">Traefik - Kubernetes 配置TCP&#x2F;HTTP服务-腾讯云开发者社区-腾讯云 (tencent.com)</a></p>
<p><a href="https://www.cnblogs.com/dandelion/p/14083023.html">cert-manager管理内网k8s开发环境证书 - hueidou163 - 博客园 (cnblogs.com)</a></p>
<p><a href="https://cloud.tencent.com/developer/article/2344889">Kubernetes (K8S)中Traefik路由(ingressRoute)-腾讯云开发者社区-腾讯云 (tencent.com)</a></p>
<p>Dashboard无法访问问题参考</p>
<p><a href="https://www.cnblogs.com/rancherlabs/p/16034240.html">如何在 K3s 中启用 Traefik Dashborad - RancherLabs - 博客园 (cnblogs.com)</a></p>
<p><a href="https://www.thriveread.com/expose-k3s-with-traefik-dashboard/">How to Expose and Enable K3s with Traefik Dashboard (thriveread.com)</a></p>
<p><a href="https://stackoverflow.com/questions/68565048/how-to-expose-traefik-v2-dashboard-in-k3d-k3s-via-configuration">kubernetes - How to expose traefik v2 dashboard in k3d&#x2F;k3s via configuration? - Stack Overflow</a></p>
<p><a href="https://segmentfault.com/a/1190000044820490">kubernetes - 云原生 07：改用 K3s，并使用 K3s 内置的 Traefik 做 Ingress 网关 - 小鲜 - SegmentFault 思否</a></p>
<p><a href="https://agou-ops.cn/post/k8s%E4%B8%AD%E4%BD%BF%E7%94%A8traefik/">K8s中使用traefik（基础） - AGou’s Blog</a></p>
]]></content>
      <categories>
        <category>容器技术</category>
      </categories>
      <tags>
        <tag>Kubernetes</tag>
        <tag>K3s</tag>
        <tag>Traefik</tag>
        <tag>Ingress</tag>
      </tags>
  </entry>
  <entry>
    <title>K3s配置内网域名解析</title>
    <url>/2024/07/20/%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/K3s%E9%85%8D%E7%BD%AE%E5%86%85%E7%BD%91%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90/</url>
    <content><![CDATA[<p>K3s 启动后，会自动帮我们安装好 CoreDNS，不需要手动安装。如果你想修改 CoreDNS 的配置，常用的有两种方式：</p>
<ul>
<li>直接修改 CoreDNS 的 configmap 来调整 CoreDNS 的参数，例如：<code>kubectl -n kube-system edit configmap coredns</code></li>
<li>修改 K3s manifests 中的 CoreDNS 配置文件，文件位置：<code>/var/lib/rancher/k3s/server/manifests/coredns.yaml</code></li>
</ul>
<p>这两种方式虽然简单，但都有相同的弊端：当你重启 K3s 服务或者升级 K3s 时，由于 K3s 会重新初始化 manifests 中的 CoreDNS 等配置，所以会覆盖掉你通过以上两种方式修改的 coredns 配置。</p>
<p>如果你想修改 K3s 中 CoreDNS 中的配置，并且持久生效的话，可以通过额外的 <code>coredns-custom</code> configmap 安装到 CoreDNS 容器中，并从包含的文件中导入覆盖和额外的 CoreDNS 配置。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">coredns-custom</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">log.override:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    log</span></span><br><span class="line"><span class="string"></span>  <span class="attr">example.server:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    example.io &#123;</span></span><br><span class="line"><span class="string">      errors</span></span><br><span class="line"><span class="string">      cache 30</span></span><br><span class="line"><span class="string">      hosts &#123;</span></span><br><span class="line"><span class="string">        192.168.0.2 test1.example.io # 内网域名映射地址</span></span><br><span class="line"><span class="string">        fallthrough</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br></pre></td></tr></table></figure>



<p>ConfigMap 的 name 一定刚要是 <code>coredns-custom</code> 才能够被 coredns 的 deployment 识别并挂载。</p>
<p>在其他Pod中验证CoreDNS配置是否生效</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl create deploy nginx --image=nginx:latest <span class="comment"># 创建deploy</span></span><br><span class="line">kubectl get pod -w <span class="comment"># 等待nginx状态变为running</span></span><br><span class="line">kubectl <span class="built_in">exec</span> -it ngix-***** -- /bin/bash <span class="comment"># 切入容器，注意容器ID与上一步中查看容器ID一致</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### 容器内操作</span></span><br><span class="line">ping test1.example.io </span><br><span class="line">nslookup test1.example.io</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>容器技术</category>
      </categories>
      <tags>
        <tag>Kubernetes</tag>
        <tag>K3s</tag>
        <tag>CoreDNS</tag>
        <tag>域名解析</tag>
      </tags>
  </entry>
  <entry>
    <title>KubeEdge</title>
    <url>/2022/07/27/%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/KubeEdge/</url>
    <content><![CDATA[<p><a href="https://www.cnblogs.com/tttlv/p/14397699.html">https://www.cnblogs.com/tttlv/p/14397699.html</a><br><a href="https://www.cnblogs.com/ltaodream/p/15135365.html">https://www.cnblogs.com/ltaodream/p/15135365.html</a><br><a href="https://blog.csdn.net/weixin_42142364/article/details/111084493">https://blog.csdn.net/weixin_42142364/article/details/111084493</a><br><a href="https://blog.csdn.net/Obese_Tiger/article/details/104741708?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522160378122119724836762566%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=160378122119724836762566&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~baidu_landing_v2~default-8-104741708.first_rank_ecpm_v3_pc_rank_v2&utm_term=kubeedge%E5%AE%89%E8%A3%85&spm=1018.2118.3001.4187">https://blog.csdn.net/Obese_Tiger/article/details/104741708?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522160378122119724836762566%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=160378122119724836762566&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~baidu_landing_v2~default-8-104741708.first_rank_ecpm_v3_pc_rank_v2&amp;utm_term=kubeedge%E5%AE%89%E8%A3%85&amp;spm=1018.2118.3001.4187</a><br><a href="https://blog.csdn.net/PinocchioNE/article/details/109337365">https://blog.csdn.net/PinocchioNE/article/details/109337365</a><br><a href="https://www.jianshu.com/p/c6fc46563cb6">https://www.jianshu.com/p/c6fc46563cb6</a><br><a href="https://www.dogfei.cn/archives/kubeedge#">https://www.dogfei.cn/archives/kubeedge#</a><br><a href="https://www.cnblogs.com/dream397/p/14628425.html">https://www.cnblogs.com/dream397/p/14628425.html</a><br><a href="https://blog.csdn.net/MSSC_/article/details/114866906">https://blog.csdn.net/MSSC_/article/details/114866906</a><br><a href="https://zhuanlan.zhihu.com/p/350335104">https://zhuanlan.zhihu.com/p/350335104</a><br><a href="https://www.cnblogs.com/kkbill/p/12600541.html">https://www.cnblogs.com/kkbill/p/12600541.html</a><br><a href="https://blog.csdn.net/weixin_38159695/article/details/118486461">https://blog.csdn.net/weixin_38159695/article/details/118486461</a></p>
]]></content>
      <categories>
        <category>容器技术</category>
      </categories>
  </entry>
  <entry>
    <title>Kubernetes</title>
    <url>/2022/07/27/%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Kubernetes/</url>
    <content><![CDATA[<p><a href="https://blog.csdn.net/IUNIQUE/article/details/121787708">https://blog.csdn.net/IUNIQUE/article/details/121787708</a><br><a href="https://www.jianshu.com/p/3de558d8b57a">https://www.jianshu.com/p/3de558d8b57a</a><br><a href="https://www.cnblogs.com/chalon/p/14840216.html">https://www.cnblogs.com/chalon/p/14840216.html</a><br><a href="https://blog.csdn.net/f95_sljz/article/details/105544338">https://blog.csdn.net/f95_sljz/article/details/105544338</a><br><a href="https://www.cnblogs.com/zhaobowen/p/13399708.html">https://www.cnblogs.com/zhaobowen/p/13399708.html</a><br><a href="https://www.cnblogs.com/UncleZhao/p/14646127.html">https://www.cnblogs.com/UncleZhao/p/14646127.html</a><br><a href="https://segmentfault.com/a/1190000021036626">https://segmentfault.com/a/1190000021036626</a><br><a href="https://www.cnblogs.com/ltaodream/p/15116711.html">https://www.cnblogs.com/ltaodream/p/15116711.html</a><br><a href="https://knner.wang/2019/11/13/docker-io-gcr-io-k8s-gcr-io-quay-io-Chinese-source.html">https://knner.wang/2019/11/13/docker-io-gcr-io-k8s-gcr-io-quay-io-Chinese-source.html</a><br><a href="https://www.cnblogs.com/kevingrace/p/12778066.html">https://www.cnblogs.com/kevingrace/p/12778066.html</a><br><a href="https://www.cnblogs.com/hujinzhong/p/14995169.html">https://www.cnblogs.com/hujinzhong/p/14995169.html</a><br><a href="https://www.cnblogs.com/chenyishi/category/1359251.html">https://www.cnblogs.com/chenyishi/category/1359251.html</a><br><a href="https://oldtang.com/1772.html">https://oldtang.com/1772.html</a><br><a href="https://www.kubernetes.org.cn/7315.html">https://www.kubernetes.org.cn/7315.html</a><br><a href="https://blog.csdn.net/networken/article/details/84571373">https://blog.csdn.net/networken/article/details/84571373</a><br><a href="https://blog.csdn.net/JENREY/article/details/84205838">https://blog.csdn.net/JENREY/article/details/84205838</a><br><a href="https://blog.csdn.net/ggggyj/article/details/104922023">https://blog.csdn.net/ggggyj/article/details/104922023</a><br><a href="https://zhuanlan.zhihu.com/p/109803657">https://zhuanlan.zhihu.com/p/109803657</a><br><a href="https://www.cnblogs.com/cptao/p/10912644.html">https://www.cnblogs.com/cptao/p/10912644.html</a><br><a href="https://blog.51cto.com/billy98/2350660">https://blog.51cto.com/billy98/2350660</a><br><a href="https://z.itpub.net/article/detail/68E9894E9257CC55D0AD3643AD3E9C89">https://z.itpub.net/article/detail/68E9894E9257CC55D0AD3643AD3E9C89</a><br><a href="https://blog.csdn.net/w13657909078/article/details/120141490?spm=1001.2014.3001.5501">https://blog.csdn.net/w13657909078/article/details/120141490?spm=1001.2014.3001.5501</a><br><a href="https://blog.csdn.net/w13657909078/article/details/120342636?spm=1001.2101.3001.6650.7&utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-7.pc_relevant_default&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-7.pc_relevant_default&utm_relevant_index=10">https://blog.csdn.net/w13657909078/article/details/120342636?spm=1001.2101.3001.6650.7&amp;utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-7.pc_relevant_default&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-7.pc_relevant_default&amp;utm_relevant_index=10</a></p>
<p><a href="https://docs.microsoft.com/zh-cn/learn/modules/dotnet-deploy-microservices-kubernetes/">将 .NET 微服务部署到 Kubernetes - Learn | Microsoft Docs</a></p>
<p><a href="https://cloud.tencent.com/developer/article/1908935">Kubernetes + .NET Core 的落地实践 - 腾讯云开发者社区-腾讯云</a></p>
<p><a href="https://www.cnblogs.com/harlanzhang/category/1362182.html">https://www.cnblogs.com/harlanzhang/category/1362182.html</a><br><a href="https://cloud.tencent.com/developer/article/1450346">https://cloud.tencent.com/developer/article/1450346</a><br><a href="https://www.cnblogs.com/dingcong1201/p/15472764.html#1-minikube">https://www.cnblogs.com/dingcong1201/p/15472764.html#1-minikube</a><br><a href="https://yiqisoft.cn/blog/server-side/171.html">https://yiqisoft.cn/blog/server-side/171.html</a><br><a href="https://blog.csdn.net/lwkhdx/article/details/103879460">https://blog.csdn.net/lwkhdx/article/details/103879460</a><br><a href="https://www.helloworld.net/p/ObLHGeiALU2D">https://www.helloworld.net/p/ObLHGeiALU2D</a><br><a href="https://blog.51cto.com/lvzhenjiang/2473866">https://blog.51cto.com/lvzhenjiang/2473866</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/642585379">helm3实战教程 | helm3常用命令和部署应用实战案例 - 知乎</a></p>
<p><a href="https://www.cnblogs.com/tylerzhou/p/11136107.html">kubernetes实战篇之helm完整示例 - 周国通 - 博客园</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/379127137?utm_id=0">利用Kubernetes搭建便携式开发环境之MySQL和Redis - 知乎</a></p>
<p><a href="https://www.cnblogs.com/pengpengboshi/p/15927879.html">Kubernetes使用helm部署单机版mysql(使用hostPath数据卷) - Sureing - 博客园</a></p>
<p><a href="https://www.emqx.com/zh/blog/emqx-mqtt-broker-k8s-cluster">从零开始建立 EMQX MQTT 服务器的 K8S 集群 | EMQ</a></p>
<p><a href="https://www.cnblogs.com/hujinzhong/p/14999877.html">Kubernetes集群部署Prometheus和Grafana - 运维人在路上 - 博客园</a></p>
<p><a href="https://www.cnblogs.com/zhanglianghhh/p/13743024.html">Kubernetes K8S之存储Secret详解 - 踏歌行666 - 博客园</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/657034495?utm_id=0">DevOps笔记 - k3s 默认ingress 配置 - 知乎</a></p>
<p><a href="https://juejin.cn/post/7088526899239976996">如何用NFS共享ZFS文件系统——详细教程 - 掘金</a></p>
]]></content>
      <categories>
        <category>容器技术</category>
      </categories>
  </entry>
  <entry>
    <title>Kubernetes PV/PVC配置模板</title>
    <url>/2024/04/11/%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Kubernetes%E5%AD%98%E5%82%A8%E5%8D%B7%E6%A8%A1%E6%9D%BF/</url>
    <content><![CDATA[<p>本地路径映射（HostPath）</p>
<blockquote>
<p>HostPath 卷存在许多安全风险，最佳做法是尽可能避免使用 HostPath。 当必须使用 HostPath 卷时，它的范围应仅限于所需的文件或目录，并以只读方式挂载。</p>
</blockquote>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">test-pd</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">registry.k8s.io/test-webserver</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">test-container</span></span><br><span class="line">    <span class="attr">volumeMounts:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/test-pd</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">test-volume</span></span><br><span class="line">  <span class="attr">volumes:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">test-volume</span></span><br><span class="line">    <span class="attr">hostPath:</span></span><br><span class="line">      <span class="comment"># 宿主机上目录位置</span></span><br><span class="line">      <span class="attr">path:</span> <span class="string">/data</span></span><br><span class="line">      <span class="comment"># 此字段为可选</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">Directory</span></span><br></pre></td></tr></table></figure>

<p>支持的 <code>type</code> 值如下:</p>
<table>
<thead>
<tr>
<th align="left">取值</th>
<th align="left">行为</th>
</tr>
</thead>
<tbody><tr>
<td align="left"></td>
<td align="left">空字符串（默认）用于向后兼容，这意味着在安装 hostPath 卷之前不会执行任何检查。</td>
</tr>
<tr>
<td align="left"><code>DirectoryOrCreate</code></td>
<td align="left">如果在给定路径上什么都不存在，那么将根据需要创建空目录，权限设置为 0755，具有与 kubelet 相同的组和属主信息。</td>
</tr>
<tr>
<td align="left"><code>Directory</code></td>
<td align="left">在给定路径上必须存在的目录。</td>
</tr>
<tr>
<td align="left"><code>FileOrCreate</code></td>
<td align="left">如果在给定路径上什么都不存在，那么将在那里根据需要创建空文件，权限设置为 0644，具有与 kubelet 相同的组和所有权。</td>
</tr>
<tr>
<td align="left"><code>File</code></td>
<td align="left">在给定路径上必须存在的文件。</td>
</tr>
<tr>
<td align="left"><code>Socket</code></td>
<td align="left">在给定路径上必须存在的 UNIX 套接字。</td>
</tr>
<tr>
<td align="left"><code>CharDevice</code></td>
<td align="left">在给定路径上必须存在的字符设备。</td>
</tr>
<tr>
<td align="left"><code>BlockDevice</code></td>
<td align="left">在给定路径上必须存在的块设备。</td>
</tr>
</tbody></table>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">storage.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">StorageClass</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">example-vol-default</span></span><br><span class="line"><span class="attr">provisioner:</span> <span class="string">vendor-name.example</span></span><br></pre></td></tr></table></figure>



<p>local</p>
<blockquote>
<p><code>local</code> 卷只能用作静态创建的持久卷。不支持动态配置。</p>
<p>与 <code>hostPath</code> 卷相比，<code>local</code> 卷能够以持久和可移植的方式使用，而无需手动将 Pod 调度到节点。系统通过查看 PersistentVolume 的节点亲和性配置，就能了解卷的节点约束。</p>
</blockquote>
<p>使用 <code>local</code> 卷时，你需要设置 PersistentVolume 对象的 <code>nodeAffinity</code> 字段。 Kubernetes 调度器使用 PersistentVolume 的 <code>nodeAffinity</code> 信息来将使用 <code>local</code> 卷的 Pod 调度到正确的节点。</p>
<p>PersistentVolume 对象的 <code>volumeMode</code> 字段可被设置为 “Block” （而不是默认值 “Filesystem”），以将 <code>local</code> 卷作为原始块设备暴露出来。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PersistentVolume</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">example-pv</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">capacity:</span></span><br><span class="line">    <span class="attr">storage:</span> <span class="string">100Gi</span></span><br><span class="line">  <span class="attr">volumeMode:</span> <span class="string">Filesystem</span></span><br><span class="line">  <span class="attr">accessModes:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">ReadWriteOnce</span></span><br><span class="line">  <span class="attr">persistentVolumeReclaimPolicy:</span> <span class="string">Delete</span></span><br><span class="line">  <span class="attr">storageClassName:</span> <span class="string">local-storage</span></span><br><span class="line">  <span class="attr">local:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">/mnt/disks/ssd1</span></span><br><span class="line">  <span class="attr">nodeAffinity:</span></span><br><span class="line">    <span class="attr">required:</span></span><br><span class="line">      <span class="attr">nodeSelectorTerms:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">matchExpressions:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">kubernetes.io/hostname</span></span><br><span class="line">          <span class="attr">operator:</span> <span class="string">In</span></span><br><span class="line">          <span class="attr">values:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">example-node</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>





<p>NFS映射</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>

<p>Minio</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>

<p>Ceph</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>容器技术</category>
      </categories>
      <tags>
        <tag>Kubernetes</tag>
        <tag>K3s</tag>
        <tag>PV</tag>
        <tag>PVC</tag>
      </tags>
  </entry>
  <entry>
    <title>Kubernetes搭建</title>
    <url>/2020/12/29/%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Kubernetes%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<p><a href="https://kubernetes.io/zh/docs/home/">官方文档(中文)</a></p>
<table>
<thead>
<tr>
<th>节点名称</th>
<th>节点IP</th>
<th>配置</th>
<th>系统版本</th>
</tr>
</thead>
<tbody><tr>
<td>VIP</td>
<td>192.168.50.220</td>
<td>虚拟IP</td>
<td></td>
</tr>
<tr>
<td>k8s-master-221</td>
<td>192.168.50.221</td>
<td>4核 2G</td>
<td>debian 11</td>
</tr>
<tr>
<td>k8s-master-222</td>
<td>192.168.50.222</td>
<td>4核 2G</td>
<td>debian 11</td>
</tr>
<tr>
<td>k8s-master-223</td>
<td>192.168.50.223</td>
<td>4核 2G</td>
<td>debian 11</td>
</tr>
<tr>
<td>k8s-node-224</td>
<td>192.168.50.224</td>
<td>4核 2G</td>
<td>debian 11</td>
</tr>
<tr>
<td>k8s-node-225</td>
<td>192.168.50.225</td>
<td>4核 2G</td>
<td>debian 11</td>
</tr>
</tbody></table>
<h3 id="主机配置"><a href="#主机配置" class="headerlink" title="主机配置"></a>主机配置</h3><h4 id="时间同步"><a href="#时间同步" class="headerlink" title="时间同步"></a>时间同步</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="配置-hostname"><a href="#配置-hostname" class="headerlink" title="配置 hostname"></a>配置 hostname</h4><p><strong>注意节名称不能重复</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hostnamectl --static set-hostname k8s-master-221</span><br></pre></td></tr></table></figure>

<h4 id="配置防火墙"><a href="#配置防火墙" class="headerlink" title="配置防火墙"></a>配置防火墙</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">service iptables stop </span><br><span class="line"></span><br><span class="line">iptables -F</span><br><span class="line"></span><br><span class="line">systemctl stop firewalld &amp;&amp; systemctl <span class="built_in">disable</span> firewalld</span><br></pre></td></tr></table></figure>
<p>如果需要打开防火墙，执行以下配置</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># master节点执行</span></span><br><span class="line">ufw allow 6443/tcp</span><br><span class="line">ufw allow 2379/tcp</span><br><span class="line">ufw allow 2380/tcp</span><br><span class="line">ufw allow 10250/tcp</span><br><span class="line">ufw allow 10251/tcp</span><br><span class="line">ufw allow 10252/tcp</span><br><span class="line">ufw allow 10255/tcp</span><br><span class="line">ufw reload</span><br><span class="line"></span><br><span class="line"><span class="comment"># worker节点执行</span></span><br><span class="line">ufw allow 10250/tcp</span><br><span class="line">ufw allow 30000:32767/tcp</span><br><span class="line">ufw reload</span><br></pre></td></tr></table></figure>

<h4 id="关闭交换分区"><a href="#关闭交换分区" class="headerlink" title="关闭交换分区"></a>关闭交换分区</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">swapoff -a</span><br><span class="line"><span class="built_in">set</span> -ri <span class="string">&#x27;s/.*swap.*/#&amp;/&#x27;</span> /etc/fstab</span><br></pre></td></tr></table></figure>
<p>若需允许交换分区参考<a href="https://kubernetes.io/zh-cn/docs/setup/production-environment/tools/kubeadm/install-kubeadm/">官方文档</a> 交换分区的配置</p>
<h4 id="配置hosts"><a href="#配置hosts" class="headerlink" title="配置hosts"></a>配置hosts</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt;&gt; /etc/hosts &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">192.168.50.221 k8s-master-221</span></span><br><span class="line"><span class="string">192.168.50.222 k8s-master-222</span></span><br><span class="line"><span class="string">192.168.50.223 k8s-master-223</span></span><br><span class="line"><span class="string">192.168.50.224 k8s-worker-224</span></span><br><span class="line"><span class="string">192.168.50.225 k8s-worker-225</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure>

<h4 id="开启-bridge-网桥过滤功能"><a href="#开启-bridge-网桥过滤功能" class="headerlink" title="开启 bridge 网桥过滤功能"></a>开启 bridge 网桥过滤功能</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 桥接的ipv4流量转到iptables</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt; <span class="string">EOF | sudo tee /etc/modules-load.d/k8s.conf</span></span><br><span class="line"><span class="string">overlay</span></span><br><span class="line"><span class="string">br_netfilter</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">sudo</span> modprobe overlay</span><br><span class="line"><span class="built_in">sudo</span> modprobe br_netfilter</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置所需的 sysctl 参数,参数在重新启动后保持不变</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt; <span class="string">EOF | sudo tee /etc/sysctl.d/k8s.conf</span></span><br><span class="line"><span class="string">net.bridge.bridge-nf-call-iptables  = 1 # 开启网桥模式(必须)</span></span><br><span class="line"><span class="string">net.bridge.bridge-nf-call-ip6tables = 1 # 开启网桥模式(必须)</span></span><br><span class="line"><span class="string">net.ipv4.ip_forward                 = 1 # 转发模式(默认开启)</span></span><br><span class="line"><span class="string">vm.panic_on_oom                     = 0 # 开启OOM(默认开启)</span></span><br><span class="line"><span class="string">vm.swappiness                       = 0 # 禁止使用swap空间</span></span><br><span class="line"><span class="string">vm.overcommit_memory                = 1 # 不检查物理内存是否够用</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 应用 sysctl 参数而不重新启动</span></span><br><span class="line"><span class="built_in">sudo</span> sysctl --system</span><br></pre></td></tr></table></figure>

<h4 id="配置-IPVS"><a href="#配置-IPVS" class="headerlink" title="配置 IPVS"></a>配置 IPVS</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">modprobe br_netfilter</span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> &gt; /etc/sysconfig/modules/ipvs.modules &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">#!/bin/bash</span></span><br><span class="line"><span class="string">modprobe -- ip_vs</span></span><br><span class="line"><span class="string">modprobe -- ip_vs_rr</span></span><br><span class="line"><span class="string">modprobe -- ip_vs_wrr</span></span><br><span class="line"><span class="string">modprobe -- ip_vs_sh</span></span><br><span class="line"><span class="string">modprobe -- nf_conntrack_ipv</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="安装工具"><a href="#安装工具" class="headerlink" title="安装工具"></a>安装工具</h3><h4 id="安装-Containerd"><a href="#安装-Containerd" class="headerlink" title="安装 Containerd"></a>安装 Containerd</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装</span></span><br><span class="line">apt update </span><br><span class="line">apt install -y containerd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 导出默认配置</span></span><br><span class="line">containerd config default | <span class="built_in">sudo</span> <span class="built_in">tee</span> /etc/containerd/config.toml &gt;/dev/null 2&gt;&amp;1</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>设置<code>cgroupdriver</code>为<code>systemd</code>,编辑 <code>/etc/containerd/config.toml</code> 文件，找到 <code>[plugins.&quot;io.containerd.grpc.v1.cri&quot;.containerd.runtimes.runc.options]</code> 部分，添加一行内容：<code>SystemdCgroup = true</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -i <span class="string">&#x27;s/SystemdCgroup \= false/SystemdCgroup \= true/g&#x27;</span> /etc/containerd/config.toml</span><br></pre></td></tr></table></figure>

<img src="/2020/12/29/%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Kubernetes%E6%90%AD%E5%BB%BA/IMG-20250804110102409.png" class="">

<p>重启containerd并设置开机启动</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart containerd</span><br><span class="line">systemctl <span class="built_in">enable</span> containerd</span><br></pre></td></tr></table></figure>

<h4 id="安装-keadm-kubelete-kubectl"><a href="#安装-keadm-kubelete-kubectl" class="headerlink" title="安装 keadm,kubelete,kubectl"></a>安装 keadm,kubelete,kubectl</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 添加安装源</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装</span></span><br><span class="line">apt update </span><br><span class="line">apt install -y kubelet kubeadm kubectl </span><br><span class="line">apt-mark hold kubelet kubeadm kubectl</span><br></pre></td></tr></table></figure>
<h3 id="部署高可用-仅-master-节点"><a href="#部署高可用-仅-master-节点" class="headerlink" title="部署高可用(仅 master 节点)"></a>部署高可用(仅 master 节点)</h3><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install keepalived haproxy</span><br></pre></td></tr></table></figure>

<h4 id="修改haproxy配置"><a href="#修改haproxy配置" class="headerlink" title="修改haproxy配置"></a>修改haproxy配置</h4><p><code>/etc/haproxy/haproxy.cfg</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">global</span><br><span class="line">  maxconn  2000</span><br><span class="line">  ulimit-n  16384</span><br><span class="line">  log  127.0.0.1 local0 err</span><br><span class="line">  stats timeout 30s</span><br><span class="line"></span><br><span class="line">defaults</span><br><span class="line">  log global</span><br><span class="line">  mode  http</span><br><span class="line">  option  httplog</span><br><span class="line">  timeout connect 5000</span><br><span class="line">  timeout client  50000</span><br><span class="line">  timeout server  50000</span><br><span class="line">  timeout http-request 15s</span><br><span class="line">  timeout http-keep-alive 15s</span><br><span class="line"></span><br><span class="line">frontend monitor-in</span><br><span class="line">  bind *:33305</span><br><span class="line">  mode http</span><br><span class="line">  option httplog</span><br><span class="line">  monitor-uri /monitor</span><br><span class="line"></span><br><span class="line">frontend k8s-master</span><br><span class="line">  bind 0.0.0.0:16443</span><br><span class="line">  bind 127.0.0.1:16443</span><br><span class="line">  mode tcp</span><br><span class="line">  option tcplog</span><br><span class="line">  tcp-request inspect-delay 5s</span><br><span class="line">  default_backend k8s-master</span><br><span class="line"></span><br><span class="line">backend k8s-master</span><br><span class="line">  mode tcp</span><br><span class="line">  option tcplog</span><br><span class="line">  option tcp-check</span><br><span class="line">  balance roundrobin</span><br><span class="line">  default-server inter 10s downinter 5s rise 2 fall 2 slowstart 60s maxconn 250 maxqueue 256 weight 100</span><br><span class="line">  server k8s-master1	172.16.12.111:6443  check  </span><br><span class="line">  server k8s-master2	172.16.12.112:6443  check</span><br><span class="line">  server k8s-master3	172.16.12.113:6443  check</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="配置-keepalived"><a href="#配置-keepalived" class="headerlink" title="配置 keepalived"></a>配置 keepalived</h4><blockquote>
<p>interface         # 网卡名称<br>mcast_src_ip      # 节点ip<br>virtual_ipaddress # vip地址</p>
</blockquote>
<p>k8s-master-221配置文件<code>/etc/keepalived/keepalived.conf</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">! Configuration File for keepalived</span><br><span class="line">global_defs &#123;</span><br><span class="line">    router_id LVS_DEVEL</span><br><span class="line">script_user root</span><br><span class="line">    enable_script_security</span><br><span class="line">&#125;</span><br><span class="line">vrrp_script chk_apiserver &#123;</span><br><span class="line">    script &quot;/etc/keepalived/check_apiserver.sh&quot; #健康检查脚本</span><br><span class="line">    interval 5</span><br><span class="line">    weight -5</span><br><span class="line">    fall 2  </span><br><span class="line">    rise 1</span><br><span class="line">&#125;</span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state MASTER					#高可用主1</span><br><span class="line">    interface eth0					#网卡名称</span><br><span class="line">    mcast_src_ip 192.168.50.221		#该节点 IP</span><br><span class="line">    virtual_router_id 51</span><br><span class="line">    priority 100				    #设置最高级优先级</span><br><span class="line">    advert_int 2</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass K8SHA_KA_AUTH</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        192.168.50.220			    #vip地址</span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;</span><br><span class="line">       chk_apiserver</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>k8s-master-222配置文件<code>/etc/keepalived/keepalived.conf</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">! Configuration File for keepalived</span><br><span class="line">global_defs &#123;</span><br><span class="line">    router_id LVS_DEVEL</span><br><span class="line">script_user root</span><br><span class="line">    enable_script_security</span><br><span class="line">&#125;</span><br><span class="line">vrrp_script chk_apiserver &#123;</span><br><span class="line">    script &quot;/etc/keepalived/check_apiserver.sh&quot;</span><br><span class="line">    interval 5</span><br><span class="line">    weight -5</span><br><span class="line">    fall 2  </span><br><span class="line">    rise 1</span><br><span class="line">&#125;</span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state BACKUP					#高可用 从1</span><br><span class="line">    interface ens33					#网卡名称</span><br><span class="line">    mcast_src_ip 192.168.50.222	    #该节点 IP</span><br><span class="line">    virtual_router_id 51</span><br><span class="line">    priority 50				        #设置优先级</span><br><span class="line">    advert_int 2</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass K8SHA_KA_AUTH</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        192.168.50.220			    #vip地址</span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;</span><br><span class="line">       chk_apiserver</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>k8s-master-222配置文件<code>/etc/keepalived/keepalived.conf</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">! Configuration File for keepalived</span><br><span class="line">global_defs &#123;</span><br><span class="line">    router_id LVS_DEVEL</span><br><span class="line">script_user root</span><br><span class="line">    enable_script_security</span><br><span class="line">&#125;</span><br><span class="line">vrrp_script chk_apiserver &#123;</span><br><span class="line">    script &quot;/etc/keepalived/check_apiserver.sh&quot;</span><br><span class="line">    interval 5</span><br><span class="line">    weight -5</span><br><span class="line">    fall 2  </span><br><span class="line">    rise 1</span><br><span class="line">&#125;</span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state BACKUP					#高可用从2</span><br><span class="line">    interface ens33					#网卡名称</span><br><span class="line">    mcast_src_ip 192.168.50.223		#该节点 IP</span><br><span class="line">    virtual_router_id 51</span><br><span class="line">    priority 49				        #设置优先级</span><br><span class="line">    advert_int 2</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass K8SHA_KA_AUTH</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        192.168.50.220			    #vip地址</span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;</span><br><span class="line">       chk_apiserver</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>健康检查脚本 <code>/etc/keepalived/check_apiserver.sh</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">err=0</span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> $(<span class="built_in">seq</span> 1 3);<span class="keyword">do</span></span><br><span class="line">    check_code=$(pgrep haproxy)</span><br><span class="line">    <span class="keyword">if</span> [[ <span class="variable">$check_code</span> == <span class="string">&quot;&quot;</span> ]]; <span class="keyword">then</span></span><br><span class="line">        err=$(<span class="built_in">expr</span> <span class="variable">$err</span> + 1)</span><br><span class="line">        <span class="built_in">sleep</span> 1</span><br><span class="line">        <span class="built_in">continue</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        err=0</span><br><span class="line">        <span class="built_in">break</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$err</span> != <span class="string">&quot;0&quot;</span> ]]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;systemctl stop keepalived&quot;</span></span><br><span class="line">    /usr/bin/systemctl stop keepalived</span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">exit</span> 0</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>
<p>给监测脚本添加执行权限</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chmod +x /etc/keepalived/check_apiserver.sh</span><br></pre></td></tr></table></figure>
<p>启动keepalive和haproxy</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line"><span class="comment"># 启动并设置开机启动</span></span><br><span class="line"><span class="comment"># systemctl enable --now haproxy</span></span><br><span class="line">systemctl start haproxy &amp;&amp; systemctl <span class="built_in">enable</span> haproxy</span><br><span class="line"><span class="comment"># systemctl enable --now keepalived</span></span><br><span class="line">systemctl start keepalived &amp;&amp; systemctl enbale keepalived</span><br></pre></td></tr></table></figure>
<h4 id="测试vip漂移"><a href="#测试vip漂移" class="headerlink" title="测试vip漂移"></a>测试vip漂移</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看ip与vip</span></span><br><span class="line">hostname -I</span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试vip的16443端口是否通</span></span><br><span class="line">nc -v 192.168.50.220 16443</span><br></pre></td></tr></table></figure>

<h3 id="初始化集群"><a href="#初始化集群" class="headerlink" title="初始化集群"></a>初始化集群</h3><h4 id="拉取镜像"><a href="#拉取镜像" class="headerlink" title="拉取镜像"></a>拉取镜像</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看需要的镜像文件</span></span><br><span class="line">kubeadm config images list </span><br><span class="line"></span><br><span class="line"><span class="comment"># 拉取镜像</span></span><br><span class="line">kubeadm config images pull </span><br></pre></td></tr></table></figure>

<h4 id="master-节点初始化"><a href="#master-节点初始化" class="headerlink" title="master 节点初始化"></a>master 节点初始化</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 导出默认初始化配置</span></span><br><span class="line">kubeadm config <span class="built_in">print</span> init-defaults &gt; kubeadm-config.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># token过期后生成信息token</span></span><br><span class="line">kubeadm token create --print-join-command</span><br></pre></td></tr></table></figure>

<h4 id="master-节点加入集群"><a href="#master-节点加入集群" class="headerlink" title="master 节点加入集群"></a>master 节点加入集群</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># master节点需要生成certificate-key</span></span><br><span class="line">kubeadm init --control-plane-endpoint=192.168.50.220:16443</span><br><span class="line"></span><br><span class="line">kubeadm <span class="built_in">join</span> 192.168.50.220:16443 --token &#123;token&#125; \</span><br><span class="line">    --discovery-token-ca-cert-hash &#123;&#125; \</span><br><span class="line">    --control-plane --certificate-key &#123;&#125;</span><br></pre></td></tr></table></figure>

<h4 id="worker-节点加入集群"><a href="#worker-节点加入集群" class="headerlink" title="worker 节点加入集群"></a>worker 节点加入集群</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubeadm <span class="built_in">join</span> 192.168.50.220:16643 --token &#123;token&#125; \</span><br><span class="line">    --discovery-token-ca-cert-hash &#123;&#125; </span><br></pre></td></tr></table></figure>

<p>从集群种移除节点</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kubectl delete node &#123;node-name&#125;</span><br></pre></td></tr></table></figure>

<h4 id="配置环境变量，用于访问集群"><a href="#配置环境变量，用于访问集群" class="headerlink" title="配置环境变量，用于访问集群"></a>配置环境变量，用于访问集群</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &lt;&lt; <span class="string">EOF &gt;&gt; ~/.bashrc</span></span><br><span class="line"><span class="string">export KUBECONFIG=/etc/kubernetes/admin/conf</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure>
<p>查看集群节点状态</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看节点状态</span></span><br><span class="line">kubectl get nodes</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看系统组件</span></span><br><span class="line">kubectl get all -n kube-system -o wide</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="安装网络组件-只在master-221节点操作"><a href="#安装网络组件-只在master-221节点操作" class="headerlink" title="安装网络组件(只在master-221节点操作)"></a>安装网络组件(只在master-221节点操作)</h4><p>Calico<br>Flannel</p>
<h4 id="去除-master节点污点"><a href="#去除-master节点污点" class="headerlink" title="去除 master节点污点"></a>去除 master节点污点</h4><p>如果你打算让Master节点也参与到平常的Pod调度(生产环境一般不会这样做，以保证master节点的稳定性)，那么你需要使用以下命令将Master节点上的 taint(污点标记)解除</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl taint nodes --all node-role.kubernetes.io/master-</span><br></pre></td></tr></table></figure>

<p>最后我们使用以下命令查看当前集群的状态，发现Scheduler和Controller Manager组件处理不健康状态：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl get cs</span><br></pre></td></tr></table></figure>
<p>解决上述问题需要将每个Master节点上的 &#x2F;etc&#x2F;kubernetes&#x2F;manifests&#x2F;kube-scheduler.yaml 和 &#x2F;etc&#x2F;kubernetes&#x2F;manifests&#x2F;kube-controller-manager.yaml 文件中的- –port&#x3D;0注释掉,然后重启一下各Master节点上的kubelet即可.</p>
<h4 id="测试集群"><a href="#测试集群" class="headerlink" title="测试集群"></a>测试集群</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl create deployment nginx --image nginx --replicas 2</span><br><span class="line">kubectl expose deployment nginx --name nginx --<span class="built_in">type</span> NodePort --port 80 --target-port 80 --node-port 8080</span><br><span class="line"></span><br><span class="line">curl http://192.168.50.220:8080</span><br></pre></td></tr></table></figure>


<p>参考<br><a href="https://zhuanlan.zhihu.com/p/587922250">如何用 Kubeadm 在 Debian 11 上安装 Kubernetes 集群 | Linux 中国 - 知乎 (zhihu.com)</a><br><a href="https://segmentfault.com/a/1190000040132460">Kubernetes多主多从高可用集群部署 - 个人文章 - SegmentFault 思否</a><br><a href="https://blog.csdn.net/weixin_53667818/article/details/132702544">搭建多主节点k8s高可用集群(三主两从一VIP）_kubernetes部署多主多从集群-CSDN博客</a><br><a href="https://segmentfault.com/a/1190000045271028">github - 基于Ubuntu22.04部署KubeEdge-v1.18.0环境 - 云原生_KubeEdge - SegmentFault 思否</a></p>
]]></content>
      <categories>
        <category>容器技术</category>
      </categories>
      <tags>
        <tag>Kubernetes</tag>
        <tag>环境搭建</tag>
      </tags>
  </entry>
  <entry>
    <title>Kubernetes安装Traefik</title>
    <url>/2024/09/26/%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Kubernetes%E9%83%A8%E7%BD%B2Traefik/</url>
    <content><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">helm repo add traefik https://helm.traefik.io/traefik</span><br><span class="line">helm repo update </span><br><span class="line">helm upgrade traefik traefik/traefik \</span><br><span class="line">    --install --create-namespace \</span><br><span class="line">    --namespace=traefik </span><br><span class="line"></span><br><span class="line"><span class="comment"># 导出配置文件</span></span><br><span class="line">helm show values traefik/traefik &gt; traefik-values.yaml</span><br></pre></td></tr></table></figure>

<h2 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h2><p>traefik-values.yaml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Default values for Traefik</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># This is a YAML-formatted file.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Declare variables to be passed into templates</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="attr">image:</span>  <span class="comment"># @schema additionalProperties: false</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># -- Traefik image host registry</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">registry:</span> <span class="string">docker.io</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># -- Traefik image repository</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">traefik</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># -- defaults to appVersion</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">tag:</span>  <span class="comment"># @schema type:[string, null]</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># -- Traefik image pull policy</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">pullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment"># -- Add additional label to all resources</span></span><br><span class="line"></span><br><span class="line"><span class="attr">commonLabels:</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="attr">deployment:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># -- Enable deployment</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># -- Deployment or DaemonSet</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># -- Number of pods of the deployment (only applies when kind == Deployment)</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># -- Number of old history to retain to allow rollback (If not set, default Kubernetes value is set to 10)</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">revisionHistoryLimit:</span>  <span class="comment"># @schema type:[integer, null];minimum:0</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># -- Amount of time (in seconds) before Kubernetes will send the SIGKILL signal if Traefik does not shut down</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">terminationGracePeriodSeconds:</span> <span class="number">60</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># -- The minimum number of seconds Traefik needs to be up and running before the DaemonSet/Deployment controller considers it available</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">minReadySeconds:</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">## -- Override the liveness/readiness port. This is useful to integrate traefik</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">## with an external Load Balancer that performs healthchecks.</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">## Default: ports.traefik.port</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">healthchecksPort:</span>  <span class="comment"># @schema type:[integer, null];minimum:0</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">## -- Override the liveness/readiness host. Useful for getting ping to respond on non-default entryPoint.</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">## Default: ports.traefik.hostIP if set, otherwise Pod IP</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">healthchecksHost:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">## -- Override the liveness/readiness scheme. Useful for getting ping to</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">## respond on websecure entryPoint.</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">healthchecksScheme:</span>   <span class="comment"># @schema enum:[HTTP, HTTPS, null]; type:[string, null]; default: HTTP</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">## -- Override the readiness path.</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">## Default: /ping</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">readinessPath:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># -- Override the liveness path.</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Default: /ping</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">livenessPath:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># -- Additional deployment annotations (e.g. for jaeger-operator sidecar injection)</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">annotations:</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment"># -- Additional deployment labels (e.g. for filtering deployment by custom labels)</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">labels:</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment"># -- Additional pod annotations (e.g. for mesh injection or prometheus scraping)</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># It supports templating. One can set it with values like traefik/name: &#x27;&#123;&#123; template &quot;traefik.name&quot; . &#125;&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">podAnnotations:</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment"># -- Additional Pod labels (e.g. for filtering Pod by custom labels)</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">podLabels:</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment"># -- Additional containers (e.g. for metric offloading sidecars)</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">additionalContainers:</span> []</span><br><span class="line"></span><br><span class="line">  <span class="comment"># https://docs.datadoghq.com/developers/dogstatsd/unix_socket/?tab=host</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># - name: socat-proxy</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#   image: alpine/socat:1.0.5</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#   args: [&quot;-s&quot;, &quot;-u&quot;, &quot;udp-recv:8125&quot;, &quot;unix-sendto:/socket/socket&quot;]</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#   volumeMounts:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#     - name: dsdsocket</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#       mountPath: /socket</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># -- Additional volumes available for use with initContainers and additionalContainers</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">additionalVolumes:</span> []</span><br><span class="line"></span><br><span class="line">  <span class="comment"># - name: dsdsocket</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#   hostPath:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#     path: /var/run/statsd-exporter</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># -- Additional initContainers (e.g. for setting file permission as shown below)</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">initContainers:</span> []</span><br><span class="line"></span><br><span class="line">  <span class="comment"># The &quot;volume-permissions&quot; init container is required if you run into permission issues.</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Related issue: https://github.com/traefik/traefik-helm-chart/issues/396</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># - name: volume-permissions</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#   image: busybox:latest</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#   command: [&quot;sh&quot;, &quot;-c&quot;, &quot;touch /data/acme.json; chmod -v 600 /data/acme.json&quot;]</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#   volumeMounts:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#     - name: data</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#       mountPath: /data</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># -- Use process namespace sharing</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">shareProcessNamespace:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># -- Custom pod DNS policy. Apply if `hostNetwork: true`</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">dnsPolicy:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># -- Custom pod [DNS config](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.30/#poddnsconfig-v1-core)</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">dnsConfig:</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment"># -- Custom [host aliases](https://kubernetes.io/docs/tasks/network/customize-hosts-file-for-pods/)</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">hostAliases:</span> []</span><br><span class="line"></span><br><span class="line">  <span class="comment"># -- Pull secret for fetching traefik container image</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">imagePullSecrets:</span> []</span><br><span class="line"></span><br><span class="line">  <span class="comment"># -- Pod lifecycle actions</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">lifecycle:</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment"># preStop:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#   exec:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#     command: [&quot;/bin/sh&quot;, &quot;-c&quot;, &quot;sleep 40&quot;]</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># postStart:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#   httpGet:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#     path: /ping</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#     port: 9000</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#     host: localhost</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#     scheme: HTTP</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># -- Set a runtimeClassName on pod</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">runtimeClassName:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment"># -- [Pod Disruption Budget](https://kubernetes.io/docs/reference/kubernetes-api/policy-resources/pod-disruption-budget-v1/)</span></span><br><span class="line"></span><br><span class="line"><span class="attr">podDisruptionBudget:</span>  <span class="comment"># @schema additionalProperties: false</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">maxUnavailable:</span>  <span class="comment"># @schema type:[string, integer, null];minimum:0</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">minAvailable:</span>    <span class="comment"># @schema type:[string, integer, null];minimum:0</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment"># -- Create a default IngressClass for Traefik</span></span><br><span class="line"></span><br><span class="line"><span class="attr">ingressClass:</span>  <span class="comment"># @schema additionalProperties: false</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">isDefaultClass:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">name:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="attr">core:</span>  <span class="comment"># @schema additionalProperties: false</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># -- Can be used to use globally v2 router syntax</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># See https://doc.traefik.io/traefik/v3.0/migration/v2-to-v3/#new-v3-syntax-notable-changes</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">defaultRuleSyntax:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment"># Traefik experimental features</span></span><br><span class="line"></span><br><span class="line"><span class="attr">experimental:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># -- Enable traefik experimental plugins</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">plugins:</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment"># demo:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#   moduleName: github.com/traefik/plugindemo</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#   version: v0.2.1</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">kubernetesGateway:</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- Enable traefik experimental GatewayClass CRD</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="attr">gateway:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># -- When providers.kubernetesGateway.enabled, deploy a default gateway</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># -- Set a custom name to gateway</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">name:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># -- By default, Gateway is created in the same `Namespace` than Traefik.</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># -- Additional gateway annotations (e.g. for cert-manager.io/issuer)</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">annotations:</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment"># -- Define listeners</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">listeners:</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">web:</span></span><br><span class="line"></span><br><span class="line">      <span class="comment"># -- Port is the network port. Multiple listeners may use the same port, subject to the Listener compatibility rules.</span></span><br><span class="line"></span><br><span class="line">      <span class="comment"># The port must match a port declared in ports section.</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">port:</span> <span class="number">8000</span></span><br><span class="line"></span><br><span class="line">      <span class="comment"># -- Optional hostname. See [Hostname](https://gateway-api.sigs.k8s.io/reference/spec/#gateway.networking.k8s.io/v1.Hostname)</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">hostname:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">      <span class="comment"># Specify expected protocol on this listener. See [ProtocolType](https://gateway-api.sigs.k8s.io/reference/spec/#gateway.networking.k8s.io/v1.ProtocolType)</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">protocol:</span> <span class="string">HTTP</span></span><br><span class="line"></span><br><span class="line">      <span class="comment"># -- Routes are restricted to namespace of the gateway [by default](https://gateway-api.sigs.k8s.io/reference/spec/#gateway.networking.k8s.io/v1.FromNamespaces</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">namespacePolicy:</span>  <span class="comment"># @schema type:[string, null]</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># websecure listener is disabled by default because certificateRefs needs to be added,</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># or you may specify TLS protocol with Passthrough mode and add &quot;--providers.kubernetesGateway.experimentalChannel=true&quot; in additionalArguments section.</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># websecure:</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#   # -- Port is the network port. Multiple listeners may use the same port, subject to the Listener compatibility rules.</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#   # The port must match a port declared in ports section.</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#   port: 8443</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#   # -- Optional hostname. See [Hostname](https://gateway-api.sigs.k8s.io/reference/spec/#gateway.networking.k8s.io/v1.Hostname)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#   hostname:</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#   # Specify expected protocol on this listener See [ProtocolType](https://gateway-api.sigs.k8s.io/reference/spec/#gateway.networking.k8s.io/v1.ProtocolType)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#   protocol: HTTPS</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#   # -- Routes are restricted to namespace of the gateway [by default](https://gateway-api.sigs.k8s.io/reference/spec/#gateway.networking.k8s.io/v1.FromNamespaces)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#   namespacePolicy:</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#   # -- Add certificates for TLS or HTTPS protocols. See [GatewayTLSConfig](https://gateway-api.sigs.k8s.io/reference/spec/#gateway.networking.k8s.io%2fv1.GatewayTLSConfig)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#   certificateRefs:</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#   # -- TLS behavior for the TLS session initiated by the client. See [TLSModeType](https://gateway-api.sigs.k8s.io/reference/spec/#gateway.networking.k8s.io/v1.TLSModeType).</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#   mode:</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="attr">gatewayClass:</span>  <span class="comment"># @schema additionalProperties: false</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># -- When providers.kubernetesGateway.enabled and gateway.enabled, deploy a default gatewayClass</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># -- Set a custom name to GatewayClass</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">name:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># -- Additional gatewayClass labels (e.g. for filtering gateway objects by custom labels)</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">labels:</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="attr">ingressRoute:</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">dashboard:</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- Create an IngressRoute for the dashboard</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span> <span class="comment"># 修改此处，启用dashboard</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- Additional ingressRoute annotations (e.g. for kubernetes.io/ingress.class)</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">annotations:</span> <span class="comment"># 修改此处,添加配置</span></span><br><span class="line">      <span class="attr">ingress.kubernetes.io/ssl-redirect:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line">      <span class="attr">ingress.kubernetes.io/proxy-body-size:</span> <span class="string">&quot;0&quot;</span></span><br><span class="line">      <span class="attr">kubernetes.io/ingress.class:</span> <span class="string">&quot;traefik&quot;</span></span><br><span class="line">      <span class="attr">traefik.ingress.kubernetes.io/router.tls:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line">      <span class="attr">traefik.ingress.kubernetes.io/router.entrypoints:</span> <span class="string">websecure</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- Additional ingressRoute labels (e.g. for filtering IngressRoute by custom labels)</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">labels:</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- The router match rule used for the dashboard ingressRoute</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">matchRule:</span> <span class="string">PathPrefix(`/dashboard`)</span> <span class="string">||</span> <span class="string">PathPrefix(`/api`)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- The internal service used for the dashboard ingressRoute</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">services:</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">api@internal</span></span><br><span class="line"></span><br><span class="line">        <span class="attr">kind:</span> <span class="string">TraefikService</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- Specify the allowed entrypoints to use for the dashboard ingress route, (e.g. traefik, web, websecure).</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># By default, it&#x27;s using traefik entrypoint, which is not exposed.</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># /!\ Do not expose your dashboard without any protection over the internet /!\</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">entryPoints:</span> [<span class="string">&quot;traefik&quot;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- Additional ingressRoute middlewares (e.g. for authentication)</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">middlewares:</span> []</span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- TLS options (e.g. secret containing certificate)</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">tls:</span> <span class="comment"># 修改此处，配置证书,需要cert-manager</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">certSource:</span> <span class="string">secret</span></span><br><span class="line">      <span class="attr">secret:</span></span><br><span class="line">        <span class="attr">secretName:</span> <span class="string">&quot;traefik-tls-secret&quot;</span></span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">  <span class="attr">healthcheck:</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- Create an IngressRoute for the healthcheck probe</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- Additional ingressRoute annotations (e.g. for kubernetes.io/ingress.class)</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">annotations:</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- Additional ingressRoute labels (e.g. for filtering IngressRoute by custom labels)</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">labels:</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- The router match rule used for the healthcheck ingressRoute</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">matchRule:</span> <span class="string">PathPrefix(`/ping`)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- The internal service used for the healthcheck ingressRoute</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">services:</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">ping@internal</span></span><br><span class="line"></span><br><span class="line">        <span class="attr">kind:</span> <span class="string">TraefikService</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- Specify the allowed entrypoints to use for the healthcheck ingress route, (e.g. traefik, web, websecure).</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># By default, it&#x27;s using traefik entrypoint, which is not exposed.</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">entryPoints:</span> [<span class="string">&quot;traefik&quot;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- Additional ingressRoute middlewares (e.g. for authentication)</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">middlewares:</span> []</span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- TLS options (e.g. secret containing certificate)</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">tls:</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="attr">updateStrategy:</span>  <span class="comment"># @schema additionalProperties: false</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># -- Customize updateStrategy of Deployment or DaemonSet</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">type:</span> <span class="string">RollingUpdate</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">rollingUpdate:</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">maxUnavailable:</span> <span class="number">0</span>  <span class="comment"># @schema type:[integer, string, null]</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">maxSurge:</span> <span class="number">1</span>        <span class="comment"># @schema type:[integer, string, null]</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="attr">readinessProbe:</span>  <span class="comment"># @schema additionalProperties: false</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># -- The number of consecutive failures allowed before considering the probe as failed.</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">failureThreshold:</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># -- The number of seconds to wait before starting the first probe.</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">initialDelaySeconds:</span> <span class="number">2</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># -- The number of seconds to wait between consecutive probes.</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">periodSeconds:</span> <span class="number">10</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># -- The minimum consecutive successes required to consider the probe successful.</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">successThreshold:</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># -- The number of seconds to wait for a probe response before considering it as failed.</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">timeoutSeconds:</span> <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="attr">livenessProbe:</span>  <span class="comment"># @schema additionalProperties: false</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># -- The number of consecutive failures allowed before considering the probe as failed.</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">failureThreshold:</span> <span class="number">3</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># -- The number of seconds to wait before starting the first probe.</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">initialDelaySeconds:</span> <span class="number">2</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># -- The number of seconds to wait between consecutive probes.</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">periodSeconds:</span> <span class="number">10</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># -- The minimum consecutive successes required to consider the probe successful.</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">successThreshold:</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># -- The number of seconds to wait for a probe response before considering it as failed.</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">timeoutSeconds:</span> <span class="number">2</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment"># -- Define [Startup Probe](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-startup-probes)</span></span><br><span class="line"></span><br><span class="line"><span class="attr">startupProbe:</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="attr">providers:</span>  <span class="comment"># @schema additionalProperties: false</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">kubernetesCRD:</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- Load Kubernetes IngressRoute provider</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- Allows IngressRoute to reference resources in namespace other than theirs</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">allowCrossNamespace:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- Allows to reference ExternalName services in IngressRoute</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">allowExternalNameServices:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- Allows to return 503 when there is no endpoints available</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">allowEmptyServices:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- When the parameter is set, only resources containing an annotation with the same value are processed. Otherwise, resources missing the annotation, having an empty value, or the value traefik are processed. It will also set required annotation on Dashboard and Healthcheck IngressRoute when enabled.</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">ingressClass:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># labelSelector: environment=production,method=traefik</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- Array of namespaces to watch. If left empty, Traefik watches all namespaces.</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">namespaces:</span> []</span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- Defines whether to use Native Kubernetes load-balancing mode by default.</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">nativeLBByDefault:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">  <span class="attr">kubernetesIngress:</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- Load Kubernetes Ingress provider</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- Allows to reference ExternalName services in Ingress</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">allowExternalNameServices:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- Allows to return 503 when there is no endpoints available</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">allowEmptyServices:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- When ingressClass is set, only Ingresses containing an annotation with the same value are processed. Otherwise, Ingresses missing the annotation, having an empty value, or the value traefik are processed.</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">ingressClass:</span>  <span class="comment"># @schema type:[string, null]</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># labelSelector: environment=production,method=traefik</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- Array of namespaces to watch. If left empty, Traefik watches all namespaces.</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">namespaces:</span> []</span><br><span class="line"></span><br><span class="line">    <span class="comment"># IP used for Kubernetes Ingress endpoints</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">publishedService:</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">      <span class="comment"># Published Kubernetes Service to copy status from. Format: namespace/servicename</span></span><br><span class="line"></span><br><span class="line">      <span class="comment"># By default this Traefik service</span></span><br><span class="line"></span><br><span class="line">      <span class="comment"># pathOverride: &quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- Defines whether to use Native Kubernetes load-balancing mode by default.</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">nativeLBByDefault:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">  <span class="attr">kubernetesGateway:</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- Enable Traefik Gateway provider for Gateway API</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- Toggles support for the Experimental Channel resources (Gateway API release channels documentation).</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># This option currently enables support for TCPRoute and TLSRoute.</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">experimentalChannel:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- Array of namespaces to watch. If left empty, Traefik watches all namespaces.</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">namespaces:</span> []</span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- A label selector can be defined to filter on specific GatewayClass objects only.</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">labelselector:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">  <span class="attr">file:</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- Create a file provider</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- Allows Traefik to automatically watch for file changes</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">watch:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- File content (YAML format, go template supported) (see https://doc.traefik.io/traefik/providers/file/)</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">content:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment"># -- Add volumes to the traefik pod. The volume name will be passed to tpl.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># This can be used to mount a cert pair or a configmap that holds a config.toml file.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># After the volume has been mounted, add the configs into traefik by using the `additionalArguments` list below, eg:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># `additionalArguments:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># - &quot;--providers.file.filename=/config/dynamic.toml&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># - &quot;--ping&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># - &quot;--ping.entrypoint=web&quot;`</span></span><br><span class="line"></span><br><span class="line"><span class="attr">volumes:</span> []</span><br><span class="line"></span><br><span class="line"><span class="comment"># - name: public-cert</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#   mountPath: &quot;/certs&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#   type: secret</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># - name: &#x27;&#123;&#123; printf &quot;%s-configs&quot; .Release.Name &#125;&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#   mountPath: &quot;/config&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#   type: configMap</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment"># -- Additional volumeMounts to add to the Traefik container</span></span><br><span class="line"></span><br><span class="line"><span class="attr">additionalVolumeMounts:</span> []</span><br><span class="line"></span><br><span class="line"><span class="comment"># -- For instance when using a logshipper for access logs</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># - name: traefik-logs</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#   mountPath: /var/log/traefik</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="attr">logs:</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">general:</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- Set [logs format](https://doc.traefik.io/traefik/observability/logs/#format)</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">format:</span>  <span class="comment"># @schema enum:[&quot;common&quot;, &quot;json&quot;, null]; type:[string, null]; default: &quot;common&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># By default, the level is set to INFO.</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- Alternative logging levels are DEBUG, PANIC, FATAL, ERROR, WARN, and INFO.</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">level:</span> <span class="string">&quot;INFO&quot;</span>  <span class="comment"># @schema enum:[INFO,WARN,ERROR,FATAL,PANIC,DEBUG]; default: &quot;INFO&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- To write the logs into a log file, use the filePath option.</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">filePath:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- When set to true and format is common, it disables the colorized output.</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">noColor:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">access:</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- To enable access logs</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- Set [access log format](https://doc.traefik.io/traefik/observability/access-logs/#format)</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">format:</span>  <span class="comment"># @schema enum:[&quot;CLF&quot;, &quot;json&quot;, null]; type:[string, null]; default: &quot;CLF&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># filePath: &quot;/var/log/traefik/access.log</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- Set [bufferingSize](https://doc.traefik.io/traefik/observability/access-logs/#bufferingsize)</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">bufferingSize:</span>  <span class="comment"># @schema type:[integer, null]</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- Set [filtering](https://docs.traefik.io/observability/access-logs/#filtering)</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">filters:</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="attr">statuscodes:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">retryattempts:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">minduration:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- Enables accessLogs for internal resources. Default: false.</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">addInternals:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">fields:</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">general:</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># -- Set default mode for fields.names</span></span><br><span class="line"></span><br><span class="line">        <span class="attr">defaultmode:</span> <span class="string">keep</span>  <span class="comment"># @schema enum:[keep, drop, redact]; default: keep</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># -- Names of the fields to limit.</span></span><br><span class="line"></span><br><span class="line">        <span class="attr">names:</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment"># -- [Limit logged fields or headers](https://doc.traefik.io/traefik/observability/access-logs/#limiting-the-fieldsincluding-headers)</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">headers:</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># -- Set default mode for fields.headers</span></span><br><span class="line"></span><br><span class="line">        <span class="attr">defaultmode:</span> <span class="string">drop</span>  <span class="comment"># @schema enum:[keep, drop, redact]; default: drop</span></span><br><span class="line"></span><br><span class="line">        <span class="attr">names:</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="attr">metrics:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">## -- Enable metrics for internal resources. Default: false</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">addInternals:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">  <span class="comment">## -- Prometheus is enabled by default.</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">## -- It can be disabled by setting &quot;prometheus: null&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">prometheus:</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- Entry point used to expose metrics.</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">entryPoint:</span> <span class="string">metrics</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">## Enable metrics on entry points. Default: true</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">addEntryPointsLabels:</span>  <span class="comment"># @schema type:[boolean, null]</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">## Enable metrics on routers. Default: false</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">addRoutersLabels:</span>  <span class="comment"># @schema type:[boolean, null]</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">## Enable metrics on services. Default: true</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">addServicesLabels:</span>  <span class="comment"># @schema type:[boolean, null]</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">## Buckets for latency metrics. Default=&quot;0.1,0.3,1.2,5.0&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">buckets:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">## When manualRouting is true, it disables the default internal router in</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">## order to allow creating a custom router for prometheus@internal service.</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">manualRouting:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">service:</span></span><br><span class="line"></span><br><span class="line">      <span class="comment"># -- Create a dedicated metrics service to use with ServiceMonitor</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">labels:</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line">      <span class="attr">annotations:</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- When set to true, it won&#x27;t check if Prometheus Operator CRDs are deployed</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">disableAPICheck:</span>  <span class="comment"># @schema type:[boolean, null]</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">serviceMonitor:</span></span><br><span class="line"></span><br><span class="line">      <span class="comment"># -- Enable optional CR for Prometheus Operator. See EXAMPLES.md for more details.</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">metricRelabelings:</span> []</span><br><span class="line"></span><br><span class="line">      <span class="attr">relabelings:</span> []</span><br><span class="line"></span><br><span class="line">      <span class="attr">jobLabel:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">interval:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">honorLabels:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">scrapeTimeout:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">honorTimestamps:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">enableHttp2:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">followRedirects:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">additionalLabels:</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line">      <span class="attr">namespace:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">namespaceSelector:</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="attr">prometheusRule:</span></span><br><span class="line"></span><br><span class="line">      <span class="comment"># -- Enable optional CR for Prometheus Operator. See EXAMPLES.md for more details.</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">additionalLabels:</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line">      <span class="attr">namespace:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">  <span class="comment">#  datadog:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#    ## Address instructs exporter to send metrics to datadog-agent at this address.</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#    address: &quot;127.0.0.1:8125&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#    ## The interval used by the exporter to push metrics to datadog-agent. Default=10s</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#    # pushInterval: 30s</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#    ## The prefix to use for metrics collection. Default=&quot;traefik&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#    # prefix: traefik</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#    ## Enable metrics on entry points. Default=true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#    # addEntryPointsLabels: false</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#    ## Enable metrics on routers. Default=false</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#    # addRoutersLabels: true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#    ## Enable metrics on services. Default=true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#    # addServicesLabels: false</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#  influxdb2:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#    ## Address instructs exporter to send metrics to influxdb v2 at this address.</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#    address: localhost:8086</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#    ## Token with which to connect to InfluxDB v2.</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#    token: xxx</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#    ## Organisation where metrics will be stored.</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#    org: &quot;&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#    ## Bucket where metrics will be stored.</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#    bucket: &quot;&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#    ## The interval used by the exporter to push metrics to influxdb. Default=10s</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#    # pushInterval: 30s</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#    ## Additional labels (influxdb tags) on all metrics.</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#    # additionalLabels:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#    #   env: production</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#    #   foo: bar</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#    ## Enable metrics on entry points. Default=true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#    # addEntryPointsLabels: false</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#    ## Enable metrics on routers. Default=false</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#    # addRoutersLabels: true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#    ## Enable metrics on services. Default=true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#    # addServicesLabels: false</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#  statsd:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#    ## Address instructs exporter to send metrics to statsd at this address.</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#    address: localhost:8125</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#    ## The interval used by the exporter to push metrics to influxdb. Default=10s</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#    # pushInterval: 30s</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#    ## The prefix to use for metrics collection. Default=&quot;traefik&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#    # prefix: traefik</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#    ## Enable metrics on entry points. Default=true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#    # addEntryPointsLabels: false</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#    ## Enable metrics on routers. Default=false</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#    # addRoutersLabels: true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#    ## Enable metrics on services. Default=true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#    # addServicesLabels: false</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">otlp:</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- Set to true in order to enable the OpenTelemetry metrics</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- Enable metrics on entry points. Default: true</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">addEntryPointsLabels:</span>  <span class="comment"># @schema type:[boolean, null]</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- Enable metrics on routers. Default: false</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">addRoutersLabels:</span>  <span class="comment"># @schema type:[boolean, null]</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- Enable metrics on services. Default: true</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">addServicesLabels:</span>  <span class="comment"># @schema type:[boolean, null]</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- Explicit boundaries for Histogram data points. Default: [.005, .01, .025, .05, .1, .25, .5, 1, 2.5, 5, 10]</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">explicitBoundaries:</span> []</span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- Interval at which metrics are sent to the OpenTelemetry Collector. Default: 10s</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">pushInterval:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">http:</span></span><br><span class="line"></span><br><span class="line">      <span class="comment"># -- Set to true in order to send metrics to the OpenTelemetry Collector using HTTP.</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">      <span class="comment"># -- Format: &lt;scheme&gt;://&lt;host&gt;:&lt;port&gt;&lt;path&gt;. Default: http://localhost:4318/v1/metrics</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">endpoint:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">      <span class="comment"># -- Additional headers sent with metrics by the reporter to the OpenTelemetry Collector.</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">headers:</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">## Defines the TLS configuration used by the reporter to send metrics to the OpenTelemetry Collector.</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">tls:</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># -- The path to the certificate authority, it defaults to the system bundle.</span></span><br><span class="line"></span><br><span class="line">        <span class="attr">ca:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># -- The path to the public certificate. When using this option, setting the key option is required.</span></span><br><span class="line"></span><br><span class="line">        <span class="attr">cert:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># -- The path to the private key. When using this option, setting the cert option is required.</span></span><br><span class="line"></span><br><span class="line">        <span class="attr">key:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># -- When set to true, the TLS connection accepts any certificate presented by the server regardless of the hostnames it covers.</span></span><br><span class="line"></span><br><span class="line">        <span class="attr">insecureSkipVerify:</span>  <span class="comment"># @schema type:[boolean, null]</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">grpc:</span></span><br><span class="line"></span><br><span class="line">      <span class="comment"># -- Set to true in order to send metrics to the OpenTelemetry Collector using gRPC</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">      <span class="comment"># -- Format: &lt;scheme&gt;://&lt;host&gt;:&lt;port&gt;&lt;path&gt;. Default: http://localhost:4318/v1/metrics</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">endpoint:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">      <span class="comment"># -- Allows reporter to send metrics to the OpenTelemetry Collector without using a secured protocol.</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">insecure:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">## Defines the TLS configuration used by the reporter to send metrics to the OpenTelemetry Collector.</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">tls:</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># -- The path to the certificate authority, it defaults to the system bundle.</span></span><br><span class="line"></span><br><span class="line">        <span class="attr">ca:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># -- The path to the public certificate. When using this option, setting the key option is required.</span></span><br><span class="line"></span><br><span class="line">        <span class="attr">cert:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># -- The path to the private key. When using this option, setting the cert option is required.</span></span><br><span class="line"></span><br><span class="line">        <span class="attr">key:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># -- When set to true, the TLS connection accepts any certificate presented by the server regardless of the hostnames it covers.</span></span><br><span class="line"></span><br><span class="line">        <span class="attr">insecureSkipVerify:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment">## Tracing</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># -- https://doc.traefik.io/traefik/observability/tracing/overview/</span></span><br><span class="line"></span><br><span class="line"><span class="attr">tracing:</span>  <span class="comment"># @schema additionalProperties: false</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># -- Enables tracing for internal resources. Default: false.</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">addInternals:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">otlp:</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- See https://doc.traefik.io/traefik/v3.0/observability/tracing/opentelemetry/</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">http:</span></span><br><span class="line"></span><br><span class="line">      <span class="comment"># -- Set to true in order to send metrics to the OpenTelemetry Collector using HTTP.</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">      <span class="comment"># -- Format: &lt;scheme&gt;://&lt;host&gt;:&lt;port&gt;&lt;path&gt;. Default: http://localhost:4318/v1/metrics</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">endpoint:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">      <span class="comment"># -- Additional headers sent with metrics by the reporter to the OpenTelemetry Collector.</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">headers:</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">## Defines the TLS configuration used by the reporter to send metrics to the OpenTelemetry Collector.</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">tls:</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># -- The path to the certificate authority, it defaults to the system bundle.</span></span><br><span class="line"></span><br><span class="line">        <span class="attr">ca:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># -- The path to the public certificate. When using this option, setting the key option is required.</span></span><br><span class="line"></span><br><span class="line">        <span class="attr">cert:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># -- The path to the private key. When using this option, setting the cert option is required.</span></span><br><span class="line"></span><br><span class="line">        <span class="attr">key:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># -- When set to true, the TLS connection accepts any certificate presented by the server regardless of the hostnames it covers.</span></span><br><span class="line"></span><br><span class="line">        <span class="attr">insecureSkipVerify:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">grpc:</span></span><br><span class="line"></span><br><span class="line">      <span class="comment"># -- Set to true in order to send metrics to the OpenTelemetry Collector using gRPC</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">      <span class="comment"># -- Format: &lt;scheme&gt;://&lt;host&gt;:&lt;port&gt;&lt;path&gt;. Default: http://localhost:4318/v1/metrics</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">endpoint:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">      <span class="comment"># -- Allows reporter to send metrics to the OpenTelemetry Collector without using a secured protocol.</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">insecure:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">## Defines the TLS configuration used by the reporter to send metrics to the OpenTelemetry Collector.</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">tls:</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># -- The path to the certificate authority, it defaults to the system bundle.</span></span><br><span class="line"></span><br><span class="line">        <span class="attr">ca:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># -- The path to the public certificate. When using this option, setting the key option is required.</span></span><br><span class="line"></span><br><span class="line">        <span class="attr">cert:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># -- The path to the private key. When using this option, setting the cert option is required.</span></span><br><span class="line"></span><br><span class="line">        <span class="attr">key:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># -- When set to true, the TLS connection accepts any certificate presented by the server regardless of the hostnames it covers.</span></span><br><span class="line"></span><br><span class="line">        <span class="attr">insecureSkipVerify:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment"># -- Global command arguments to be passed to all traefik&#x27;s pods</span></span><br><span class="line"></span><br><span class="line"><span class="attr">globalArguments:</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="string">&quot;--global.checknewversion&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="string">&quot;--global.sendanonymoususage&quot;</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment"># -- Additional arguments to be passed at Traefik&#x27;s binary</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># See [CLI Reference](https://docs.traefik.io/reference/static-configuration/cli/)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Use curly braces to pass values: `helm install --set=&quot;additionalArguments=&#123;--providers.kubernetesingress.ingressclass=traefik-internal,--log.level=DEBUG&#125;&quot;`</span></span><br><span class="line"></span><br><span class="line"><span class="attr">additionalArguments:</span> []</span><br><span class="line"></span><br><span class="line"><span class="comment">#  - &quot;--providers.kubernetesingress.ingressclass=traefik-internal&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#  - &quot;--log.level=DEBUG&quot;</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment"># -- Environment variables to be passed to Traefik&#x27;s binary</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># @default -- See _values.yaml_</span></span><br><span class="line"></span><br><span class="line"><span class="attr">env:</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">POD_NAME</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">valueFrom:</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">fieldRef:</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">fieldPath:</span> <span class="string">metadata.name</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">POD_NAMESPACE</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">valueFrom:</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">fieldRef:</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">fieldPath:</span> <span class="string">metadata.namespace</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment"># -- Environment variables to be passed to Traefik&#x27;s binary from configMaps or secrets</span></span><br><span class="line"></span><br><span class="line"><span class="attr">envFrom:</span> []</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="attr">ports:</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">redis:</span> <span class="comment"># 添加此部分，用于暴露Redis对外访问</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">6379</span></span><br><span class="line">    <span class="attr">expose:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">exposedPort:</span> <span class="number">6379</span> <span class="comment"># 对外暴露端口</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">  <span class="attr">mysql:</span> <span class="comment">#添加此部分，用于暴露MySQL对外访问</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">3306</span></span><br><span class="line">    <span class="attr">expose:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">exposedPort:</span> <span class="number">3306</span> <span class="comment"># 对外暴露端口</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">traefik:</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">port:</span> <span class="number">9000</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- Use hostPort if set.</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">hostPort:</span>  <span class="comment"># @schema type:[integer, null]; minimum:0</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- Use hostIP if set. If not set, Kubernetes will default to 0.0.0.0, which</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># means it&#x27;s listening on all your interfaces and all your IPs. You may want</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># to set this value if you need traefik to listen on specific interface</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># only.</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">hostIP:</span>  <span class="comment"># @schema type:[string, null]</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">    <span class="comment"># Defines whether the port is exposed if service.type is LoadBalancer or</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># NodePort.</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- You SHOULD NOT expose the traefik port on production deployments.</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># If you want to access it from outside your cluster,</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># use `kubectl port-forward` or create a secure ingress</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">expose:</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">default:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- The exposed port for this service</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">exposedPort:</span> <span class="number">9000</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- The port protocol (TCP/UDP)</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">web:</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">## -- Enable this entrypoint as a default entrypoint. When a service doesn&#x27;t explicitly set an entrypoint it will only use this entrypoint.</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># asDefault: true</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">port:</span> <span class="number">8000</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># hostPort: 8000</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># containerPort: 8000</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">expose:</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">default:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">exposedPort:</span> <span class="number">80</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">## -- Different target traefik port on the cluster, useful for IP type LB</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">targetPort:</span>  <span class="comment"># @schema type:[integer, null]; minimum:0</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># The port protocol (TCP/UDP)</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- See [upstream documentation](https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport)</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">nodePort:</span>  <span class="comment"># @schema type:[integer, null]; minimum:0</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Port Redirections</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Added in 2.2, you can make permanent redirects via entrypoints.</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># https://docs.traefik.io/routing/entrypoints/#redirection</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">redirectTo:</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="attr">forwardedHeaders:</span></span><br><span class="line"></span><br><span class="line">      <span class="comment"># -- Trust forwarded headers information (X-Forwarded-*).</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">trustedIPs:</span> []</span><br><span class="line"></span><br><span class="line">      <span class="attr">insecure:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">proxyProtocol:</span></span><br><span class="line"></span><br><span class="line">      <span class="comment"># -- Enable the Proxy Protocol header parsing for the entry point</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">trustedIPs:</span> []</span><br><span class="line"></span><br><span class="line">      <span class="attr">insecure:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- Set transport settings for the entrypoint; see also</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># https://doc.traefik.io/traefik/routing/entrypoints/#transport</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">transport:</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">respondingTimeouts:</span></span><br><span class="line"></span><br><span class="line">        <span class="attr">readTimeout:</span>   <span class="comment"># @schema type:[string, integer, null]</span></span><br><span class="line"></span><br><span class="line">        <span class="attr">writeTimeout:</span>  <span class="comment"># @schema type:[string, integer, null]</span></span><br><span class="line"></span><br><span class="line">        <span class="attr">idleTimeout:</span>   <span class="comment"># @schema type:[string, integer, null]</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">lifeCycle:</span></span><br><span class="line"></span><br><span class="line">        <span class="attr">requestAcceptGraceTimeout:</span>  <span class="comment"># @schema type:[string, integer, null]</span></span><br><span class="line"></span><br><span class="line">        <span class="attr">graceTimeOut:</span>               <span class="comment"># @schema type:[string, integer, null]</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">keepAliveMaxRequests:</span>         <span class="comment"># @schema type:[integer, null]; minimum:0</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">keepAliveMaxTime:</span>             <span class="comment"># @schema type:[string, integer, null]</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">websecure:</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">## -- Enable this entrypoint as a default entrypoint. When a service doesn&#x27;t explicitly set an entrypoint it will only use this entrypoint.</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># asDefault: true</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">port:</span> <span class="number">8443</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">hostPort:</span>  <span class="comment"># @schema type:[integer, null]; minimum:0</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">containerPort:</span>  <span class="comment"># @schema type:[integer, null]; minimum:0</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">expose:</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">default:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">exposedPort:</span> <span class="number">443</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">## -- Different target traefik port on the cluster, useful for IP type LB</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">targetPort:</span>  <span class="comment"># @schema type:[integer, null]; minimum:0</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">## -- The port protocol (TCP/UDP)</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- See [upstream documentation](https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport)</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">nodePort:</span>  <span class="comment"># @schema type:[integer, null]; minimum:0</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- See [upstream documentation](https://kubernetes.io/docs/concepts/services-networking/service/#application-protocol)</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">appProtocol:</span>  <span class="comment"># @schema type:[string, null]</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- See [upstream documentation](https://doc.traefik.io/traefik/routing/entrypoints/#allowacmebypass)</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">allowACMEByPass:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">http3:</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">## -- Enable HTTP/3 on the entrypoint</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">## Enabling it will also enable http3 experimental feature</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">## https://doc.traefik.io/traefik/routing/entrypoints/#http3</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">## There are known limitations when trying to listen on same ports for</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">## TCP &amp; UDP (Http3). There is a workaround in this chart using dual Service.</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">## https://github.com/kubernetes/kubernetes/issues/47249#issuecomment-587960741</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">advertisedPort:</span>  <span class="comment"># @schema type:[integer, null]; minimum:0</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">forwardedHeaders:</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># -- Trust forwarded headers information (X-Forwarded-*).</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">trustedIPs:</span> []</span><br><span class="line"></span><br><span class="line">      <span class="attr">insecure:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">proxyProtocol:</span></span><br><span class="line"></span><br><span class="line">      <span class="comment"># -- Enable the Proxy Protocol header parsing for the entry point</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">trustedIPs:</span> []</span><br><span class="line"></span><br><span class="line">      <span class="attr">insecure:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- See [upstream documentation](https://doc.traefik.io/traefik/routing/entrypoints/#transport)</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">transport:</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">respondingTimeouts:</span></span><br><span class="line"></span><br><span class="line">        <span class="attr">readTimeout:</span>   <span class="comment"># @schema type:[string, integer, null]</span></span><br><span class="line"></span><br><span class="line">        <span class="attr">writeTimeout:</span>  <span class="comment"># @schema type:[string, integer, null]</span></span><br><span class="line"></span><br><span class="line">        <span class="attr">idleTimeout:</span>   <span class="comment"># @schema type:[string, integer, null]</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">lifeCycle:</span></span><br><span class="line"></span><br><span class="line">        <span class="attr">requestAcceptGraceTimeout:</span>  <span class="comment"># @schema type:[string, integer, null]</span></span><br><span class="line"></span><br><span class="line">        <span class="attr">graceTimeOut:</span>               <span class="comment"># @schema type:[string, integer, null]</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">keepAliveMaxRequests:</span>         <span class="comment"># @schema type:[integer, null]; minimum:0</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">keepAliveMaxTime:</span>             <span class="comment"># @schema type:[string, integer, null]</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># --  See [upstream documentation](https://doc.traefik.io/traefik/routing/entrypoints/#tls)</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">tls:</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">options:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">certResolver:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">domains:</span> []</span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- One can apply Middlewares on an entrypoint</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># https://doc.traefik.io/traefik/middlewares/overview/</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># https://doc.traefik.io/traefik/routing/entrypoints/#middlewares</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- /!\ It introduces here a link between your static configuration and your dynamic configuration /!\</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># It follows the provider naming convention: https://doc.traefik.io/traefik/providers/overview/#provider-namespace</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#   - namespace-name1@kubernetescrd</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#   - namespace-name2@kubernetescrd</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">middlewares:</span> []</span><br><span class="line"></span><br><span class="line">  <span class="attr">metrics:</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- When using hostNetwork, use another port to avoid conflict with node exporter:</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># https://github.com/prometheus/prometheus/wiki/Default-port-allocations</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">port:</span> <span class="number">9100</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- You may not want to expose the metrics port on production deployments.</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># If you want to access it from outside your cluster,</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># use `kubectl port-forward` or create a secure ingress</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">expose:</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">default:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- The exposed port for this service</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">exposedPort:</span> <span class="number">9100</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- The port protocol (TCP/UDP)</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment"># -- TLS Options are created as [TLSOption CRDs](https://doc.traefik.io/traefik/https/tls/#tls-options)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># When using `labelSelector`, you&#x27;ll need to set labels on tlsOption accordingly.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># See EXAMPLE.md for details.</span></span><br><span class="line"></span><br><span class="line"><span class="attr">tlsOptions:</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment"># -- TLS Store are created as [TLSStore CRDs](https://doc.traefik.io/traefik/https/tls/#default-certificate). This is useful if you want to set a default certificate. See EXAMPLE.md for details.</span></span><br><span class="line"></span><br><span class="line"><span class="attr">tlsStore:</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="attr">service:</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">## -- Single service is using `MixedProtocolLBService` feature gate.</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">## -- When set to false, it will create two Service, one for TCP and one for UDP.</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">single:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">type:</span> <span class="string">LoadBalancer</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># -- Additional annotations applied to both TCP and UDP services (e.g. for cloud provider specific config)</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">annotations:</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment"># -- Additional annotations for TCP service only</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">annotationsTCP:</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment"># -- Additional annotations for UDP service only</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">annotationsUDP:</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment"># -- Additional service labels (e.g. for filtering Service by custom labels)</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">labels:</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment"># -- Additional entries here will be added to the service spec.</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># -- Cannot contain type, selector or ports entries.</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">spec:</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment"># externalTrafficPolicy: Cluster</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># loadBalancerIP: &quot;1.2.3.4&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># clusterIP: &quot;2.3.4.5&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">loadBalancerSourceRanges:</span> []</span><br><span class="line"></span><br><span class="line">  <span class="comment"># - 192.168.0.1/32</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># - 172.16.0.0/16</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">## -- Class of the load balancer implementation</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># loadBalancerClass: service.k8s.aws/nlb</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">externalIPs:</span> []</span><br><span class="line"></span><br><span class="line">  <span class="comment"># - 1.2.3.4</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">## One of SingleStack, PreferDualStack, or RequireDualStack.</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># ipFamilyPolicy: SingleStack</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">## List of IP families (e.g. IPv4 and/or IPv6).</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">## ref: https://kubernetes.io/docs/concepts/services-networking/dual-stack/#services</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># ipFamilies:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#   - IPv4</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#   - IPv6</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">additionalServices:</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">## -- An additional and optional internal Service.</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">## Same parameters as external Service</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># internal:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#   type: ClusterIP</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#   # labels: &#123;&#125;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#   # annotations: &#123;&#125;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#   # spec: &#123;&#125;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#   # loadBalancerSourceRanges: []</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#   # externalIPs: []</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#   # ipFamilies: [ &quot;IPv4&quot;,&quot;IPv6&quot; ]</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="attr">autoscaling:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># -- Create HorizontalPodAutoscaler object.</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># See EXAMPLES.md for more details.</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="attr">persistence:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># -- Enable persistence using Persistent Volume Claims</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># ref: http://kubernetes.io/docs/user-guide/persistent-volumes/</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># It can be used to store TLS certificates, see `storage` in certResolvers</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">name:</span> <span class="string">data</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">existingClaim:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">accessMode:</span> <span class="string">ReadWriteOnce</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">size:</span> <span class="string">128Mi</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">storageClass:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">volumeName:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">path:</span> <span class="string">/data</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">annotations:</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment"># -- Only mount a subpath of the Volume into the pod</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">subPath:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment"># -- Certificates resolvers configuration.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Ref: https://doc.traefik.io/traefik/https/acme/#certificate-resolvers</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># See EXAMPLES.md for more details.</span></span><br><span class="line"></span><br><span class="line"><span class="attr">certResolvers:</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment"># -- If hostNetwork is true, runs traefik in the host network namespace</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># To prevent unschedulabel pods due to port collisions, if hostNetwork=true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># and replicas&gt;1, a pod anti-affinity is recommended and will be set if the</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># affinity is left as default.</span></span><br><span class="line"></span><br><span class="line"><span class="attr">hostNetwork:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment"># -- Whether Role Based Access Control objects like roles and rolebindings should be created</span></span><br><span class="line"></span><br><span class="line"><span class="attr">rbac:</span>  <span class="comment"># @schema additionalProperties: false</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># When set to true:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 1. Use `Role` and `RoleBinding` instead of `ClusterRole` and `ClusterRoleBinding`.</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 2. Set `disableIngressClassLookup` on Kubernetes Ingress providers with Traefik Proxy v3 until v3.1.1</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 3. Set `disableClusterScopeResources` on Kubernetes Ingress and CRD providers with Traefik Proxy v3.1.2+</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># **NOTE**: `IngressClass`, `NodePortLB` and **Gateway** provider cannot be used with namespaced RBAC.</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># See [upstream documentation](https://doc.traefik.io/traefik/providers/kubernetes-ingress/#disableclusterscoperesources) for more details.</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">namespaced:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Enable user-facing roles</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">aggregateTo:</span> []</span><br><span class="line"></span><br><span class="line">  <span class="comment"># List of Kubernetes secrets that are accessible for Traefik. If empty, then access is granted to every secret.</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">secretResourceNames:</span> []</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment"># -- Enable to create a PodSecurityPolicy and assign it to the Service Account via RoleBinding or ClusterRoleBinding</span></span><br><span class="line"></span><br><span class="line"><span class="attr">podSecurityPolicy:</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment"># -- The service account the pods will use to interact with the Kubernetes API</span></span><br><span class="line"></span><br><span class="line"><span class="attr">serviceAccount:</span>  <span class="comment"># @schema additionalProperties: false</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># If set, an existing service account is used</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># If not set, a service account is created automatically using the fullname template</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">name:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment"># -- Additional serviceAccount annotations (e.g. for oidc authentication)</span></span><br><span class="line"></span><br><span class="line"><span class="attr">serviceAccountAnnotations:</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment"># -- [Resources](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/) for `traefik` container.</span></span><br><span class="line"></span><br><span class="line"><span class="attr">resources:</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment"># -- This example pod anti-affinity forces the scheduler to put traefik pods</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># -- on nodes where no other traefik pods are scheduled.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># It should be used when hostNetwork: true to prevent port conflicts</span></span><br><span class="line"></span><br><span class="line"><span class="attr">affinity:</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#  podAntiAffinity:</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#    requiredDuringSchedulingIgnoredDuringExecution:</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#      - labelSelector:</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#          matchLabels:</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#            app.kubernetes.io/name: &#x27;&#123;&#123; template &quot;traefik.name&quot; . &#125;&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#            app.kubernetes.io/instance: &#x27;&#123;&#123; .Release.Name &#125;&#125;-&#123;&#123; .Release.Namespace &#125;&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#        topologyKey: kubernetes.io/hostname</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment"># -- nodeSelector is the simplest recommended form of node selection constraint.</span></span><br><span class="line"></span><br><span class="line"><span class="attr">nodeSelector:</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># -- Tolerations allow the scheduler to schedule pods with matching taints.</span></span><br><span class="line"></span><br><span class="line"><span class="attr">tolerations:</span> []</span><br><span class="line"></span><br><span class="line"><span class="comment"># -- You can use topology spread constraints to control</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># how Pods are spread across your cluster among failure-domains.</span></span><br><span class="line"></span><br><span class="line"><span class="attr">topologySpreadConstraints:</span> []</span><br><span class="line"></span><br><span class="line"><span class="comment"># This example topologySpreadConstraints forces the scheduler to put traefik pods</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># on nodes where no other traefik pods are scheduled.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#  - labelSelector:</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#      matchLabels:</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#        app: &#x27;&#123;&#123; template &quot;traefik.name&quot; . &#125;&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#    maxSkew: 1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#    topologyKey: kubernetes.io/hostname</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#    whenUnsatisfiable: DoNotSchedule</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment"># -- [Pod Priority and Preemption](https://kubernetes.io/docs/concepts/scheduling-eviction/pod-priority-preemption/)</span></span><br><span class="line"></span><br><span class="line"><span class="attr">priorityClassName:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment"># -- [SecurityContext](https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#security-context-1)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># @default -- See _values.yaml_</span></span><br><span class="line"></span><br><span class="line"><span class="attr">securityContext:</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">allowPrivilegeEscalation:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">capabilities:</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">drop:</span> [<span class="string">ALL</span>]</span><br><span class="line"></span><br><span class="line">  <span class="attr">readOnlyRootFilesystem:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment"># -- [Pod Security Context](https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#security-context)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># @default -- See _values.yaml_</span></span><br><span class="line"></span><br><span class="line"><span class="attr">podSecurityContext:</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">runAsGroup:</span> <span class="number">65532</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">runAsNonRoot:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">runAsUser:</span> <span class="number">65532</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># -- Extra objects to deploy (value evaluated as a template)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># In some cases, it can avoid the need for additional, extended or adhoc deployments.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># See #595 for more details and traefik/tests/values/extra.yaml for example.</span></span><br><span class="line"></span><br><span class="line"><span class="attr">extraObjects:</span> []</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment"># -- This field override the default Release Namespace for Helm.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># It will not affect optional CRDs such as `ServiceMonitor` and `PrometheusRules`</span></span><br><span class="line"></span><br><span class="line"><span class="attr">namespaceOverride:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment">## -- This field override the default app.kubernetes.io/instance label for all Objects.</span></span><br><span class="line"></span><br><span class="line"><span class="attr">instanceLabelOverride:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment"># Traefik Hub configuration. See https://doc.traefik.io/traefik-hub/</span></span><br><span class="line"></span><br><span class="line"><span class="attr">hub:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># -- Name of `Secret` with key &#x27;token&#x27; set to a valid license token.</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># It enables API Gateway.</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">token:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">apimanagement:</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># -- Set to true in order to enable API Management. Requires a valid license token.</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">admission:</span></span><br><span class="line"></span><br><span class="line">      <span class="comment"># -- WebHook admission server listen address. Default: &quot;0.0.0.0:9943&quot;.</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">listenAddr:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">      <span class="comment"># -- Certificate of the WebHook admission server. Default: &quot;hub-agent-cert&quot;.</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">secretName:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">  <span class="attr">ratelimit:</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">redis:</span></span><br><span class="line"></span><br><span class="line">      <span class="comment"># -- Enable Redis Cluster. Default: true.</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">cluster:</span>    <span class="comment"># @schema type:[boolean, null]</span></span><br><span class="line"></span><br><span class="line">      <span class="comment"># -- Database used to store information. Default: &quot;0&quot;.</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">database:</span>   <span class="comment"># @schema type:[string, null]</span></span><br><span class="line"></span><br><span class="line">      <span class="comment"># -- Endpoints of the Redis instances to connect to. Default: &quot;&quot;.</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">endpoints:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">      <span class="comment"># -- The username to use when connecting to Redis endpoints. Default: &quot;&quot;.</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">username:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">      <span class="comment"># -- The password to use when connecting to Redis endpoints. Default: &quot;&quot;.</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">password:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">sentinel:</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># -- Name of the set of main nodes to use for main selection. Required when using Sentinel. Default: &quot;&quot;.</span></span><br><span class="line"></span><br><span class="line">        <span class="attr">masterset:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># -- Username to use for sentinel authentication (can be different from endpoint username). Default: &quot;&quot;.</span></span><br><span class="line"></span><br><span class="line">        <span class="attr">username:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># -- Password to use for sentinel authentication (can be different from endpoint password). Default: &quot;&quot;.</span></span><br><span class="line"></span><br><span class="line">        <span class="attr">password:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">      <span class="comment"># -- Timeout applied on connection with redis. Default: &quot;0s&quot;.</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">timeout:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">tls:</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># -- Path to the certificate authority used for the secured connection.</span></span><br><span class="line"></span><br><span class="line">        <span class="attr">ca:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># -- Path to the public certificate used for the secure connection.</span></span><br><span class="line"></span><br><span class="line">        <span class="attr">cert:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># -- Path to the private key used for the secure connection.</span></span><br><span class="line"></span><br><span class="line">        <span class="attr">key:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># -- When insecureSkipVerify is set to true, the TLS connection accepts any certificate presented by the server. Default: false.</span></span><br><span class="line"></span><br><span class="line">        <span class="attr">insecureSkipVerify:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Enable export of errors logs to the platform. Default: true.</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">sendlogs:</span>  <span class="comment"># @schema type:[boolean, null]</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="应用配置"><a href="#应用配置" class="headerlink" title="应用配置"></a>应用配置</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">helm upgrade traefik traefik/traefik \</span><br><span class="line">    --namespace traefik -f traefik-values.yaml</span><br><span class="line"></span><br></pre></td></tr></table></figure>


<h2 id="IngressRouteTCP示例"><a href="#IngressRouteTCP示例" class="headerlink" title="IngressRouteTCP示例"></a>IngressRouteTCP示例</h2><p>mysql-traefik-ingress.yaml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">StatefulSet</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">mysql</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">spec:</span> </span><br><span class="line"><span class="string">...</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">mysql-svc</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span> </span><br><span class="line">    <span class="attr">app:</span> <span class="string">mysql</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">3306</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">mysql-tcp</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">  <span class="attr">clusterIP:</span> <span class="string">None</span> <span class="comment"># 定义Headless Service</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">traefik.io/v1alpha1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">IngressRouteTCP</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">mysql-ingress</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span> <span class="comment">#根据实际情况修改,或应用文件时指定</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">entryPoints:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">mysql</span></span><br><span class="line">  <span class="attr">routes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">match:</span> <span class="string">HostSNI(`*`)</span></span><br><span class="line">      <span class="attr">services:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">mysql-svc</span></span><br><span class="line">          <span class="attr">namespace:</span> <span class="string">default</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>容器技术</category>
      </categories>
      <tags>
        <tag>Kubernetes</tag>
        <tag>Ingress</tag>
        <tag>traefik</tag>
      </tags>
  </entry>
  <entry>
    <title>Podman配置代理</title>
    <url>/2025/08/01/%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Podman%E9%85%8D%E7%BD%AE%E4%BB%A3%E7%90%86/</url>
    <content><![CDATA[<h3 id="方法1-为当前用户设置环境变量"><a href="#方法1-为当前用户设置环境变量" class="headerlink" title="方法1: 为当前用户设置环境变量"></a>方法1: 为当前用户设置环境变量</h3><p>为当前用户设置 HTTP_PROXY 和 HTTPS_PROXY 环境变量,Podman 将自动读取这些环境变量并使用代理。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Bash</span></span><br><span class="line"><span class="built_in">export</span> HTTP_PROXY=<span class="string">&quot;http://代理地址:端口&quot;</span>  </span><br><span class="line"><span class="built_in">export</span> HTTPS_PROXY=<span class="string">&quot;https://代理地址:端口&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 对于 bash, 也可以在 ~/.bashrc 中添加上述命令使其永久有效</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Fish</span></span><br><span class="line"><span class="built_in">set</span> -x HTTP_PROXY <span class="string">&quot;http://代理地址:端口&quot;</span></span><br><span class="line"><span class="built_in">set</span> -x HTTPS_PROXY <span class="string">&quot;https://代理地址:端口&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 对于 fish,也可以在 ~/.config/fish/config.fish 中添加以上命令</span></span><br></pre></td></tr></table></figure>

<p>如果代理需要身份验证,可以在 URL 中添加用户名和密码。格式如下:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://用户名:密码@代理地址:端口</span><br></pre></td></tr></table></figure>

<h3 id="方法2：为-Podman-服务设置配置文件"><a href="#方法2：为-Podman-服务设置配置文件" class="headerlink" title="方法2：为 Podman 服务设置配置文件"></a>方法2：为 Podman 服务设置配置文件</h3><p>通过编辑 &#x2F;etc&#x2F;containers&#x2F;registries.conf 配置文件为 Podman 服务设置代理。在该文件中添加如下内容:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[registries.search]</span><br><span class="line">registries = [<span class="string">&#x27;docker.io&#x27;</span>, <span class="string">&#x27;quay.io&#x27;</span>]</span><br><span class="line"></span><br><span class="line">[registries.insecure]</span><br><span class="line">registries = []</span><br><span class="line"></span><br><span class="line">[registries.block]</span><br><span class="line">registries = []</span><br><span class="line"></span><br><span class="line">[registries.unqualified-search-registries]</span><br><span class="line"></span><br><span class="line">[registry.mirrors]</span><br><span class="line"></span><br><span class="line">[registry.configs]</span><br><span class="line"></span><br><span class="line">[registry.configs.REGISTRY_NAME.HOSTNAME/HOSTPATH]  </span><br><span class="line">unqualified-search-registries = [<span class="string">&quot;registry.fedoraproject.org&quot;</span>, <span class="string">&quot;registry.access.redhat.com&quot;</span>, <span class="string">&quot;docker.io&quot;</span>]</span><br><span class="line">blocked=<span class="literal">false</span> </span><br><span class="line"></span><br><span class="line">[registry.configs.REGISTRY_NAME.HOSTNAME]</span><br><span class="line">http-proxy=<span class="string">&quot;http://代理地址:端口&quot;</span></span><br><span class="line">https-proxy=<span class="string">&quot;https://代理地址:端口&quot;</span></span><br></pre></td></tr></table></figure>

<p>替换 REGISTRY_NAME.HOSTNAME 为您要配置的注册表,如 docker.io。如果代理需要身份验证,则使用类似 <a href="https://so.csdn.net/so/search?q=http&spm=1001.2101.3001.7020">http</a>:&#x2F;&#x2F;user:<a href="mailto:&#112;&#x61;&#x73;&#x73;&#x77;&#111;&#114;&#x64;&#64;&#x70;&#x72;&#x6f;&#x78;&#x79;&#46;&#101;&#120;&#x61;&#109;&#112;&#x6c;&#101;&#x2e;&#x63;&#111;&#109;">&#112;&#x61;&#x73;&#x73;&#x77;&#111;&#114;&#x64;&#64;&#x70;&#x72;&#x6f;&#x78;&#x79;&#46;&#101;&#120;&#x61;&#109;&#112;&#x6c;&#101;&#x2e;&#x63;&#111;&#109;</a>:8080 的格式。</p>
<h3 id="方法3-为单个-Podman-命令设置代理"><a href="#方法3-为单个-Podman-命令设置代理" class="headerlink" title="方法3: 为单个 Podman 命令设置代理"></a>方法3: 为单个 Podman 命令设置代理</h3><p>为单个 Podman 命令临时设置代理,方法是在命令前添加 –build-arg 参数。例如:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">podman --build-arg HTTP_PROXY=<span class="string">&quot;http://代理地址:端口&quot;</span> --build-arg HTTPS_PROXY=<span class="string">&quot;https://代理地址:端口&quot;</span> pull nginx</span><br></pre></td></tr></table></figure>

<h3 id="方法四-配置-http-proxy-conf"><a href="#方法四-配置-http-proxy-conf" class="headerlink" title="方法四: 配置 http-proxy.conf"></a>方法四: 配置 http-proxy.conf</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ systemctl status podman</span><br><span class="line">● podman.service - Podman API Service</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/podman.service; enabled; vendor preset: disabled)</span><br><span class="line">  Drop-In: /etc/systemd/system/podman.service.d</span><br><span class="line">           └─http-proxy.conf</span><br><span class="line">   Active: inactive (dead) since Mon 2023-11-20 18:45:12 CST; 3 months 22 days ago</span><br><span class="line">     Docs: man:podman-system-service(1)</span><br><span class="line">  Process: 50669 ExecStart=/usr/bin/podman <span class="variable">$LOGGING</span> system service (code=exited, status=0/SUCCESS)</span><br><span class="line"> Main PID: 50669 (code=exited, status=0/SUCCESS)</span><br><span class="line"></span><br><span class="line">Nov 20 18:45:07 downlaod systemd[1]: Starting Podman API Service...</span><br><span class="line">Nov 20 18:45:07 downlaod systemd[1]: Started Podman API Service.</span><br><span class="line">Nov 20 18:45:07 downlaod podman[50669]: <span class="keyword">time</span>=<span class="string">&quot;2023-11-20T18:45:07+08:00&quot;</span> level=info msg=<span class="string">&quot;/usr/bin/podman filtering at log level&gt;</span></span><br><span class="line"><span class="string">Nov 20 18:45:07 downlaod podman[50669]: time=&quot;</span>2023-11-20T18:45:07+08:00<span class="string">&quot; level=info msg=&quot;</span>Not using native diff <span class="keyword">for</span> overlay, thi&gt;</span><br><span class="line">Nov 20 18:45:07 downlaod podman[50669]: <span class="keyword">time</span>=<span class="string">&quot;2023-11-20T18:45:07+08:00&quot;</span> level=info msg=<span class="string">&quot;Setting parallel job count to 13&quot;</span></span><br><span class="line">Nov 20 18:45:07 downlaod podman[50669]: <span class="keyword">time</span>=<span class="string">&quot;2023-11-20T18:45:07+08:00&quot;</span> level=info msg=<span class="string">&quot;Using systemd socket activation to det&gt;</span></span><br><span class="line"><span class="string">Nov 20 18:45:07 downlaod podman[50669]: time=&quot;</span>2023-11-20T18:45:07+08:00<span class="string">&quot; level=info msg=&quot;</span>API service listening on \&quot;/run/podman&gt;</span><br><span class="line">Nov 20 18:45:12 downlaod systemd[1]: podman.service: Succeeded.</span><br><span class="line"></span><br><span class="line">$ <span class="built_in">cat</span> /etc/systemd/system/podman.service.d/http-proxy.conf </span><br><span class="line">[Service]</span><br><span class="line">Environment=<span class="string">&quot;HTTP_PROXY=http://192.168.21.101:7890&quot;</span></span><br><span class="line">Environment=<span class="string">&quot;HTTPS_PROXY=http://192.168.21.101:7890&quot;</span></span><br><span class="line">Environment=<span class="string">&quot;NO_PROXY=localhost,127.0.0.1,.coding.net,.tencentyun.com,.myqcloud.com,harbor.bsgchina.com&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>容器技术</category>
      </categories>
      <tags>
        <tag>Podman</tag>
        <tag>Proxy</tag>
        <tag>代理</tag>
      </tags>
  </entry>
  <entry>
    <title>K3s证书管理</title>
    <url>/2024/04/02/%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/k3s%E8%AF%81%E4%B9%A6%E7%AE%A1%E7%90%86/</url>
    <content><![CDATA[<h2 id="手动管理证书"><a href="#手动管理证书" class="headerlink" title="手动管理证书"></a>手动管理证书</h2><h3 id="生成证书"><a href="#生成证书" class="headerlink" title="生成证书"></a>生成证书</h3><p>参考<br>[[..&#x2F;杂项&#x2F;OpenSSL生成自签名证书|OpenSSL生成自签名证书]]</p>
<h3 id="导入证书"><a href="#导入证书" class="headerlink" title="导入证书"></a>导入证书</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl create secrets tls example-io-tls --key example.io.key --cert example.io.crt</span><br></pre></td></tr></table></figure>

<p>手动管理证书可忽略下边的安装过程，跳转到<a href="#Traefik%E9%85%8D%E7%BD%AE%E8%AF%81%E4%B9%A6">证书配置</a></p>
<h2 id="使用cert-manager管理证书"><a href="#使用cert-manager管理证书" class="headerlink" title="使用cert-manager管理证书"></a>使用cert-manager管理证书</h2><h3 id="部署cert-manager"><a href="#部署cert-manager" class="headerlink" title="部署cert-manager"></a>部署cert-manager</h3><p>方式一： 使用Helm部署(推荐)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 添加镜像源</span></span><br><span class="line">helm repo add jetstack https://charts.jetstack.io</span><br><span class="line"></span><br><span class="line"><span class="comment">#获取配置文件</span></span><br><span class="line">helm show values jetstack/cert-manager &gt; cert-manager-values.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 部署cert-mangaer</span></span><br><span class="line">helm upgrade cert-manager jetstack/cert-manager \</span><br><span class="line">	--namespace cert-manager \</span><br><span class="line">	--install --create-namespace \</span><br><span class="line">	--<span class="built_in">set</span> crds.enabled=<span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>方式二： 使用kubectl部署</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Kubernetes 1.16+</span></span><br><span class="line">kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.8.0/cert-manager.yaml</span><br><span class="line"><span class="comment"># Kubernetes &lt;1.16</span></span><br><span class="line">kubectl apply --validate=<span class="literal">false</span> -f https://github.com/jetstack/cert-manager/releases/download/v1.1.0/cert-manager-legacy.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># Kubernetes 1.15+</span></span><br><span class="line">kubectl apply --validate=<span class="literal">false</span> -f https://github.com/jetstack/cert-manager/releases/download/v0.16.1/cert-manager.yaml</span><br><span class="line"><span class="comment"># Kubernetes &lt;1.15</span></span><br><span class="line">kubectl apply --validate=<span class="literal">false</span> -f https://github.com/jetstack/cert-manager/releases/download/v0.16.1/cert-manager-legacy.yaml</span><br></pre></td></tr></table></figure>



<h3 id="创建ClusterIssuer-Issuer"><a href="#创建ClusterIssuer-Issuer" class="headerlink" title="创建ClusterIssuer&#x2F;Issuer"></a>创建ClusterIssuer&#x2F;Issuer</h3><h4 id="公网域名证书"><a href="#公网域名证书" class="headerlink" title="公网域名证书"></a>公网域名证书</h4><p>Issuer 与 ClusterIssuer 的区别是 ClusterIssuer 可跨命名空间使用，而 Issuer 需在每个命名空间下配置后才可使用。这里我们使用 ClusterIssuer，其类型选择 Let‘s Encrypt。</p>
<p>正式环境速率限制(<strong>每个注册域名可签发的证书数量</strong>（每周 50 份）)，使用测试环境测试一切正常后再切换正式环境。</p>
<p>letsencrypt-issuer-staging.yaml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">cert-manager.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterIssuer</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">letsencrypt-staging</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">acme:</span></span><br><span class="line">    <span class="attr">email:</span> <span class="string">&lt;YOUR</span> <span class="string">EMAIL&gt;</span> <span class="comment"># replice this </span></span><br><span class="line">    <span class="attr">server:</span> <span class="string">https://acme-staging-v02.api.letsencrypt.org/directory</span></span><br><span class="line">    <span class="attr">privateKeySecretRef:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">letsencrypt-staging</span></span><br><span class="line">    <span class="attr">solvers:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">http01:</span></span><br><span class="line">        <span class="attr">ingress:</span></span><br><span class="line">          <span class="attr">class:</span> <span class="string">traefik</span></span><br><span class="line">      <span class="attr">selector:</span> &#123;&#125;</span><br></pre></td></tr></table></figure>

<p>letsencrypt-issuer-prod</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">cert-manager.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterIssuer</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">letsencrypt-prod</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">acme:</span></span><br><span class="line">    <span class="attr">email:</span> <span class="string">&lt;YOUR</span> <span class="string">EMAIL&gt;</span> <span class="comment"># replice this </span></span><br><span class="line">    <span class="attr">server:</span> <span class="string">https://acme-v02.api.letsencrypt.org/directory</span></span><br><span class="line">    <span class="attr">privateKeySecretRef:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">letsencrypt-prod</span></span><br><span class="line">    <span class="attr">solvers:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">http01:</span></span><br><span class="line">        <span class="attr">ingress:</span></span><br><span class="line">          <span class="attr">class:</span> <span class="string">traefik</span></span><br><span class="line">      <span class="attr">selector:</span> &#123;&#125;</span><br></pre></td></tr></table></figure>


<blockquote>
<p>说明：</p>
<p>metadata.name 创建的签发机构的名称，创建证书的时候会引用<br>spec.acme.email 邮箱，证书快过期的时候会有邮件提醒，不过cert-manager会利用acme协议自动给我们重新颁发证书来续期<br>spec.acme.server acme 协议的服务端，由官方给出<br>spec.acme.privateKeySecretRef 指示此签发机构的私钥将要存储到哪个Secret对象中<br>spec.acme.solvers.http01 指示签发机构使用HTTP-01的方式进行acme协议 (还可以用DNS方式，acme协议的目的是证明这台机器和域名都是属于你的，然后才准许给你颁发证书)</p>
</blockquote>
<h4 id="自签名证书"><a href="#自签名证书" class="headerlink" title="自签名证书"></a>自签名证书</h4><p>selfsigned-issuer.yaml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">cert-manager.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterIssuer</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">selfsigned-cluster-issuer</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selfSigned:</span> &#123;&#125;</span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">cert-manager.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Certificate</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">selfsigned-ca</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">isCA:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">commonName:</span> <span class="string">selfsigned-ca</span></span><br><span class="line">  <span class="attr">secretName:</span> <span class="string">root-secret</span></span><br><span class="line">  <span class="attr">privateKey:</span></span><br><span class="line">    <span class="attr">algorithm:</span> <span class="string">ECDSA</span></span><br><span class="line">    <span class="attr">size:</span> <span class="number">256</span></span><br><span class="line">  <span class="attr">subjects:</span></span><br><span class="line">    <span class="attr">organizations:</span></span><br><span class="line">    <span class="bullet">-</span> </span><br><span class="line">  <span class="attr">issuerRef:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">selfsigned-cluster-issuer</span></span><br><span class="line">    <span class="attr">kind:</span> <span class="string">ClusterIssuer</span></span><br><span class="line">    <span class="attr">group:</span> <span class="string">cert-manager.io</span></span><br><span class="line"><span class="comment">#---    </span></span><br><span class="line"><span class="comment">## 使用自定义根证书</span></span><br><span class="line"><span class="comment">## 导入根证书 kubectl create secret tls ca-secret --key root-ca.key --cert root-ca.crt</span></span><br><span class="line"><span class="comment">#apiVersion: cert-manager.io/v1</span></span><br><span class="line"><span class="comment">#kind: ClusterIssuer</span></span><br><span class="line"><span class="comment">#metadata:</span></span><br><span class="line"><span class="comment">#  name: selfsigned-cluster-issuer</span></span><br><span class="line"><span class="comment">#spec:</span></span><br><span class="line"><span class="comment">#  ca:</span></span><br><span class="line"><span class="comment">#    secretName: ca-secret</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<blockquote>
<p>spec.subjects.organizations: </p>
</blockquote>
<h3 id="创建域名证书"><a href="#创建域名证书" class="headerlink" title="创建域名证书"></a>创建域名证书</h3><h4 id="公网域名证书-1"><a href="#公网域名证书-1" class="headerlink" title="公网域名证书"></a>公网域名证书</h4><p>example-io-tls.yaml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">cert-manager.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Certificate</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">example-io-tls</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">secretName:</span> <span class="string">example-io-secret</span> <span class="comment"># </span></span><br><span class="line">  <span class="attr">issuerRef:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">letsencrypt-staging</span> <span class="comment"># 使用自签名证书时替换为 selfsigned-cluster-issuer</span></span><br><span class="line">    <span class="attr">kind:</span> <span class="string">ClusterIssuer</span></span><br><span class="line">  <span class="attr">duration:</span> <span class="string">2160h</span></span><br><span class="line">  <span class="attr">renewBefore:</span> <span class="string">360h</span></span><br><span class="line">  <span class="attr">dnsNames:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">example.io</span></span><br><span class="line">  <span class="attr">ipAddresses:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">192.168</span><span class="number">.1</span><span class="number">.1</span></span><br></pre></td></tr></table></figure>

<p><strong>生产环境使用建议</strong></p>
<p>实际生产环境中使用cert-manager可以考虑以下建议：</p>
<ol>
<li>将CA的<code>Secret</code>及<code>Issuer</code>放在某个独立的命名空间中，与其它业务的命名空间隔离起来。</li>
<li>如果是CA类型的<code>Issuer</code>，要记得定期更新根CA证书。</li>
<li>如果服务可被公网访问，同时又不想花钱买域名证书，可以采用<code>Letsencrypt</code>类型的<code>Issuer</code>，目前支持两种方式验证域名的所有权，基于<a href="https://cert-manager.io/docs/tutorials/acme/dns-validation/#issuing-an-acme-certificate-using-dns-validation">DNS记录的验证方案</a>和基于<a href="https://cert-manager.io/docs/tutorials/acme/http-validation/#issuing-an-acme-certificate-using-http-validation">文件的HTTP验证方案</a>。</li>
<li><code>cert-manager</code>还提供<code>ingress-shim</code>方式，自动为<code>Ingress</code>资源生成证书，只需要在<code>Ingress</code>资源上打上一些标签即可，详细可参考<a href="https://cert-manager.io/docs/usage/ingress/">这里</a>。</li>
</ol>
<blockquote>
<p>spec.secretName 指示证书最终存到哪个 Secret 中</p>
<p>spec.issuerRef.kind 值为 ClusterIssuer 说明签发机构不在本 namespace 下，而是在全局</p>
<p>spec.issuerRef.name 我们创建的签发机构的名称 (ClusterIssuer.metadata.name)</p>
<p>spec.duration 证书过期时间</p>
<p>spec.renewBefore 在过期前自动更新</p>
<p>spec.dnsNames 指示该证书的可以用于哪些域名</p>
<p>spec.acme.config.http01.domains 指示该证书的可以用于哪些域名</p>
</blockquote>
<h2 id="Traefik配置证书"><a href="#Traefik配置证书" class="headerlink" title="Traefik配置证书"></a>Traefik配置证书</h2><h2 id="终端安装证书"><a href="#终端安装证书" class="headerlink" title="终端安装证书"></a>终端安装证书</h2><p>获取CA证书，root-ca.crt,k3s导出证书 参考<a href="/2024/04/02/%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/K3s%E5%AF%BC%E5%87%BA%E8%AF%81%E4%B9%A6/" title="K3s导出证书">K3s导出证书</a></p>
<hr>
<p><a href="https://cloud.tencent.com/developer/article/1402451">k8s中使用cert-manager玩转证书-腾讯云开发者社区-腾讯云 (tencent.com)</a></p>
<p><a href="https://blog.csdn.net/weixin_42562106/article/details/135709872">k8s 使用cert-manager证书管理自签-CSDN博客</a></p>
<p> <a href="https://blog.csdn.net/weixin_44692256/article/details/108274385">k8s部署cert-manager实现证书自动化_cert-manager.yaml-CSDN博客</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/610699597">Cert-Manager 实现 K8s 服务域名证书自动化续签 - 知乎 (zhihu.com)</a></p>
<p><a href="https://www.cnblogs.com/tencent-cloud-native/p/13883790.html">手把手教你使用 cert-manager 签发免费证书 - 腾讯云原生 - 博客园 (cnblogs.com)</a></p>
<p><a href="https://bowser1704.github.io/notes/using-cert-manager-k3s/">在 k3s 内使用 cert-manager 管理证书 (bowser1704.github.io)</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/129755160">用 k3s 轻松管理 SSL 证书 | Linux 中国 - 知乎</a></p>
<p><a href="https://blog.csdn.net/ai524719755/article/details/116712931">k8s中级篇-cert-manager+Let‘s Encrypt自动证书签发_cert-manager let’s encrypt-CSDN博客</a><br><a href="https://cloud.tencent.com/developer/article/2347486">k3s 使用 Letsencrypt 和 Traefik 完成 https 入口部署-腾讯云开发者社区-腾讯云 (tencent.com)</a></p>
<p><a href="https://cloud.tencent.com/document/product/457/49368#Certificate">容器服务 使用 cert-manager 签发免费证书-实践教程-文档中心-腾讯云 (tencent.com)</a></p>
<p><a href="https://www.taoyouh.cn/archives/2495">使用cert-manager为Traefik IngressRoute自动签发Let’s Encrypt证书 – 桃又的技术笔记 (taoyouh.cn)</a></p>
<p>内网证书</p>
<p><a href="https://www.cnblogs.com/dandelion/p/14083023.html">cert-manager管理内网k8s开发环境证书 - hueidou163 - 博客园 (cnblogs.com)</a></p>
<p><a href="https://k8s-docs.github.io/cert-manager-docs/configuration/selfsigned/">SelfSigned - cert-manager (k8s-docs.github.io)</a></p>
<p><a href="https://blog.csdn.net/weixin_42562106/article/details/135709872">k8s 使用cert-manager证书管理自签-CSDN博客</a></p>
<p><a href="https://cloud.tencent.com/developer/article/2344898">Kubernetes (K8S) 中Traefik自动申请证书-腾讯云开发者社区-腾讯云 (tencent.com)</a></p>
<p><a href="https://blog.csdn.net/hknaruto/article/details/107806644">k8s ingress配置自签名证书，并解决Kubernetes Ingress Controller Fake Certificate-CSDN博客</a></p>
<p><a href="https://www.cnblogs.com/vpc123/articles/14407062.html">K8s &amp; K3s 集群中应用自动签发 Https 证书 - 流雨声 - 博客园 (cnblogs.com)</a></p>
]]></content>
      <categories>
        <category>容器技术</category>
      </categories>
      <tags>
        <tag>Https证书</tag>
        <tag>Kubernetes</tag>
        <tag>K3s</tag>
        <tag>TLS</tag>
        <tag>cert-manager</tag>
      </tags>
  </entry>
  <entry>
    <title>kubectl管理多集群</title>
    <url>/2025/08/13/%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/kubectl%E7%AE%A1%E7%90%86%E5%A4%9A%E9%9B%86%E7%BE%A4/</url>
    <content><![CDATA[<h2 id="1-K3s指定集群管理IP"><a href="#1-K3s指定集群管理IP" class="headerlink" title="1. K3s指定集群管理IP"></a>1. K3s指定集群管理IP</h2><p>在k3s.service中添加启动参数</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">--advertise-address=&lt;192.168.x.x&gt;</span><br></pre></td></tr></table></figure>
<p>详细参考<a href="https://docs.rancher.cn/docs/k3s/installation/install-options/server-config/_index/">官方文档</a>以及 <a href="K3S%E5%AE%89%E8%A3%85.md">K3S安装</a></p>
<p>查看当前Context</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl config current-context</span><br></pre></td></tr></table></figure>

<h2 id="2-配置集群信息"><a href="#2-配置集群信息" class="headerlink" title="2. 配置集群信息"></a>2. 配置集群信息</h2><p>查看context列表</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl config get-contexts</span><br></pre></td></tr></table></figure>
<p>输出中带有*的<code>Context</code>表示当前活动的<code>Context</code></p>
<p>切换到指定<code>Context</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl config use-context &lt;context_name&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 示例：切换到dev-ctx</span></span><br><span class="line">kubectl config use-context dev-ctx</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p> 在指定Context中执行命令，一般用于临时使用</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl  --context=&lt;context_name&gt; &lt;exec_cmd&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 示例：在dev-ctx下执行get pods</span></span><br><span class="line">kubectl --context=dev-ctx get pods</span><br></pre></td></tr></table></figure>

<h2 id="3-合并配置文件"><a href="#3-合并配置文件" class="headerlink" title="3. 合并配置文件"></a>3. 合并配置文件</h2><p>在 Kubernetes 环境中，使用 <em>kubectl</em> 管理多个集群非常常见。通过配置 <em>kubeconfig</em> 文件，可以轻松切换和管理多个集群。以下是实现方法的详细步骤。</p>
<p>方法 1: 合并多个配置文件</p>
<ul>
<li><p><strong>准备配置文件</strong> 假设已有两个集群的配置文件：_<del>&#x2F;.kube&#x2F;config1_ 和 _</del>&#x2F;.kube&#x2F;config2_。</p>
</li>
<li><p><strong>合并配置文件</strong> 使用以下命令将多个配置文件合并为一个：</p>
</li>
</ul>
<p>KUBECONFIG&#x3D;<del>&#x2F;.kube&#x2F;config1:</del>&#x2F;.kube&#x2F;config2 kubectl config view –merge –flatten &gt; ~&#x2F;.kube&#x2F;config</p>
<ul>
<li><strong>验证合并结果</strong> 查看合并后的配置：</li>
</ul>
<p>kubectl config view</p>
<p>方法 2: 配置环境变量</p>
<ul>
<li><strong>设置环境变量</strong> 将多个配置文件路径添加到 <em>KUBECONFIG</em> 环境变量中：</li>
</ul>
<p>export KUBECONFIG&#x3D;<del>&#x2F;.kube&#x2F;config:</del>&#x2F;.kube&#x2F;test-config</p>
<ul>
<li><strong>验证配置</strong> 执行以下命令查看所有集群信息：</li>
</ul>
<p>kubectl config get-contexts</p>
<p>方法 3: 手动编辑配置文件</p>
<ul>
<li><p><strong>打开配置文件</strong> 编辑 <em>~&#x2F;.kube&#x2F;config</em> 文件，将其他集群的 <em>cluster_、_context</em> 和 <em>user</em> 信息粘贴到现有配置中。</p>
</li>
<li><p><strong>格式示例</strong>：</p>
</li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"></span><br><span class="line"><span class="attr">clusters:</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">cluster:</span></span><br><span class="line"></span><br><span class="line"><span class="attr">server:</span> <span class="string">https://127.0.0.1:6443</span></span><br><span class="line"></span><br><span class="line"><span class="attr">name:</span> <span class="string">cluster1</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">cluster:</span></span><br><span class="line"></span><br><span class="line"><span class="attr">server:</span> <span class="string">https://192.168.0.1:6443</span></span><br><span class="line"></span><br><span class="line"><span class="attr">name:</span> <span class="string">cluster2</span></span><br><span class="line"></span><br><span class="line"><span class="attr">contexts:</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">context:</span></span><br><span class="line"></span><br><span class="line"><span class="attr">cluster:</span> <span class="string">cluster1</span></span><br><span class="line"></span><br><span class="line"><span class="attr">user:</span> <span class="string">user1</span></span><br><span class="line"></span><br><span class="line"><span class="attr">name:</span> <span class="string">context1</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">context:</span></span><br><span class="line"></span><br><span class="line"><span class="attr">cluster:</span> <span class="string">cluster2</span></span><br><span class="line"></span><br><span class="line"><span class="attr">user:</span> <span class="string">user2</span></span><br><span class="line"></span><br><span class="line"><span class="attr">name:</span> <span class="string">context2</span></span><br><span class="line"></span><br><span class="line"><span class="attr">current-context:</span> <span class="string">context1</span></span><br></pre></td></tr></table></figure>
<p>切换集群上下文</p>
<ul>
<li><p>查看当前上下文：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kubectl config current-context</span><br></pre></td></tr></table></figure>

</li>
<li><p>切换到其他上下文：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">kubectl config use-context &lt;context_name&gt;</span><br></pre></td></tr></table></figure>
<p>最佳实践</p>
</li>
<li><p>使用合并或环境变量的方法更高效，避免手动编辑出错。</p>
</li>
<li><p>定期备份 <em>kubeconfig</em> 文件，防止误操作导致数据丢失。</p>
</li>
<li><p>确保每个集群的访问凭证和权限正确无误。</p>
</li>
</ul>
<p>通过以上方法，您可以轻松管理多个 Kubernetes 集群，提高运维效率。</p>
<p>大家好！在 <a href="https://so.csdn.net/so/search?q=%E4%BA%91%E5%8E%9F%E7%94%9F&spm=1001.2101.3001.7020">云原生</a> 的世界里，和 Kubernetes 打交道是家常便饭。如果我们像我一样，需要同时管理多个 Kubernetes 集群——比如一个用于严谨发布的 <strong>生产环境</strong> ，一个用于大胆实验的 <strong>测试环境</strong> ，甚至还有本地开发环境——那么高效、安全地在它们之间切换就成了必备技能。</p>
<p>很多朋友（包括我自己有时也会！）可能会因为一段时间没用而忘记 <code>kubectl</code> 中那些用于切换配置的命令。别担心，这很正常！今天，我们就来系统地回顾一下 <code>kubectl</code> 配置管理的核心概念—— <strong>上下文（Context）</strong> ，以及如何利用它在不同集群间自如切换。</p>
<h4 id="核心概念：kubeconfig-文件与上下文（Context）"><a href="#核心概念：kubeconfig-文件与上下文（Context）" class="headerlink" title="核心概念：kubeconfig 文件与上下文（Context）"></a>核心概念：kubeconfig 文件与上下文（Context）</h4><p><code>kubectl</code> 的所有配置信息都存储在一个或多个 YAML 文件中，默认情况下是 <code>$HOME/.kube/config</code> 。这个文件我们通常称为 <code>kubeconfig</code> 文件。把它想象成我们的 Kubernetes “护照”，里面记录了我们能访问哪些集群，用什么身份访问。</p>
<p>一个 <code>kubeconfig</code> 文件通常包含三个主要部分：</p>
<ol>
<li><strong>Clusters（集群）</strong> ：定义了我们要连接的 Kubernetes 集群的信息，比如 API Server 的地址和集群的 CA 证书。</li>
<li><strong>Users（用户）</strong> ：定义了访问集群所使用的凭证，可能是用户名&#x2F;密码、Token 或客户端证书。</li>
<li><strong>Contexts（上下文）</strong> ：这是连接 <strong>集群</strong> 和 <strong>用户</strong> 的桥梁。一个 Context 定义了使用哪个 User 凭证去访问哪个 Cluster。</li>
</ol>
<p><strong>关键点：</strong> 我们可以通过切换 <strong>Context</strong> 来改变 <code>kubectl</code> 当前操作的目标集群和使用的身份。</p>
<h4 id="管理-kubeconfig-的常用-kubectl-config-命令"><a href="#管理-kubeconfig-的常用-kubectl-config-命令" class="headerlink" title="管理 kubeconfig 的常用 kubectl config 命令"></a>管理 kubeconfig 的常用 kubectl config 命令</h4><p><code>kubectl</code> 提供了一套 <code>config</code> 子命令来帮助我们查看和管理 <code>kubeconfig</code> 文件。以下是几个最核心、最常用的命令：</p>
<h5 id="1-查看当前配置：kubectl-config-view"><a href="#1-查看当前配置：kubectl-config-view" class="headerlink" title="1. 查看当前配置：kubectl config view"></a>1. 查看当前配置：kubectl config view</h5><p>这个命令会显示我们当前的 <code>kubeconfig</code> 文件内容（或者合并后的内容，如果我们配置了多个文件）。它会隐藏敏感信息（如证书和 Token 的具体内容），非常适合快速检查配置概览。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl config view</span><br><span class="line">bash1</span><br></pre></td></tr></table></figure>

<p>如果我们想看某个特定 Context 的详细信息，可以加上 <code>--context</code> 参数：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看名为 &#x27;prod-cluster&#x27; 的 context 细节</span></span><br><span class="line">kubectl config view --context=prod-cluster</span><br><span class="line">bash12</span><br></pre></td></tr></table></figure>

<h5 id="2-列出所有可用的上下文：kubectl-config-get-contexts"><a href="#2-列出所有可用的上下文：kubectl-config-get-contexts" class="headerlink" title="2. 列出所有可用的上下文：kubectl config get-contexts"></a>2. 列出所有可用的上下文：kubectl config get-contexts</h5><p>这是 <strong>最常用</strong> 的命令之一，它会列出我们在 <code>kubeconfig</code> 文件中定义的所有 Context。当前正在使用的 Context 会在名称前用星号 <code>*</code> 标记。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl config get-contexts</span><br><span class="line"><span class="comment"># 输出示例：</span></span><br><span class="line"><span class="comment"># CURRENT   NAME                 CLUSTER              AUTHINFO             NAMESPACE</span></span><br><span class="line"><span class="comment"># * test-cluster         kubernetes-test      user-test</span></span><br><span class="line"><span class="comment">#           prod-cluster         kubernetes-prod      user-prod            production</span></span><br><span class="line"><span class="comment">#           docker-desktop       docker-desktop       docker-desktop</span></span><br><span class="line">bash123456</span><br></pre></td></tr></table></figure>

<p>从上面的输出可以清晰地看到：</p>
<ul>
<li>当前激活的 Context 是 <code>test-cluster</code> 。</li>
<li>还有名为 <code>prod-cluster</code> 和 <code>docker-desktop</code> 的 Context 可供切换。</li>
</ul>
<h5 id="3-查看当前使用的上下文：kubectl-config-current-context"><a href="#3-查看当前使用的上下文：kubectl-config-current-context" class="headerlink" title="3. 查看当前使用的上下文：kubectl config current-context"></a>3. 查看当前使用的上下文：kubectl config current-context</h5><p>如果我们只想快速确认当前 <code>kubectl</code> 命令会作用于哪个 Context（哪个集群），这个命令最直接：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl config current-context</span><br><span class="line"><span class="comment"># 输出示例：</span></span><br><span class="line"><span class="comment"># test-cluster</span></span><br><span class="line">bash123</span><br></pre></td></tr></table></figure>

<h5 id="4-切换上下文：kubectl-config-use-context"><a href="#4-切换上下文：kubectl-config-use-context" class="headerlink" title="4. 切换上下文：kubectl config use-context "></a>4. 切换上下文：kubectl config use-context <context-name></h5><p>这绝对是 <strong>核心中的核心</strong> ！当我们需要将 <code>kubectl</code> 的操作目标从一个集群切换到另一个集群时，就使用这个命令。</p>
<p>假设我们想从当前的 <code>test-cluster</code> 切换到 <code>prod-cluster</code> ：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl config use-context prod-cluster</span><br><span class="line"><span class="comment"># 输出示例：</span></span><br><span class="line"><span class="comment"># Switched to context &quot;prod-cluster&quot;.</span></span><br><span class="line">bash123</span><br></pre></td></tr></table></figure>

<p>切换成功后，我们可以再次使用 <code>kubectl config current-context</code> 或 <code>kubectl config get-contexts</code> 来验证当前上下文是否已更改。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl config current-context</span><br><span class="line"><span class="comment"># 输出示例：</span></span><br><span class="line"><span class="comment"># prod-cluster</span></span><br><span class="line"></span><br><span class="line">kubectl config get-contexts</span><br><span class="line"><span class="comment"># 输出示例：</span></span><br><span class="line"><span class="comment"># CURRENT   NAME                 CLUSTER              AUTHINFO             NAMESPACE</span></span><br><span class="line"><span class="comment">#           test-cluster         kubernetes-test      user-test</span></span><br><span class="line"><span class="comment"># * prod-cluster         kubernetes-prod      user-prod            production</span></span><br><span class="line"><span class="comment">#           docker-desktop       docker-desktop       docker-desktop</span></span><br><span class="line">bash12345678910</span><br></pre></td></tr></table></figure>

<p>现在，所有后续的 <code>kubectl</code> 命令（如 <code>kubectl get pods</code>, <code>kubectl apply -f ...</code> 等）都会默认发送到 <code>prod-cluster</code> 所定义的集群，并使用 <code>user-prod</code> 的身份进行认证。</p>
<h4 id="实践场景：在生产和测试集群间切换"><a href="#实践场景：在生产和测试集群间切换" class="headerlink" title="实践场景：在生产和测试集群间切换"></a>实践场景：在生产和测试集群间切换</h4><p>假设我们的 <code>kubeconfig</code> 文件中已经配置好了代表生产环境和 <a href="https://so.csdn.net/so/search?q=%E6%B5%8B%E8%AF%95%E7%8E%AF%E5%A2%83&spm=1001.2101.3001.7020">测试环境</a> 的 Context，可能分别命名为 <code>production</code> 和 <code>testing</code> 。</p>
<p>我们的日常操作流程可能是这样的：</p>
<ol>
<li><strong>检查当前在哪：</strong> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl config current-context</span><br><span class="line">bash1</span><br></pre></td></tr></table></figure>
 或者看列表： <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl config get-contexts</span><br><span class="line">bash1</span><br></pre></td></tr></table></figure></li>
<li><strong>需要操作测试环境：</strong> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl config use-context testing</span><br><span class="line"><span class="comment"># 验证一下（可选但推荐）</span></span><br><span class="line">kubectl config current-context</span><br><span class="line"><span class="comment"># 现在可以对测试环境执行操作了</span></span><br><span class="line">kubectl get pods -n test-namespace</span><br><span class="line">bash12345</span><br></pre></td></tr></table></figure></li>
<li><strong>需要紧急处理生产环境问题：</strong> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl config use-context production</span><br><span class="line"><span class="comment"># 验证一下</span></span><br><span class="line">kubectl config current-context</span><br><span class="line"><span class="comment"># 操作生产环境（请务必小心！）</span></span><br><span class="line">kubectl get deployment -n critical-app</span><br><span class="line">bash12345</span><br></pre></td></tr></table></figure></li>
<li><strong>完成生产环境操作，切回测试环境继续工作：</strong> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl config use-context testing</span><br><span class="line">bash1</span><br></pre></td></tr></table></figure></li>
</ol>
<h4 id="提升效率的小贴士"><a href="#提升效率的小贴士" class="headerlink" title="提升效率的小贴士"></a>提升效率的小贴士</h4><ol>
<li><strong>清晰命名 Context</strong> ：给我们的 Context 起一个能清晰表明环境和用途的名字，比如 <code>gke-prod-eu</code>, <code>eks-dev-us</code>, <code>local-minikube</code> 等。避免使用模糊不清的名字。</li>
<li><strong>使用 Shell 别名</strong> ：很多人喜欢为 <code>kubectl</code> 设置别名，比如 <code>alias k=kubectl</code> 。这样我们的命令可以更短： <code>k config get-contexts</code>, <code>k config use-context my-context</code> 。</li>
<li><strong>考虑使用辅助工具</strong> ：社区有一些流行的小工具可以让我们更方便地切换 Context 和 Namespace，例如：<ul>
<li><code>kubectx</code> (用于切换 Context)</li>
<li><code>kubens</code> (用于切换 Namespace)<br>  这些工具通常提供交互式选择或更简洁的命令，可以显著提高效率。可以通过包管理器（如 Homebrew, apt, yum）或直接下载二进制文件来安装它们。</li>
</ul>
</li>
<li><strong>注意 <code>kubeconfig</code> 文件的安全性</strong> ： <code>kubeconfig</code> 文件包含了访问集群的凭证，务必妥善保管，不要泄露给未授权的人员。</li>
</ol>
<h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>管理多个 Kubernetes 集群配置并不复杂，核心就在于理解和运用 <code>kubeconfig</code> 文件中的 <strong>Context</strong> 概念。通过掌握 <code>kubectl config</code> 的几个关键子命令：</p>
<ul>
<li><code>view</code>: 查看配置概览</li>
<li><code>get-contexts</code>: 列出所有可用上下文</li>
<li><code>current-context</code>: 显示当前激活的上下文</li>
<li><code>use-context &lt;context-name&gt;</code>: <strong>切换到指定的上下文</strong></li>
</ul>
<p>我们就能轻松地在不同的 Kubernetes 环境（如生产和测试）之间安全、高效地切换了。希望这篇回顾能帮我们重新找回操作 <code>kubectl</code> 多集群配置的熟悉感！</p>
<img src="/2025/08/13/%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/kubectl%E7%AE%A1%E7%90%86%E5%A4%9A%E9%9B%86%E7%BE%A4/IMG-20250813105026288.png" class="">

<img src="/2025/08/13/%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/kubectl%E7%AE%A1%E7%90%86%E5%A4%9A%E9%9B%86%E7%BE%A4/IMG-20250813105127343.png" class="">]]></content>
      <categories>
        <category>容器技术</category>
      </categories>
  </entry>
  <entry>
    <title>使用Podman替代DockerDesktop</title>
    <url>/2025/06/25/%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/%E4%BD%BF%E7%94%A8Podman%E6%9B%BF%E4%BB%A3DockerDesktop/</url>
    <content><![CDATA[<ol>
<li><p>安装依赖环境</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 启用虚拟化平台</span></span><br><span class="line">dism /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart</span><br><span class="line"></span><br><span class="line"><span class="comment">#　启用linux子系统</span></span><br><span class="line">dism /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all</span><br><span class="line"></span><br><span class="line">wsl --install</span><br><span class="line">wsl --update</span><br></pre></td></tr></table></figure>
</li>
<li><p>安装Podman </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装DockerCLI，用于兼容Docker命令</span></span><br><span class="line">winget install --<span class="built_in">id</span> Docker.DockerCLI</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装Podman</span></span><br><span class="line">winget install --<span class="built_in">id</span> RedHat.Podman</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装Podman Desktop (可选)</span></span><br><span class="line">winget install --<span class="built_in">id</span> RedHat.Podman-Desktop </span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化Podman</span></span><br><span class="line">podman machine init </span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置端口转发</span></span><br><span class="line">wsl <span class="built_in">sudo</span> sysctl net.ipv4.ip_forward=1</span><br></pre></td></tr></table></figure>
</li>
<li><p>配置wsl虚拟机</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 修改默认软件源</span><br><span class="line">sudo sed -e &#x27;s|^metalink=|#metalink=|g&#x27; \</span><br><span class="line">    -e &#x27;s|^#baseurl=http://download.example/pub/fedora/linux|baseurl=https://mirrors.tuna.tsinghua.edu.cn/fedora|g&#x27; \</span><br><span class="line">    -i.bak \</span><br><span class="line">    /etc/yum.repos.d/fedora.repo \</span><br><span class="line">    /etc/yum.repos.d/fedora-updates.repo</span><br><span class="line">sudo dnf makecache</span><br></pre></td></tr></table></figure>
</li>
<li><p>测试</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run --rm -d -p 80:80 --name httpd docker.io/library/httpd:latest</span><br></pre></td></tr></table></figure></li>
<li><p>配置镜像加速<br>podman的配置文件在容器内 <code>/etc/containers/registries.conf</code>,配置格式如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">unqualified-search-regustrues = [&quot;docker.io&quot;]</span><br><span class="line"></span><br><span class="line">[[registry]]                      # 注意此处配置不需要加&#x27;https&#x27;</span><br><span class="line">prefix = &quot;docker.io&quot;              # 访问地址</span><br><span class="line">location = &quot;docker.m.daocloud.io&quot; # 加速地址</span><br></pre></td></tr></table></figure>
</li>
<li><p>配置私有镜像库</p>
</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[[registry]]</span><br><span class="line">location = &quot;harbor.example.io&quot;</span><br><span class="line">insecure = true</span><br></pre></td></tr></table></figure>
<p>如果访问地址为<code>https</code>需要配置信任证书</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> <span class="built_in">mkdir</span> /etc/containers/certs.d</span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">cp</span> &lt;path to cert&gt; /etc/containers/certs.d/ca.crt</span><br></pre></td></tr></table></figure>

<ol start="6">
<li>配置文件翻译<figure class="highlight toml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 有关此配置文件的更多信息，请参阅 containers-registries.conf(5)。</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 注意：使用未完全限定镜像名称的风险</span></span><br><span class="line"><span class="comment"># 我们建议始终使用包括注册表服务器（完整 DNS 名称）、命名空间、镜像名称和标签在内的完全限定镜像名称</span></span><br><span class="line"><span class="comment"># （例如，registry.redhat.io/ubi8/ubi:latest）。通过摘要（例如，</span></span><br><span class="line"><span class="comment"># quay.io/repository/name@digest）拉取镜像可以进一步消除标签的不确定性。</span></span><br><span class="line"><span class="comment"># 使用短名称时，始终存在镜像被伪造的风险。例如，用户想从某个注册表中拉取名为</span></span><br><span class="line"><span class="comment"># `foobar` 的镜像，并期望该镜像来自 myregistry.com。如果</span></span><br><span class="line"><span class="comment"># myregistry.com 不是搜索列表中的第一个，攻击者可能会在列表中靠前的位置</span></span><br><span class="line"><span class="comment"># 放置另一个名为 `foobar` 的镜像。用户可能会意外拉取并运行攻击者的镜像和代码，而不是</span></span><br><span class="line"><span class="comment"># 预期的内容。我们建议只添加完全可信的注册表（即，不允许未知或匿名用户</span></span><br><span class="line"><span class="comment"># 创建任意名称的账户的注册表）。这将防止镜像被伪造、抢占或以其他方式变得不安全。</span></span><br><span class="line"><span class="comment"># 如果有必要使用这些注册表，它应该添加到列表的末尾。</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># # 一个主机[:端口]格式的注册表数组，当拉取未完全限定镜像时，按顺序尝试这些注册表。</span></span><br><span class="line"><span class="attr">unqualified-search-registries</span> = [<span class="string">&quot;registry.fedoraproject.org&quot;</span>, <span class="string">&quot;registry.access.redhat.com&quot;</span>, <span class="string">&quot;docker.io&quot;</span>]</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># [[registry]]</span></span><br><span class="line"><span class="comment"># # &quot;prefix&quot; 字段用于选择相关的 [[registry]] TOML 表；</span></span><br><span class="line"><span class="comment"># # 使用输入镜像名称时，只有与该名称最长匹配的 TOML 表会被使用</span></span><br><span class="line"><span class="comment"># # （考虑到命名空间/库/标签/摘要分隔符）。</span></span><br><span class="line"><span class="comment"># #</span></span><br><span class="line"><span class="comment"># # 如果缺少 prefix 字段，则默认与 &quot;location&quot; 字段相同。</span></span><br><span class="line"><span class="attr">prefix</span> = <span class="string">&quot;example.com/foo&quot;</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># # 如果为 true，则允许未加密的 HTTP 连接以及使用不受信任证书的 TLS 连接。</span></span><br><span class="line"><span class="attr">insecure</span> = <span class="literal">false</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># # 如果为 true，则禁止拉取匹配名称的镜像。</span></span><br><span class="line"><span class="attr">blocked</span> = <span class="literal">false</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># # &quot;prefix&quot; 所在命名空间的物理位置。</span></span><br><span class="line"><span class="comment"># #</span></span><br><span class="line"><span class="comment"># # 默认情况下，与 &quot;prefix&quot; 相同（在这种情况下，可以省略 &quot;prefix&quot;，并且 [[registry]] TOML 表只指定 &quot;location&quot;）。</span></span><br><span class="line"><span class="comment"># #</span></span><br><span class="line"><span class="comment"># # 例如：假设</span></span><br><span class="line"><span class="comment"># #   prefix = &quot;example.com/foo&quot;</span></span><br><span class="line"><span class="comment"># #   location = &quot;internal-registry-for-example.net/bar&quot;</span></span><br><span class="line"><span class="comment"># # 那么对镜像 example.com/foo/myimage:latest 的请求实际上会与</span></span><br><span class="line"><span class="comment"># # internal-registry-for-example.net/bar/myimage:latest 镜像匹配。</span></span><br><span class="line"><span class="attr">location</span> = <span class="string">&quot;internal-registry-for-example.com/bar&quot;</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># # &quot;prefix&quot; 所在命名空间的（可能部分的）镜像。</span></span><br><span class="line"><span class="comment"># #</span></span><br><span class="line"><span class="comment"># # 将按指定顺序尝试这些镜像；第一个可以联系到并包含镜像的将被使用</span></span><br><span class="line"><span class="comment"># # （如果所有镜像都没有该镜像，则最后尝试 &quot;registry.location&quot; 字段指定的主位置，或者使用未修改的用户指定引用）。</span></span><br><span class="line"><span class="comment"># #</span></span><br><span class="line"><span class="comment"># # &quot;mirror&quot; 数组中的每个 TOML 表可以包含以下字段，语义与直接在 [[registry]] TOML 表中指定的相同：</span></span><br><span class="line"><span class="comment"># # - location</span></span><br><span class="line"><span class="comment"># # - insecure</span></span><br><span class="line"><span class="section">[[registry.mirror]]</span></span><br><span class="line"><span class="attr">location</span> = <span class="string">&quot;example-mirror-0.local/mirror-for-foo&quot;</span></span><br><span class="line"><span class="section">[[registry.mirror]]</span></span><br><span class="line"><span class="attr">location</span> = <span class="string">&quot;example-mirror-1.local/mirrors/foo&quot;</span></span><br><span class="line"><span class="attr">insecure</span> = <span class="literal">true</span></span><br><span class="line"><span class="comment"># # 根据上述配置，拉取 example.com/foo/image:latest 时将按顺序尝试：</span></span><br><span class="line"><span class="comment"># # 1. example-mirror-0.local/mirror-for-foo/image:latest</span></span><br><span class="line"><span class="comment"># # 2. example-mirror-1.local/mirrors/foo/image:latest</span></span><br><span class="line"><span class="comment"># # 3. internal-registry-for-example.net/bar/image:latest</span></span><br><span class="line"><span class="comment"># # 并使用第一个存在的镜像。</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># short-name-mode=&quot;enforcing&quot;</span></span><br><span class="line"><span class="comment"># 强制使用完全限定镜像名称</span></span><br><span class="line">​</span><br><span class="line"><span class="section">[[registry]]</span></span><br><span class="line"><span class="attr">location</span>=<span class="string">&quot;localhost:5000&quot;</span></span><br><span class="line"><span class="attr">insecure</span>=<span class="literal">true</span></span><br><span class="line"><span class="comment"># 允许使用不安全的连接拉取本地镜像。</span></span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>容器技术</category>
      </categories>
      <tags>
        <tag>Docker</tag>
        <tag>Podman</tag>
      </tags>
  </entry>
  <entry>
    <title>制作Helm镜像</title>
    <url>/2024/07/22/%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/%E5%88%B6%E4%BD%9CHelm%E9%95%9C%E5%83%8F/</url>
    <content><![CDATA[<p><a href="https://blog.csdn.net/qq_34556414/article/details/113248570">Helm 从入门到实践 | 从 0 开始制作一个 Helm Charts-CSDN博客</a></p>
]]></content>
      <categories>
        <category>容器技术</category>
      </categories>
      <tags>
        <tag>Helm</tag>
      </tags>
  </entry>
  <entry>
    <title>国内常用源镜像地址</title>
    <url>/2024/04/01/%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/%E5%9B%BD%E5%86%85%E5%B8%B8%E7%94%A8%E6%BA%90%E9%95%9C%E5%83%8F%E5%9C%B0%E5%9D%80/</url>
    <content><![CDATA[<h4 id="Linux-源"><a href="#Linux-源" class="headerlink" title="Linux 源"></a>Linux 源</h4><p>清华 <a href="https://mirrors.tuna.tsinghua.edu.cn/">https://mirrors.tuna.tsinghua.edu.cn</a></p>
<p>阿里 <a href="http://mirrors.aliyun.com/">http://mirrors.aliyun.com</a></p>
<p>腾讯 <a href="https://mirrors.tencent.com/">https://mirrors.tencent.com</a></p>
<p>华为 <a href="https://mirrors.huaweicloud.com/">https://mirrors.huaweicloud.com</a></p>
<p>中国科技大学 <a href="https://mirrors.ustc.edu.cn/">https://mirrors.ustc.edu.cn</a></p>
<p>华中科技大学 <a href="http://mirror.hust.edu.cn/">http://mirror.hust.edu.cn</a></p>
<h4 id="Docker-镜像仓库"><a href="#Docker-镜像仓库" class="headerlink" title="Docker 镜像仓库"></a>Docker 镜像仓库</h4><h5 id="DockerHub-docker-io"><a href="#DockerHub-docker-io" class="headerlink" title="DockerHub(docker.io)"></a>DockerHub(docker.io)</h5><p>网易 <a href="http://hub-mirror.c.163.com/">http://hub-mirror.c.163.com</a></p>
<p>中国科技大学 <a href="https://docker.mirrors.ustc.edu.cn/">https://docker.mirrors.ustc.edu.cn</a>  (不可用)</p>
<p>道客 <a href="https://docker.m.daocloud.cn/">https://docker.m.daocloud.cn</a> (参考<a href="https://docs.daocloud.io/community/mirror/">官方文档</a>)</p>
<p>腾讯 <a href="https://mirror.ccs.tencentyun.com/">https://mirror.ccs.tencentyun.com</a></p>
<p>华为 <a href="https://mirror.swr.myhuaweicloud.com/">https://mirror.swr.myhuaweicloud.com</a></p>
<p>阿里云 <a href="https://registry.cn-hangzhou.aliyuncs.com/">https://registry.cn-hangzhou.aliyuncs.com</a></p>
<p>[^注]: 阿里可申请私有加速，需<a href="https://cr.console.aliyun.com/">注册</a>账号,注册后地址修改为 https:&#x2F;&#x2F;{私有ID}.mirror.aliyuncs.com。详细信息参考<a href="https://help.aliyun.com/zh/acr/user-guide/accelerate-the-pulls-of-docker-official-images">官方文档</a></p>
<h5 id="谷歌镜像仓库-gcr-io-k8s-gcr-io"><a href="#谷歌镜像仓库-gcr-io-k8s-gcr-io" class="headerlink" title="谷歌镜像仓库(gcr.io k8s.gcr.io)"></a>谷歌镜像仓库(gcr.io k8s.gcr.io)</h5><p>阿里 <a href="https://registry.aliyuncs.com/google_containers">https://registry.aliyuncs.com/google_containers</a></p>
<p>中科大 <a href="https://gcr.mirrors.ustc.edu.cn/">https://gcr.mirrors.ustc.edu.cn</a> (2022.8之后不再更新镜像,校外访问返回403)</p>
<p>华为 <a href="https://mirror.swr.myhuaweicloud.com/">https://mirror.swr.myhuaweicloud.com</a></p>
<p>道客 <a href="https://m.daocloud.io/k8s.gcr.io">https://m.daocloud.io/k8s.gcr.io</a> <a href="https://docs.daocloud.io/community/mirror">文档</a></p>
<h5 id="CoreOS镜像仓库-quay-io"><a href="#CoreOS镜像仓库-quay-io" class="headerlink" title="CoreOS镜像仓库(quay.io )"></a>CoreOS镜像仓库(quay.io )</h5><p>道客 <a href="https://m.daocloud.io/quay.io">https://m.daocloud.io/quay.io</a> 参考支<a href="https://docs.daocloud.io/community/mirror.html#_3">持镜像列表</a></p>
<h5 id="Github镜像仓库-ghcr-io"><a href="#Github镜像仓库-ghcr-io" class="headerlink" title="Github镜像仓库(ghcr.io )"></a>Github镜像仓库(ghcr.io )</h5><p>道客 <a href="https://m.daocloud.io/ghcr.io">https://m.daocloud.io/ghcr.io</a> 参考支<a href="https://docs.daocloud.io/community/mirror.html#_3">持镜像列表</a></p>
<h5 id="Helm-源"><a href="#Helm-源" class="headerlink" title="Helm 源"></a>Helm 源</h5><p>ArtifactHub <a href="https://artifacthub.io/">https://artifacthub.io/</a></p>
<p>华为 <a href="https://mirrors.huaweicloud.com/helm/">https://mirrors.huaweicloud.com/helm/</a></p>
<p>bitnami <a href="https://charts.bitnami.com/bitnami">https://charts.bitnami.com/bitnami</a></p>
<p>Google <a href="https://gcr.io/kubernetes-helm">https://gcr.io/kubernetes-helm</a></p>
<h4 id="容器配置"><a href="#容器配置" class="headerlink" title="容器配置"></a>容器配置</h4><p>Docker(&#x2F;etc&#x2F;docker&#x2F;daemon.json )</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">&quot;registry-mirrors&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="string">&quot;https://registry.docker-cn.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;https://docker.mirrors.ustc.edu.cn&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;http://hub-mirror.c.163.com&quot;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;insecure-registries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;exec-opts&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="string">&quot;native.cgroupdriver=systemd&quot;</span><span class="punctuation">]</span></span><br><span class="line"></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<p>Containerd(&#x2F;etc&#x2F;containerd&#x2F;config.toml)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">[plugins.cri.registry]</span><br><span class="line">[plugins.cri.registry.mirrors]</span><br><span class="line">[plugins.cri.registry.mirrors.&quot;quay.io&quot;]</span><br><span class="line">endpoint = [&quot;https://quay.tencentcloudcr.com&quot;]</span><br><span class="line">[plugins.cri.registry.mirrors.&quot;docker.io&quot;]</span><br><span class="line">endpoint = [&quot;https://mirror.ccs.tencentyun.com&quot;]</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>K3s中Containerd容器(&#x2F;var&#x2F;lib&#x2F;rancher&#x2F;k3s&#x2F;agent&#x2F;etc&#x2F;containerd&#x2F;config.toml)</p>
<p>K3s 默认的 containerd 配置文件目录为&#x2F;var&#x2F;lib&#x2F;rancher&#x2F;k3s&#x2F;agent&#x2F;etc&#x2F;containerd&#x2F;config.toml，但直接操作 containerd 的配置文件去设置镜像仓库或加速器相比于操作 docker 要复杂许多。K3s 为了简化配置 containerd 镜像仓库的复杂度，K3s 会在启动时检查&#x2F;etc&#x2F;rancher&#x2F;k3s&#x2F;中是否存在  文件，如果存在该文件，就会根据 registries.yaml 的内容转换为 containerd 的配置并存储到&#x2F;var&#x2F;lib&#x2F;rancher&#x2F;k3s&#x2F;agent&#x2F;etc&#x2F;containerd&#x2F;config.toml，从而降低了配置 containerd 镜像仓库的复杂度。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">mirrors:</span></span><br><span class="line">  <span class="attr">&quot;172.31.6.200:5000&quot;:</span></span><br><span class="line">    <span class="attr">endpoint:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;http://172.31.6.200:5000&quot;</span></span><br><span class="line">  <span class="attr">&quot;rancher.ksd.top:5000&quot;:</span></span><br><span class="line">    <span class="attr">endpoint:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;http://172.31.6.200:5000&quot;</span></span><br><span class="line">  <span class="attr">&quot;docker.io&quot;:</span></span><br><span class="line">    <span class="attr">endpoint:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;https://fogjl973.mirror.aliyuncs.com&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;https://registry-1.docker.io&quot;</span></span><br></pre></td></tr></table></figure>

<p>containerd 与 docker 都有默认仓库，并且都为 <code>docker.io</code>。如果配置中未指定 mirror 为 <code>docker.io</code>，重启 containerd 后会自动加载 <code>docker.io</code> 配置。与 docker 不同的是，containerd 可以修改 <code>docker.io</code> 对应的 endpoint（ 默认为 <a href="https://link.zhihu.com/?target=https://registry-1.docker.io/">https://registry-1.docker.io</a> ），而 docker 无法修改。</p>
<p>docker 中可以通过 <code>registry-mirrors</code> 设置镜像加速地址。如果 pull 的镜像不带仓库地址（<code>项目名+镜像名:tag</code>），则会从默认镜像仓库去拉取镜像。如果配置了镜像加速地址，会先访问镜像加速仓库，如果没有返回数据，再访问默认吧镜像仓库。</p>
<p>k3s完整配置文件</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">mirrors:</span></span><br><span class="line">  <span class="attr">&quot;192.168.50.119&quot;:</span></span><br><span class="line">    <span class="attr">endpoint:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;http://192.168.50.119&quot;</span></span><br><span class="line">  <span class="attr">&quot;docker.io&quot;:</span></span><br><span class="line">    <span class="attr">endpoint:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;https://7bezldxe.mirror.aliyuncs.com&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;https://registry-1.docker.io&quot;</span></span><br><span class="line"><span class="attr">configs:</span></span><br><span class="line">  <span class="attr">&quot;192.168.50.119&quot;:</span></span><br><span class="line">    <span class="attr">auth:</span></span><br><span class="line">      <span class="attr">username:</span> <span class="string">&#x27;&#x27;</span> <span class="comment"># this is the registry username</span></span><br><span class="line">      <span class="attr">password:</span> <span class="string">&#x27;&#x27;</span> <span class="comment"># this is the registry password</span></span><br><span class="line">    <span class="attr">tls:</span></span><br><span class="line">      <span class="attr">cert_file:</span> <span class="string">&#x27;&#x27;</span> <span class="comment"># path to the cert file used in the registry</span></span><br><span class="line">      <span class="attr">key_file:</span> <span class="string">&#x27;&#x27;</span> <span class="comment"># path to the key file used in the registry</span></span><br><span class="line">      <span class="attr">ca_file:</span> <span class="string">&#x27;&#x27;</span> <span class="comment"># path to the ca file used in the registry</span></span><br><span class="line">  <span class="attr">&quot;docker.io&quot;:</span></span><br><span class="line">    <span class="attr">auth:</span></span><br><span class="line">      <span class="attr">username:</span> <span class="string">&#x27;&#x27;</span> <span class="comment"># this is the registry username</span></span><br><span class="line">      <span class="attr">password:</span> <span class="string">&#x27;&#x27;</span> <span class="comment"># this is the registry password</span></span><br><span class="line">    <span class="attr">tls:</span></span><br><span class="line">      <span class="attr">cert_file:</span> <span class="string">&#x27;&#x27;</span> <span class="comment"># path to the cert file used in the registry</span></span><br><span class="line">      <span class="attr">key_file:</span> <span class="string">&#x27;&#x27;</span> <span class="comment"># path to the key file used in the registry</span></span><br><span class="line">      <span class="attr">ca_file:</span> <span class="string">&#x27;&#x27;</span> <span class="comment"># path to the ca file used in the registry</span></span><br></pre></td></tr></table></figure>





<p>镜像转换</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">#gcr.io</span><br><span class="line">docker pull gcr.io/kubernetes-helm/tiller:v2.16.1</span><br><span class="line">docker pull gcr.mirrors.ustc.edu.cn/kubernetes-helm/tiller:v2.16.1</span><br><span class="line"></span><br><span class="line">#k8s.gcr.io</span><br><span class="line">#docker pull k8s.gcr.io/kube-proxy:v1.15.5</span><br><span class="line">docker pull gcr.mirrors.ustc.edu.cn/google-containers/kube-proxy:v1.15.5</span><br><span class="line"></span><br><span class="line">#quay.io</span><br><span class="line">docker pull quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.26.1</span><br><span class="line">docker pull quay.mirrors.ustc.edu.cn/kubernetes-ingress-controller/nginx-ingress-controller:0.26.1</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>


<p>转换为gcr.io镜像</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker pull registry.aliyuncs.com/google_containers/coredns:1.6.5</span><br><span class="line">docker tag registry.aliyuncs.com/google_containers/coredns:1.6.5 k8s.gcr.io/coredns:1.6.5</span><br><span class="line">docker rmi registry.aliyuncs.com/google_containers/coredns:1.6.5</span><br></pre></td></tr></table></figure>
<p>K8S批量下载docker images</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubeadm config images list</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">images=(  <span class="comment"># 下面的镜像应该去除&quot;k8s.gcr.io/&quot;的前缀，版本换成上面获取到的版本</span></span><br><span class="line">    kube-apiserver:v1.12.1</span><br><span class="line">    kube-controller-manager:v1.12.1</span><br><span class="line">    kube-scheduler:v1.12.1</span><br><span class="line">    kube-proxy:v1.12.1</span><br><span class="line">    pause:3.1</span><br><span class="line">    etcd:3.2.24</span><br><span class="line">    coredns:1.2.2</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> imageName <span class="keyword">in</span> <span class="variable">$&#123;images[@]&#125;</span> ; <span class="keyword">do</span></span><br><span class="line">    docker pull registry.aliyuncs.com/google_containers/<span class="variable">$imageName</span></span><br><span class="line">    docker tag registry.aliyuncs.com/google_containers/<span class="variable">$imageName</span> k8s.gcr.io/<span class="variable">$imageName</span></span><br><span class="line">    docker rmi registry.aliyuncs.com/google_containers/<span class="variable">$imageName</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>更新版</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">url=registry.aliyuncs.com</span><br><span class="line">version=v1.16.4</span><br><span class="line">images=(`kubeadm config images list --kubernetes-version=<span class="variable">$version</span>|awk -F <span class="string">&#x27;/&#x27;</span> <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>`)</span><br><span class="line"><span class="keyword">for</span> imagename <span class="keyword">in</span> <span class="variable">$&#123;images[@]&#125;</span> ; <span class="keyword">do</span></span><br><span class="line">  docker pull <span class="variable">$url</span>/<span class="variable">$imagename</span></span><br><span class="line">  docker tag <span class="variable">$url</span>/<span class="variable">$imagename</span> k8s.gcr.io/<span class="variable">$imagename</span></span><br><span class="line">  docker rmi -f <span class="variable">$url</span>/<span class="variable">$imagename</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>


<p>或(V1.3以上)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubeadm init --image-repository registry.aliyuncs.com/google_containers \</span><br><span class="line">--kubernetes-version v1.13.0 --pod-network-cidr 192.168.1.100/24</span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>容器技术</category>
      </categories>
      <tags>
        <tag>Linux软件源</tag>
        <tag>DockerHub镜像</tag>
      </tags>
  </entry>
  <entry>
    <title>FRP配置</title>
    <url>/2023/07/07/%E6%9D%82%E9%A1%B9/FRP%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h3 id="服务端配置"><a href="#服务端配置" class="headerlink" title="服务端配置"></a>服务端配置</h3><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="comment"># TCP通信端口</span></span><br><span class="line"><span class="attr">bind_port</span> = <span class="number">7000</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">#UDP通信端口</span></span><br><span class="line"><span class="attr">bind_udp_port</span> = <span class="number">7001</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 最大连接数</span></span><br><span class="line"><span class="attr">max_pool_count</span> = <span class="number">50</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 仪表板界面配置</span></span><br><span class="line"><span class="attr">dashboard_port</span>=<span class="number">7500</span></span><br><span class="line"><span class="attr">dashboard_user</span>=admin</span><br><span class="line"><span class="attr">dashboard_pwd</span>=admin</span><br><span class="line"></span><br><span class="line"><span class="comment"># 允许使用的端口号,可以指定范围也可以用‘，’分割</span></span><br><span class="line"><span class="attr">allow_ports</span> = <span class="number">18081</span>-<span class="number">18090</span>,<span class="number">8080</span></span><br></pre></td></tr></table></figure>

<h3 id="服务端开机自启配置"><a href="#服务端开机自启配置" class="headerlink" title="服务端开机自启配置"></a>服务端开机自启配置</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> vim /etc/systemd/system/frps.service</span><br><span class="line"><span class="built_in">sudo</span> systemctl <span class="built_in">enable</span> frps.service</span><br><span class="line"><span class="built_in">sudo</span> systemctl start frps.service</span><br></pre></td></tr></table></figure>

<p>启动文件</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[Unit]</span></span><br><span class="line"><span class="attr">Description</span> = Frp Server Service</span><br><span class="line"><span class="attr">After</span> = network.target</span><br><span class="line"></span><br><span class="line"><span class="section">[Service]</span></span><br><span class="line"><span class="attr">Type</span> = simple</span><br><span class="line"><span class="attr">User</span> = nobody</span><br><span class="line"><span class="attr">Restart</span> = <span class="literal">on</span>-failure</span><br><span class="line"><span class="attr">RestartSec</span> = <span class="number">5</span>s</span><br><span class="line"><span class="attr">ExecStart</span> = /usr/local/bin/frps -c /usr/local/etc/frp/frps.ini</span><br><span class="line"></span><br><span class="line"><span class="section">[Install]</span></span><br><span class="line"><span class="attr">WantedBy</span> = multi-user.target</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h3 id="客户端配置"><a href="#客户端配置" class="headerlink" title="客户端配置"></a>客户端配置</h3><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="comment">#替换IP地址为服务端IP</span></span><br><span class="line"><span class="attr">server_addr</span>=<span class="number">0.0</span>.<span class="number">0.0</span></span><br><span class="line"><span class="attr">server_port</span>=<span class="number">7000</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># windows远程桌面</span></span><br><span class="line"><span class="section">[rdp]</span></span><br><span class="line"><span class="attr">type</span>=tcp</span><br><span class="line"><span class="comment"># 映射IP</span></span><br><span class="line"><span class="attr">local_ip</span>=<span class="number">127.0</span>.<span class="number">0.1</span> </span><br><span class="line"><span class="comment"># 映射端口（本地）</span></span><br><span class="line"><span class="attr">local_port</span>=<span class="number">3389</span></span><br><span class="line"><span class="comment"># 远程端口（服务器）注意端口要在允许端口内切未被占用</span></span><br><span class="line"><span class="attr">remote_port</span>=<span class="number">18087</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>杂项</category>
      </categories>
      <tags>
        <tag>环境搭建</tag>
      </tags>
  </entry>
  <entry>
    <title>FFmpeg mp3转pcm</title>
    <url>/2022/06/24/%E6%9D%82%E9%A1%B9/ffmpeg-mp3%E8%BD%ACpcm/</url>
    <content><![CDATA[<p>大端数据格式</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">ffmpeg</span> <span class="string">-i</span> <span class="string">test.mp3</span> <span class="string">-f</span> <span class="string">s16be</span> <span class="string">-ar</span> <span class="number">16000</span> <span class="string">-ac</span> <span class="number">1</span> <span class="string">-acodec</span> <span class="string">pcm_s16be</span> <span class="string">pcm16k.pcm</span></span><br></pre></td></tr></table></figure>

<p>小端数据格式</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">ffmpeg</span> <span class="string">-i</span> <span class="string">test.mp3</span> <span class="string">-f</span> <span class="string">s16le</span> <span class="string">-ar</span> <span class="number">16000</span> <span class="string">-ac</span> <span class="number">1</span> <span class="string">-acodec</span> <span class="string">pcm_s16le</span> <span class="string">pcm16k.pcm</span></span><br></pre></td></tr></table></figure>

<p>说明:</p>
<ol>
<li>-acodec pcm_s16be：输出pcm格式，采用signed 16编码，字节序为大尾端（小尾端为le)；</li>
<li>-ar 16000: 采样率为16000</li>
<li>-ac 1: 声道数为1</li>
</ol>
]]></content>
      <categories>
        <category>杂项</category>
      </categories>
      <tags>
        <tag>FFmp</tag>
      </tags>
  </entry>
  <entry>
    <title>公司常见后缀的含义</title>
    <url>/2025/05/30/%E6%9D%82%E9%A1%B9/%E5%85%AC%E5%8F%B8%E5%B8%B8%E8%A7%81%E5%90%8E%E7%BC%80%E7%9A%84%E5%90%AB%E4%B9%89/</url>
    <content><![CDATA[<h3 id="1-Co-Ltd"><a href="#1-Co-Ltd" class="headerlink" title="1. Co., Ltd."></a>1. Co., Ltd.</h3><ul>
<li>全称：Company Limited</li>
<li>含义：有限责任公司，常见于英国、中国及亚洲地区</li>
<li>特点：”Co.“为Company缩写，”.“表示缩写符号，”,”用于分隔前后词</li>
</ul>
<h3 id="2-Inc"><a href="#2-Inc" class="headerlink" title="2. Inc."></a>2. Inc.</h3><ul>
<li>全称：Incorporated</li>
<li>含义：股份有限公司，多用于美国、加拿大</li>
<li>示例：Apple Inc.，强调股东责任限于股份投资</li>
</ul>
<h3 id="3-LLC"><a href="#3-LLC" class="headerlink" title="3. LLC"></a>3. LLC</h3><ul>
<li>全称：Limited Liability Company</li>
<li>含义：有限责任公司（美国特有形式）</li>
<li>特点：兼具合伙制灵活性与股份制有限责任，如Google LLC</li>
</ul>
<h3 id="4-GmbH"><a href="#4-GmbH" class="headerlink" title="4. GmbH"></a>4. GmbH</h3><ul>
<li>全称：Gesellschaft mit beschränkter Haftung</li>
<li>含义：有限责任公司，德国及德语区专用</li>
<li>示例：Bosch GmbH1</li>
</ul>
<h3 id="5-AG"><a href="#5-AG" class="headerlink" title="5. AG"></a>5. AG</h3><ul>
<li>全称：Aktiengesellschaft</li>
<li>含义：股份有限公司，德国及瑞士常见</li>
<li>示例：BMW AG</li>
</ul>
<h3 id="6-S-A"><a href="#6-S-A" class="headerlink" title="6. S.A."></a>6. S.A.</h3><pre><code>- 全称：Société Anonyme（法）/Sociedad Anónima（西）
- 含义：股份有限公司，流行于法国、西班牙等拉丁语系国家
- 示例：L’Oréal S.A.1
</code></pre>
<h3 id="7-Plc"><a href="#7-Plc" class="headerlink" title="7. Plc"></a>7. Plc</h3><ul>
<li>全称：Public Limited Company</li>
<li>含义：公众有限公司（英国上市企业专用）</li>
<li>示例：HSBC Holdings plc1</li>
</ul>
<h3 id="8-株式会社（Kabushiki-Kaisha）"><a href="#8-株式会社（Kabushiki-Kaisha）" class="headerlink" title="8. 株式会社（Kabushiki Kaisha）"></a>8. 株式会社（Kabushiki Kaisha）</h3><ul>
<li>缩写：KK</li>
<li>含义：日本股份有限公司</li>
<li>示例：Toyota Motor Corporation KK</li>
</ul>
<p><strong>地域差异提示</strong>：</p>
<ul>
<li>英国”Ltd.”与美国”LLC”虽均表有限责任，但法律结构不同</li>
<li>荷兰用”BV”（私人有限公司），意大利用”S.p.A.”（股份公司）</li>
</ul>
]]></content>
      <categories>
        <category>杂项</category>
      </categories>
  </entry>
  <entry>
    <title>在CMD命令行中切换到管理员权限模式</title>
    <url>/2018/06/10/%E6%9D%82%E9%A1%B9/%E5%9C%A8CMD%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%B8%AD%E5%88%87%E6%8D%A2%E5%88%B0%E7%AE%A1%E7%90%86%E5%91%98%E6%9D%83%E9%99%90%E6%A8%A1%E5%BC%8F/</url>
    <content><![CDATA[<p>方式1：</p>
<p>搜索CMD Ctrl+Shift+Enter</p>
<p>方式2：</p>
<p>打开CMD，输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">runas /noprofile /user:Administrator cmd</span><br></pre></td></tr></table></figure>

<p>输入Administrator账户的密码</p>
<blockquote>
<p>runas 允许用户用其他权限运行指定的工具和程序</p>
<p>&#x2F;noprofile 指定不加载用户的配置文件</p>
<p>&#x2F;user:UserAccountName 指定在其下运行程序的账户</p>
</blockquote>
<p>常见问题</p>
<p>运行runas 指令输入密码报错“无法启动服务，原因可能是已被禁用或与其关联的设备没有启动。”</p>
<p>这是因为“Secondary Logo”服务没有启动，这个服务是”在不同凭据下启用启动过程“。直接在cmd中输入services.msc,将服务从禁用改为手动就好了，之后再次输入runas命令就可以使用administrator账户运行。</p>
]]></content>
      <categories>
        <category>杂项</category>
      </categories>
  </entry>
  <entry>
    <title>物联网国标</title>
    <url>/2022/11/01/%E6%9D%82%E9%A1%B9/%E7%89%A9%E8%81%94%E7%BD%91%E5%9B%BD%E6%A0%87/</url>
    <content><![CDATA[<p>GB&#x2F;T 35134-2017  物联网智能家居 设备描述方法</p>
<p>GB&#x2F;T 35143-2017  物联网智能家居 数据和设备编码</p>
<p>GB&#x2F;T 35317-2017 公安物联网系统信息安全等级保护要求</p>
<p>GB&#x2F;T 35318-2017 公安物联网感知终端安全防护技术要求</p>
<p>GB&#x2F;T 35319-2017  物联网 系统接口要求</p>
<p>GB&#x2F;T 35419-2017  物联网标识体系 Ecode在一维条码中的存储</p>
<p>GB&#x2F;T 35420-2017  物联网标识体系 Ecode在二维码中的存储</p>
<p>GB&#x2F;T 35421-2017  物联网标识体系 Ecode在射频标签中的存储</p>
<p>GB&#x2F;T 35422-2017  物联网标识体系 Ecode的注册与管理</p>
<p>GB&#x2F;T 35423-2017  物联网标识体系 Ecode在NFC标签中的存储</p>
<p>GB&#x2F;T 35592-2017  公安物联网感知终端接入安全技术要求</p>
<p>GB&#x2F;T 35136-2017  智能家居自动控制设备通用技术要求</p>
<p>GB&#x2F;T 35255-2017  LED公共照明智能系统接口应用层通信协议</p>
<p>GB&#x2F;T 35291-2017  信息安全技术 智能密码钥匙应用接口规范</p>
<p>GB&#x2F;T 30269.502-2017  信息技术 传感器网络 第502部分：标识：传感节点标识符解析</p>
<p>GB&#x2F;T 30269.602-2017  信息技术 传感器网络 第602部分：信息安全：低速率无线传感器网络网络层和应用支持子层安全规范</p>
<p>GB&#x2F;T 30269.801-2017  信息技术 传感器网络 第801部分：测试：通用要求</p>
<p>GB&#x2F;T 30269.803-2017  信息技术 传感器网络 第803部分：测试：低速无线传感器网络网络层和应用支持子层</p>
<p>GB&#x2F;T 35129-2017  面向食品制造业的射频识别系统 环境适应性要求</p>
<p>GB&#x2F;T 35130-2017  面向食品制造业的射频识别系统 射频标签信息与编码规范</p>
<p>GB&#x2F;T 35135-2017  面向食品制造业的射频识别系统 应用要求</p>
<p>GB&#x2F;T 17626.6-2017  电磁兼容 试验和测量技术 射频场感应的传导骚扰抗扰度</p>
<p>GB&#x2F;T 35290-2017  信息安全技术 射频识别（RFID）系统通用安全技术要求</p>
<p>GB&#x2F;T 35120-2017  制造过程物联的数字化模型信息交换规范</p>
<p>GB&#x2F;T 35122-2017  制造过程物联的数字化模型信息表达规范</p>
<p>GB&#x2F;T 35128-2017  集团企业经营管理信息化核心构件</p>
<p>GB&#x2F;T 34966.1-2017  卫星导航增强信息互联网传输 第1部分：播发体制</p>
<p>GB&#x2F;T 34966.2-2017  卫星导航增强信息互联网传输 第2部分：接口要求</p>
<p>GB&#x2F;T 34966.3-2017  卫星导航增强信息互联网传输 第3部分：数据传输格式</p>
<p>GB&#x2F;T 35403.1-2017  国家物品编码与基础信息通用规范 第1部分：总体框架</p>
<p>GB&#x2F;T 35589-2017  信息技术 大数据 技术参考模型</p>
]]></content>
      <categories>
        <category>杂项</category>
      </categories>
      <tags>
        <tag>国标</tag>
      </tags>
  </entry>
  <entry>
    <title>解决SuperMicro主板风扇转速过低告警</title>
    <url>/2023/07/10/%E6%9D%82%E9%A1%B9/%E8%A7%A3%E5%86%B3SuperMicro%E4%B8%BB%E6%9D%BF%E9%A3%8E%E6%89%87%E8%BD%AC%E9%80%9F%E8%BF%87%E4%BD%8E%E5%91%8A%E8%AD%A6/</url>
    <content><![CDATA[<h1 id="解决SuperMicro主板风扇转速过低告警"><a href="#解决SuperMicro主板风扇转速过低告警" class="headerlink" title="解决SuperMicro主板风扇转速过低告警"></a>解决SuperMicro主板风扇转速过低告警</h1><h3 id="现象"><a href="#现象" class="headerlink" title="现象"></a>现象</h3><p> 系统启动后风扇忽高忽低，进入IPMI后台可以看到，看到传感器日志里大量的告警</p>
 <img src="/2023/07/10/%E6%9D%82%E9%A1%B9/%E8%A7%A3%E5%86%B3SuperMicro%E4%B8%BB%E6%9D%BF%E9%A3%8E%E6%89%87%E8%BD%AC%E9%80%9F%E8%BF%87%E4%BD%8E%E5%91%8A%E8%AD%A6/IMG-20250804110128732.png" class="" title="告警">

<p> 造成此问题的原因是风扇转速过低，触发了超微的风扇转速允许的下限，从而强制满速运转，而在满速后主板又很快发现没有问题，且此时温度较低，风扇开始降速，直到降速到下限以下，重复此过程。</p>
<p>在进入IPMI后台管理界面后风扇速度有四种智能模式可调</p>
<ul>
<li><p>Standard: zone0和zone1 风速为50%</p>
</li>
<li><p>Optimal: 风速为30%</p>
</li>
<li><p>Full: 风速为100%</p>
</li>
<li><p>Heavy IO: zone0 为50%，zone1 为75%</p>
</li>
</ul>
<img src="/2023/07/10/%E6%9D%82%E9%A1%B9/%E8%A7%A3%E5%86%B3SuperMicro%E4%B8%BB%E6%9D%BF%E9%A3%8E%E6%89%87%E8%BD%AC%E9%80%9F%E8%BF%87%E4%BD%8E%E5%91%8A%E8%AD%A6/IMG-20250804110128774.png" class="">



<h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><h4 id="1-在服务器上安装IPMItool"><a href="#1-在服务器上安装IPMItool" class="headerlink" title="1. 在服务器上安装IPMItool"></a>1. 在服务器上安装IPMItool</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install ipmitool <span class="comment"># Ubuntu/Debian指令</span></span><br><span class="line">yum install ipmitool <span class="comment"># CentOS指令</span></span><br></pre></td></tr></table></figure>



<h4 id="2-设置风扇转速"><a href="#2-设置风扇转速" class="headerlink" title="2. 设置风扇转速"></a>2. 设置风扇转速</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 风扇名可以看告警里边的对应风扇名</span></span><br><span class="line">ipmitool sensor thresh FAN1 lower 100 125 125</span><br><span class="line">ipmitool sensor thresh FANA lower 100 125 125</span><br></pre></td></tr></table></figure>

<h4 id="3-Windows-下远程操作IPMI"><a href="#3-Windows-下远程操作IPMI" class="headerlink" title="3. Windows 下远程操作IPMI"></a>3. Windows 下远程操作IPMI</h4><p>ipmitool windows 版 <a href="http://www.4008600011.com/wp-content/uploads/2019/08/IPMIToolWin.zip">下载地址</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ipmitool -H [IPMI网口IP地址] -U [IMPI账户] -P [IPMI密码] sensor thresh FAN1 lower 100 125 125</span><br><span class="line">ipmitool -H [IPMI网口IP地址] -U [IMPI账户] -P [IPMI密码] sensor thresh FANA lower 100 125 125</span><br></pre></td></tr></table></figure>



<h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>如果你运行上面的命令后，风扇转速回落后马上又返回原样，这表明服务器的自动调速覆盖了你手动设置的转速。你需要切换服务器风扇策略为全速（Full Speed），在这个策略下服务器不会使用自动调节转速，因此也不会覆盖你手动设置的转速。</p>
<p>运行下面的命令切换到全速模式（也可以进入IPMI界面调整）：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ipmitool -H [IPMI网口IP地址] -U [IMPI账户] -P [IPMI密码] 0x30 0x45 0x01 0x01</span><br><span class="line"><span class="comment"># 最后一个0x01表示全速模式。如果为0x00则表示标准（Standard）；0x02表示最优（Optimal）</span></span><br></pre></td></tr></table></figure>



<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://www.bilibili.com/read/cv22752140/">1.解决超微 SuperMicro 主板风扇反复高低转速问题 - 哔哩哔哩 (bilibili.com)</a></p>
<p><a href="https://www.licc.tech/article?id=33">超微服务器Supermicro X9&#x2F;X10&#x2F;X11设置风扇转速 - 辰宸的备忘录 (licc.tech)</a></p>
<p><a href="https://blog.csdn.net/owlcity123/article/details/106620113">ipmitool常用命令详解_ipmitool lan set_owlcity123的博客-CSDN博客</a></p>
]]></content>
      <categories>
        <category>杂项</category>
      </categories>
      <tags>
        <tag>超微</tag>
        <tag>SuperMicro</tag>
        <tag>转速过低告警</tag>
      </tags>
  </entry>
  <entry>
    <title>阵列卡接口型号</title>
    <url>/2024/09/23/%E6%9D%82%E9%A1%B9/%E9%98%B5%E5%88%97%E5%8D%A1%E6%8E%A5%E5%8F%A3%E5%9E%8B%E5%8F%B7/</url>
    <content><![CDATA[<h4 id="接口型号"><a href="#接口型号" class="headerlink" title="接口型号"></a>接口型号</h4><p><a href="https://blog.csdn.net/dany_zj_cn/article/details/112966388">SFF SAS接口_8087接口-CSDN博客</a></p>
]]></content>
      <categories>
        <category>杂项</category>
      </categories>
      <tags>
        <tag>阵列卡</tag>
      </tags>
  </entry>
  <entry>
    <title>C语言学习笔记-1</title>
    <url>/2023/09/08/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>学习笔记</category>
        <category>C语言</category>
      </categories>
      <tags>
        <tag>C语言</tag>
      </tags>
  </entry>
  <entry>
    <title>GoLang学习笔记</title>
    <url>/2025/03/19/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Golang/Golang%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>学习笔记</category>
        <category>Golang</category>
      </categories>
      <tags>
        <tag>学习笔记</tag>
        <tag>Golang</tag>
      </tags>
  </entry>
  <entry>
    <title>Python学习笔记-1</title>
    <url>/2025/03/19/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Python/Python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>学习笔记</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>学习笔记</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>Qt学习笔记-1</title>
    <url>/2025/03/19/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Qt/Qt%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>学习笔记</category>
        <category>Qt</category>
      </categories>
      <tags>
        <tag>学习笔记</tag>
        <tag>Golang</tag>
      </tags>
  </entry>
  <entry>
    <title>8种主要排序算法的CSharp实现</title>
    <url>/2019/11/30/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/8%E7%A7%8D%E4%B8%BB%E8%A6%81%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E7%9A%84C%E5%AE%9E%E7%8E%B0/</url>
    <content><![CDATA[<h1 id="8种主要排序算法的C-实现"><a href="#8种主要排序算法的C-实现" class="headerlink" title="8种主要排序算法的C#实现"></a>8种主要排序算法的C#实现</h1><blockquote>
<h2 id="Excerpt"><a href="#Excerpt" class="headerlink" title="Excerpt"></a>Excerpt</h2><p>8种主要排序算法的实现及优化，包含选择排序，冒泡排序，插入排序，快速排序，归并排序，堆排序，希尔排序，基数排序。文末实际测试并比较。</p>
</blockquote>
<hr>
<p>新的一年到了，很多园友都辞职要去追求更好的工作环境，我也是其中一个，呵呵！</p>
<p>最近闲暇的时候我开始重温一些常用的算法。老早就买了《算法导论》，一直都没啃下去。</p>
<p>这本书确实很好，只是太难读了，总是读了几章就又读不下去了！工作上也几乎用不到。</p>
<p>我这段时间发现看这些排序算法比以前容易了很多，就借此机会将它们整理总结起来。</p>
<p>一是方便以后重温，二是可以应对笔试面试。同时也希望这篇博文可以帮助各位刚辞职和正在学习排序算法的园友。</p>
<p>PS：有可能实现的代码并不是最优的，如果有什么错误或者值得改进的地方，还请大家帮忙指出。</p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>排序算法是我们编程中遇到的最多的算法。目前主流的算法有8种。</p>
<p>  平均时间复杂度从高到低依次是：</p>
<p>     冒泡排序（o(n<sup>2</sup>)），选择排序（o(n<sup>2</sup>)），插入排序（o(n<sup>2</sup>)），堆排序（o(nlogn)），</p>
<p>     归并排序（o(nlogn)），快速排序（o(nlogn)）， 希尔排序（o(n<sup>1.25</sup>)），基数排序（o(n)）</p>
<p>这些平均时间复杂度是参照维基百科<a href="http://zh.wikipedia.org/wiki/%E6%8E%92%E5%BA%8F">排序算法</a>罗列的。</p>
<p>是计算的理论平均值，并不意味着你的代码实现能达到这样的程度。</p>
<p>例如希尔排序，时间复杂度是由选择的步长决定的。基数排序时间复杂度最小，</p>
<p>但我实现的基数排序的速度并不是最快的，后面的结果测试图可以看到。</p>
<p><a href="http://www.cnblogs.com/fatbird/p/SortAlgorithm.html">本文</a>代码实现使用的数据源类型为IList<int>，这样可以兼容int[]和List<int>(虽然int[]有ToList()，</p>
<p>List<int>有ToArray()，哈哈！)。</p>
<h2 id="选择排序"><a href="#选择排序" class="headerlink" title="选择排序"></a>选择排序</h2><p>选择排序是我觉得最简单暴力的排序方式了。</p>
<p>以前刚接触排序算法的时候，感觉算法太多搞不清，唯独记得选择排序的做法及实现。</p>
<p>原理：找出参与排序的数组最大值，放到末尾（或找到最小值放到开头） <a href="http://zh.wikipedia.org/wiki/%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F">维基入口</a></p>
<p>实现如下：</p>
<img src="/2019/11/30/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/8%E7%A7%8D%E4%B8%BB%E8%A6%81%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E7%9A%84C%E5%AE%9E%E7%8E%B0/IMG-20250704185625066.gif" class="" title="复制代码">

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;span&gt; 1&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; SelectSort(IList&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt;&lt;span&gt; data)</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;        &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;             &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; i = &lt;span&gt;0&lt;/span&gt;; i &amp;lt; data.Count - &lt;span&gt;1&lt;/span&gt;; i++&lt;span&gt;)</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;            &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;                 &lt;span&gt;int&lt;/span&gt; min =&lt;span&gt; i;</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt;                 &lt;span&gt;int&lt;/span&gt; temp =&lt;span&gt; data[i];</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;                 &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; j = i + &lt;span&gt;1&lt;/span&gt;; j &amp;lt; data.Count; j++&lt;span&gt;)</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;                &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;                     &lt;span&gt;if&lt;/span&gt; (data[j] &amp;lt;&lt;span&gt; temp)</span><br><span class="line">&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; &lt;span&gt;                    &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;                         min =&lt;span&gt; j;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;12&lt;/span&gt;                         temp =&lt;span&gt; data[j];</span><br><span class="line">&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; &lt;span&gt;                    &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;14&lt;/span&gt; &lt;span&gt;                &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;                 &lt;span&gt;if&lt;/span&gt; (min !=&lt;span&gt; i)</span><br><span class="line">&lt;/span&gt;&lt;span&gt;16&lt;/span&gt; &lt;span&gt;                    Swap(data, min, i);</span><br><span class="line">&lt;/span&gt;&lt;span&gt;17&lt;/span&gt; &lt;span&gt;            &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;18&lt;/span&gt;         &#125;</span><br></pre></td></tr></table></figure>

<img src="/2019/11/30/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/8%E7%A7%8D%E4%B8%BB%E8%A6%81%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E7%9A%84C%E5%AE%9E%E7%8E%B0/IMG-20250704185625066.gif" class="" title="复制代码">

<p>过程解析：将剩余数组的最小数交换到开头。</p>
<h2 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h2><p>冒泡排序是笔试面试经常考的内容，虽然它是这些算法里排序速度最慢的（汗），后面有测试为证。</p>
<p>原理：从头开始，每一个元素和它的下一个元素比较，如果它大，就将它与比较的元素交换，否则不动。</p>
<p>这意味着，大的元素总是在向后慢慢移动直到遇到比它更大的元素。所以每一轮交换完成都能将最大值</p>
<p>冒到最后。  <a href="http://zh.wikipedia.org/wiki/%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F#.E5.8A.A9.E8.AE.B0.E7.A0.81">维基入口</a></p>
<p>实现如下：</p>
<img src="/2019/11/30/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/8%E7%A7%8D%E4%B8%BB%E8%A6%81%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E7%9A%84C%E5%AE%9E%E7%8E%B0/IMG-20250704185625066.gif" class="" title="复制代码">

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;span&gt; 1&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; BubbleSort(IList&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt;&lt;span&gt; data)</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;        &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;             &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; i = data.Count - &lt;span&gt;1&lt;/span&gt;; i &amp;gt; &lt;span&gt;0&lt;/span&gt;; i--&lt;span&gt;)</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;            &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;                 &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; j = &lt;span&gt;0&lt;/span&gt;; j &amp;lt; i; j++&lt;span&gt;)</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;                &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;                     &lt;span&gt;if&lt;/span&gt; (data[j] &amp;gt; data[j + &lt;span&gt;1&lt;/span&gt;&lt;span&gt;])</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;                         Swap(data, j, j + &lt;span&gt;1&lt;/span&gt;&lt;span&gt;);</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;                &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; &lt;span&gt;            &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;         &#125;</span><br></pre></td></tr></table></figure>

<img src="/2019/11/30/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/8%E7%A7%8D%E4%B8%BB%E8%A6%81%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E7%9A%84C%E5%AE%9E%E7%8E%B0/IMG-20250704185625066.gif" class="" title="复制代码">

<p>过程解析：中需要注意的是j&lt;i，每轮冒完泡必然会将最大值排到数组末尾，所以需要排序的数应该是在减少的。</p>
<p>很多网上版本每轮冒完泡后依然还是将所有的数进行第二轮冒泡即j&lt;data.Count-1，这样会增加比较次数。</p>
<h4 id="通过标识提升冒泡排序"><a href="#通过标识提升冒泡排序" class="headerlink" title="通过标识提升冒泡排序"></a>通过标识提升冒泡排序</h4><p>在维基上看到，可以通过添加标识来分辨剩余的数是否已经有序来减少比较次数。感觉很有意思，可以试试。</p>
<p>实现如下：</p>
<img src="/2019/11/30/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/8%E7%A7%8D%E4%B8%BB%E8%A6%81%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E7%9A%84C%E5%AE%9E%E7%8E%B0/IMG-20250704185625066.gif" class="" title="复制代码">

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;span&gt; 1&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; BubbleSortImprovedWithFlag(IList&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt;&lt;span&gt; data)</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;        &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;             &lt;span&gt;bool&lt;/span&gt;&lt;span&gt; flag;</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;             &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; i = data.Count - &lt;span&gt;1&lt;/span&gt;; i &amp;gt; &lt;span&gt;0&lt;/span&gt;; i--&lt;span&gt;)</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;            &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt;                 flag = &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;                 &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; j = &lt;span&gt;0&lt;/span&gt;; j &amp;lt; i; j++&lt;span&gt;)</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;                &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;                     &lt;span&gt;if&lt;/span&gt; (data[j] &amp;gt; data[j + &lt;span&gt;1&lt;/span&gt;&lt;span&gt;])</span><br><span class="line">&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; &lt;span&gt;                    &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;                         Swap(data, j, j + &lt;span&gt;1&lt;/span&gt;&lt;span&gt;);</span><br><span class="line">&lt;/span&gt;&lt;span&gt;12&lt;/span&gt;                         flag = &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; &lt;span&gt;                    &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;14&lt;/span&gt; &lt;span&gt;                &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;                 &lt;span&gt;if&lt;/span&gt; (flag) &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;16&lt;/span&gt; &lt;span&gt;            &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;         &#125;</span><br></pre></td></tr></table></figure>

<img src="/2019/11/30/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/8%E7%A7%8D%E4%B8%BB%E8%A6%81%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E7%9A%84C%E5%AE%9E%E7%8E%B0/IMG-20250704185625066.gif" class="" title="复制代码">

<p>过程解析：发现某轮冒泡没有任何数进行交换（即已经有序），就跳出排序。</p>
<p>我起初也以为这个方法是应该有不错效果的，可是实际测试结果并不如想的那样。和未优化耗费时间一样（对于随机数列）。</p>
<p>由果推因，那么应该是冒泡排序对于随机数列，当剩余数列有序的时候，也没几个数要排列了！？</p>
<p>不过如果已经是有序数列或者部分有序的话，这个冒泡方法将会提升很大速度。</p>
<h3 id="鸡尾酒排序（来回排序）"><a href="#鸡尾酒排序（来回排序）" class="headerlink" title="鸡尾酒排序（来回排序）"></a>鸡尾酒排序（来回排序）</h3><h4 id="对冒泡排序进行更大的优化"><a href="#对冒泡排序进行更大的优化" class="headerlink" title="对冒泡排序进行更大的优化"></a>对冒泡排序进行更大的优化</h4><p>冒泡排序只是单向冒泡，而鸡尾酒来回反复双向冒泡。</p>
<p>原理：自左向右将大数冒到末尾，然后将剩余数列再自右向左将小数冒到开头，如此循环往复。<a href="http://zh.wikipedia.org/wiki/%E5%BE%80%E8%BF%94%E6%8E%92%E5%BA%8F">维基入口</a></p>
<p>实现如下：</p>
<img src="/2019/11/30/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/8%E7%A7%8D%E4%B8%BB%E8%A6%81%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E7%9A%84C%E5%AE%9E%E7%8E%B0/IMG-20250704185625066.gif" class="" title="复制代码">

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;span&gt; 1&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; BubbleCocktailSort(IList&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt;&lt;span&gt; data)</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;        &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;             &lt;span&gt;bool&lt;/span&gt;&lt;span&gt; flag;</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;             &lt;span&gt;int&lt;/span&gt; m = &lt;span&gt;0&lt;/span&gt;, n = &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;             &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; i = data.Count - &lt;span&gt;1&lt;/span&gt;; i &amp;gt; &lt;span&gt;0&lt;/span&gt;; i--&lt;span&gt;)</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;            &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;                 flag = &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;                 &lt;span&gt;if&lt;/span&gt; (i % &lt;span&gt;2&lt;/span&gt; == &lt;span&gt;0&lt;/span&gt;&lt;span&gt;)</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;                &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;                     &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; j = n; j &amp;lt; data.Count - &lt;span&gt;1&lt;/span&gt; - m; j++&lt;span&gt;)</span><br><span class="line">&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; &lt;span&gt;                    &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;12&lt;/span&gt;                         &lt;span&gt;if&lt;/span&gt; (data[j] &amp;gt; data[j + &lt;span&gt;1&lt;/span&gt;&lt;span&gt;])</span><br><span class="line">&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; &lt;span&gt;                        &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;14&lt;/span&gt;                             Swap(data, j, j + &lt;span&gt;1&lt;/span&gt;&lt;span&gt;);</span><br><span class="line">&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;                             flag = &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;16&lt;/span&gt; &lt;span&gt;                        &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;17&lt;/span&gt; &lt;span&gt;                    &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;18&lt;/span&gt;                     &lt;span&gt;if&lt;/span&gt; (flag) &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;19&lt;/span&gt;                     m++&lt;span&gt;;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;20&lt;/span&gt; &lt;span&gt;                &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;21&lt;/span&gt;                 &lt;span&gt;else&lt;/span&gt;</span><br><span class="line">&lt;span&gt;22&lt;/span&gt; &lt;span&gt;                &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;23&lt;/span&gt;                     &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; k = data.Count - &lt;span&gt;1&lt;/span&gt; - m; k &amp;gt; n; k--&lt;span&gt;)</span><br><span class="line">&lt;/span&gt;&lt;span&gt;24&lt;/span&gt; &lt;span&gt;                    &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;25&lt;/span&gt;                         &lt;span&gt;if&lt;/span&gt; (data[k] &amp;lt; data[k - &lt;span&gt;1&lt;/span&gt;&lt;span&gt;])</span><br><span class="line">&lt;/span&gt;&lt;span&gt;26&lt;/span&gt; &lt;span&gt;                        &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;27&lt;/span&gt;                             Swap(data, k, k - &lt;span&gt;1&lt;/span&gt;&lt;span&gt;);</span><br><span class="line">&lt;/span&gt;&lt;span&gt;28&lt;/span&gt;                             flag = &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;29&lt;/span&gt; &lt;span&gt;                        &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;30&lt;/span&gt; &lt;span&gt;                    &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;31&lt;/span&gt;                     &lt;span&gt;if&lt;/span&gt; (flag) &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;32&lt;/span&gt;                     n++&lt;span&gt;;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;33&lt;/span&gt; &lt;span&gt;                &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;34&lt;/span&gt; &lt;span&gt;            &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;35&lt;/span&gt;         &#125;</span><br></pre></td></tr></table></figure>

<img src="/2019/11/30/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/8%E7%A7%8D%E4%B8%BB%E8%A6%81%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E7%9A%84C%E5%AE%9E%E7%8E%B0/IMG-20250704185625066.gif" class="" title="复制代码">

<p>过程解析：分析第i轮冒泡，i是偶数则将剩余数列最大值向右冒泡至末尾，是奇数则将剩余数列最小值</p>
<p>向左冒泡至开头。对于剩余数列，n为始，data.Count-1-m为末。</p>
<p>来回冒泡比单向冒泡：对于随机数列，更容易得到有序的剩余数列。因此这里使用标识将会提升的更加明显。</p>
<h2 id="插入排序"><a href="#插入排序" class="headerlink" title="插入排序"></a>插入排序</h2><p>插入排序是一种对于有序数列高效的排序。非常聪明的排序。只是对于随机数列，效率一般，交换的频率高。</p>
<p>原理：通过构建有序数列，将未排序的数从后向前比较，找到合适位置并插入。<a href="http://zh.wikipedia.org/wiki/%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F">维基入口</a></p>
<p>第一个数当作有序数列。</p>
<p>实现如下：</p>
<img src="/2019/11/30/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/8%E7%A7%8D%E4%B8%BB%E8%A6%81%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E7%9A%84C%E5%AE%9E%E7%8E%B0/IMG-20250704185625066.gif" class="" title="复制代码">

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;span&gt; 1&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; InsertSort(IList&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt;&lt;span&gt; data)</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;        &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;             &lt;span&gt;int&lt;/span&gt;&lt;span&gt; temp;</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;             &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; i = &lt;span&gt;1&lt;/span&gt;; i &amp;lt; data.Count; i++&lt;span&gt;)</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;            &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt;                 temp =&lt;span&gt; data[i];</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;                 &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; j = i - &lt;span&gt;1&lt;/span&gt;; j &amp;gt;= &lt;span&gt;0&lt;/span&gt;; j--&lt;span&gt;)</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;                &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;                     &lt;span&gt;if&lt;/span&gt; (data[j] &amp;gt;&lt;span&gt; temp)</span><br><span class="line">&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; &lt;span&gt;                    &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;                         data[j + &lt;span&gt;1&lt;/span&gt;] =&lt;span&gt; data[j];</span><br><span class="line">&lt;/span&gt;&lt;span&gt;12&lt;/span&gt;                         &lt;span&gt;if&lt;/span&gt; (j == &lt;span&gt;0&lt;/span&gt;&lt;span&gt;)</span><br><span class="line">&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; &lt;span&gt;                        &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;14&lt;/span&gt;                             data[&lt;span&gt;0&lt;/span&gt;] =&lt;span&gt; temp;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;                             &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;16&lt;/span&gt; &lt;span&gt;                        &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;17&lt;/span&gt; &lt;span&gt;                    &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;18&lt;/span&gt;                     &lt;span&gt;else&lt;/span&gt;</span><br><span class="line">&lt;span&gt;19&lt;/span&gt; &lt;span&gt;                    &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;20&lt;/span&gt;                         data[j + &lt;span&gt;1&lt;/span&gt;] =&lt;span&gt; temp;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;21&lt;/span&gt;                         &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;22&lt;/span&gt; &lt;span&gt;                    &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;23&lt;/span&gt; &lt;span&gt;                &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;24&lt;/span&gt; &lt;span&gt;            &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;25&lt;/span&gt;         &#125;</span><br></pre></td></tr></table></figure>

<img src="/2019/11/30/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/8%E7%A7%8D%E4%B8%BB%E8%A6%81%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E7%9A%84C%E5%AE%9E%E7%8E%B0/IMG-20250704185625066.gif" class="" title="复制代码">

<p>过程解析：将要排序的数（索引为i）存储起来，向前查找合适位置j+1，将i-1到j+1的元素依次向后</p>
<p>移动一位，空出j+1，然后将之前存储的值放在这个位置。</p>
<p>这个方法写的不如维基上的简洁清晰，由于合适位置是j+1所以多出了对j&#x3D;&#x3D;0的判断，但实际效率影响无差别。</p>
<p>建议比照维基和我写的排序，自行选择。</p>
<h4 id="二分查找法优化插入排序"><a href="#二分查找法优化插入排序" class="headerlink" title="二分查找法优化插入排序"></a>二分查找法优化插入排序</h4><p>插入排序主要工作是在有序的数列中对要排序的数查找合适的位置，而查找里面经典的二分查找法正可以适用。</p>
<p>原理：通过二分查找法的方式找到一个位置索引。当要排序的数插入这个位置时，大于前一个数，小于后一个数。</p>
<p>实现如下：</p>
<img src="/2019/11/30/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/8%E7%A7%8D%E4%B8%BB%E8%A6%81%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E7%9A%84C%E5%AE%9E%E7%8E%B0/IMG-20250704185625066.gif" class="" title="复制代码">

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;span&gt; 1&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; InsertSortImprovedWithBinarySearch(IList&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt;&lt;span&gt; data)</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;        &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;             &lt;span&gt;int&lt;/span&gt;&lt;span&gt; temp;</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;             &lt;span&gt;int&lt;/span&gt;&lt;span&gt; tempIndex;</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;             &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; i = &lt;span&gt;1&lt;/span&gt;; i &amp;lt; data.Count; i++&lt;span&gt;)</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;            &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;                 temp =&lt;span&gt; data[i];</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;                 tempIndex = BinarySearchForInsertSort(data, &lt;span&gt;0&lt;/span&gt;&lt;span&gt;, i, i);</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;                 &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; j = i - &lt;span&gt;1&lt;/span&gt;; j &amp;gt;= tempIndex; j--&lt;span&gt;)</span><br><span class="line">&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; &lt;span&gt;                &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;                     data[j + &lt;span&gt;1&lt;/span&gt;] =&lt;span&gt; data[j];</span><br><span class="line">&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; &lt;span&gt;                &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;                 data[tempIndex] =&lt;span&gt; temp;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;14&lt;/span&gt; &lt;span&gt;            &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; &lt;span&gt;        &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;16&lt;/span&gt; </span><br><span class="line">&lt;span&gt;17&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; BinarySearchForInsertSort(IList&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt; data, &lt;span&gt;int&lt;/span&gt; low, &lt;span&gt;int&lt;/span&gt; high, &lt;span&gt;int&lt;/span&gt;&lt;span&gt; key)</span><br><span class="line">&lt;/span&gt;&lt;span&gt;18&lt;/span&gt; &lt;span&gt;        &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;19&lt;/span&gt;             &lt;span&gt;if&lt;/span&gt; (low &amp;gt;= data.Count - &lt;span&gt;1&lt;/span&gt;&lt;span&gt;)</span><br><span class="line">&lt;/span&gt;&lt;span&gt;20&lt;/span&gt;                 &lt;span&gt;return&lt;/span&gt; data.Count - &lt;span&gt;1&lt;/span&gt;&lt;span&gt;;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;21&lt;/span&gt;             &lt;span&gt;if&lt;/span&gt; (high &amp;lt;= &lt;span&gt;0&lt;/span&gt;&lt;span&gt;)</span><br><span class="line">&lt;/span&gt;&lt;span&gt;22&lt;/span&gt;                 &lt;span&gt;return&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;23&lt;/span&gt;             &lt;span&gt;int&lt;/span&gt; mid = (low + high) / &lt;span&gt;2&lt;/span&gt;&lt;span&gt;;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;24&lt;/span&gt;             &lt;span&gt;if&lt;/span&gt; (mid == key) &lt;span&gt;return&lt;/span&gt;&lt;span&gt; mid;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;25&lt;/span&gt;             &lt;span&gt;if&lt;/span&gt; (data[key] &amp;gt;&lt;span&gt; data[mid])</span><br><span class="line">&lt;/span&gt;&lt;span&gt;26&lt;/span&gt; &lt;span&gt;            &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;27&lt;/span&gt;                 &lt;span&gt;if&lt;/span&gt; (data[key] &amp;lt; data[mid + &lt;span&gt;1&lt;/span&gt;&lt;span&gt;])</span><br><span class="line">&lt;/span&gt;&lt;span&gt;28&lt;/span&gt;                     &lt;span&gt;return&lt;/span&gt; mid + &lt;span&gt;1&lt;/span&gt;&lt;span&gt;;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;29&lt;/span&gt;                 &lt;span&gt;return&lt;/span&gt; BinarySearchForInsertSort(data, mid + &lt;span&gt;1&lt;/span&gt;&lt;span&gt;, high, key);</span><br><span class="line">&lt;/span&gt;&lt;span&gt;30&lt;/span&gt; &lt;span&gt;            &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;31&lt;/span&gt;             &lt;span&gt;else  &lt;span&gt;// data[key] &amp;lt;= data[mid]&lt;/span&gt;&lt;/span&gt;</span><br><span class="line">&lt;span&gt;32&lt;/span&gt; &lt;span&gt;            &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;33&lt;/span&gt;                 &lt;span&gt;if&lt;/span&gt; (mid - &lt;span&gt;1&lt;/span&gt; &amp;lt; &lt;span&gt;0&lt;/span&gt;) &lt;span&gt;return&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;34&lt;/span&gt;                 &lt;span&gt;if&lt;/span&gt; (data[key] &amp;gt; data[mid - &lt;span&gt;1&lt;/span&gt;&lt;span&gt;])</span><br><span class="line">&lt;/span&gt;&lt;span&gt;35&lt;/span&gt;                     &lt;span&gt;return&lt;/span&gt;&lt;span&gt; mid;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;36&lt;/span&gt;                 &lt;span&gt;return&lt;/span&gt; BinarySearchForInsertSort(data, low, mid - &lt;span&gt;1&lt;/span&gt;&lt;span&gt;, key);</span><br><span class="line">&lt;/span&gt;&lt;span&gt;37&lt;/span&gt; &lt;span&gt;            &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;38&lt;/span&gt;         &#125;</span><br></pre></td></tr></table></figure>

<img src="/2019/11/30/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/8%E7%A7%8D%E4%B8%BB%E8%A6%81%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E7%9A%84C%E5%AE%9E%E7%8E%B0/IMG-20250704185625066.gif" class="" title="复制代码">

<p> 过程解析：需要注意的是二分查找方法实现中high-low&#x3D;&#x3D;1的时候mid&#x3D;&#x3D;low，所以需要33行</p>
<p>mid-1&lt;0即mid&#x3D;&#x3D;0的判断，否则下行会索引越界。</p>
<h2 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h2><p>快速排序是一种有效比较较多的高效排序。它包含了“分而治之”以及“哨兵”的思想。</p>
<p>原理：从数列中挑选一个数作为“哨兵”，使比它小的放在它的左侧，比它大的放在它的右侧。将要排序是数列递归地分割到</p>
<p>最小数列，每次都让分割出的数列符合“哨兵”的规则，自然就将数列变得有序。 <a href="http://zh.wikipedia.org/wiki/%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F#.E5.8E.9F.E5.9C.B0.28in-place.29.E5.88.86.E5.89.B2.E7.9A.84.E7.89.88.E6.9C.AC">维基入口</a></p>
<p>实现如下：</p>
<img src="/2019/11/30/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/8%E7%A7%8D%E4%B8%BB%E8%A6%81%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E7%9A%84C%E5%AE%9E%E7%8E%B0/IMG-20250704185625066.gif" class="" title="复制代码">

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;span&gt; 1&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; QuickSortStrict(IList&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt;&lt;span&gt; data)</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;        &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;             QuickSortStrict(data, &lt;span&gt;0&lt;/span&gt;, data.Count - &lt;span&gt;1&lt;/span&gt;&lt;span&gt;);</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;        &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; </span><br><span class="line">&lt;span&gt; 6&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; QuickSortStrict(IList&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt; data, &lt;span&gt;int&lt;/span&gt; low, &lt;span&gt;int&lt;/span&gt;&lt;span&gt; high)</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;        &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;             &lt;span&gt;if&lt;/span&gt; (low &amp;gt;= high) &lt;span&gt;return&lt;/span&gt;&lt;span&gt;;</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;             &lt;span&gt;int&lt;/span&gt; temp =&lt;span&gt; data[low];</span><br><span class="line">&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;             &lt;span&gt;int&lt;/span&gt; i = low + &lt;span&gt;1&lt;/span&gt;, j =&lt;span&gt; high;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;             &lt;span&gt;while&lt;/span&gt; (&lt;span&gt;true&lt;/span&gt;&lt;span&gt;)</span><br><span class="line">&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; &lt;span&gt;            &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;                 &lt;span&gt;while&lt;/span&gt; (data[j] &amp;gt; temp) j--&lt;span&gt;;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;14&lt;/span&gt;                 &lt;span&gt;while&lt;/span&gt; (data[i] &amp;lt; temp &amp;amp;&amp;amp; i &amp;lt; j) i++&lt;span&gt;;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;                 &lt;span&gt;if&lt;/span&gt; (i &amp;gt;= j) &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;16&lt;/span&gt; &lt;span&gt;                Swap(data, i, j);</span><br><span class="line">&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;                 i++; j--&lt;span&gt;;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;18&lt;/span&gt; &lt;span&gt;            &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;19&lt;/span&gt;             &lt;span&gt;if&lt;/span&gt; (j !=&lt;span&gt; low)</span><br><span class="line">&lt;/span&gt;&lt;span&gt;20&lt;/span&gt; &lt;span&gt;                Swap(data, low, j);</span><br><span class="line">&lt;/span&gt;&lt;span&gt;21&lt;/span&gt;             QuickSortStrict(data, j + &lt;span&gt;1&lt;/span&gt;&lt;span&gt;, high);</span><br><span class="line">&lt;/span&gt;&lt;span&gt;22&lt;/span&gt;             QuickSortStrict(data, low, j - &lt;span&gt;1&lt;/span&gt;&lt;span&gt;);</span><br><span class="line">&lt;/span&gt;&lt;span&gt;23&lt;/span&gt;         &#125;</span><br></pre></td></tr></table></figure>

<img src="/2019/11/30/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/8%E7%A7%8D%E4%B8%BB%E8%A6%81%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E7%9A%84C%E5%AE%9E%E7%8E%B0/IMG-20250704185625066.gif" class="" title="复制代码">

<p>过程解析：取的哨兵是数列的第一个值，然后从第二个和末尾同时查找，左侧要显示的是小于哨兵的值，</p>
<p>所以要找到不小于的i，右侧要显示的是大于哨兵的值，所以要找到不大于的j。将找到的i和j的数交换，</p>
<p>这样可以减少交换次数。i&gt;&#x3D;j时，数列全部查找了一遍，而不符合条件j必然是在小的那一边，而哨兵</p>
<p>是第一个数，位置本应是小于自己的数。所以将哨兵与j交换，使符合“哨兵”的规则。</p>
<p>这个版本的缺点在于如果是有序数列排序的话，递归次数会很可怕的。</p>
<h4 id="另一个版本"><a href="#另一个版本" class="headerlink" title="另一个版本"></a>另一个版本</h4><p>这是维基上的一个C#版本，我觉得很有意思。这个版本并没有严格符合“哨兵”的规则。但却将“分而治之”</p>
<p>以及“哨兵”思想融入其中，代码简洁。</p>
<p>实现如下：</p>
<img src="/2019/11/30/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/8%E7%A7%8D%E4%B8%BB%E8%A6%81%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E7%9A%84C%E5%AE%9E%E7%8E%B0/IMG-20250704185625066.gif" class="" title="复制代码">

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;span&gt; 1&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; QuickSortRelax(IList&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt;&lt;span&gt; data)</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;        &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;             QuickSortRelax(data, &lt;span&gt;0&lt;/span&gt;, data.Count - &lt;span&gt;1&lt;/span&gt;&lt;span&gt;);</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;        &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; </span><br><span class="line">&lt;span&gt; 6&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; QuickSortRelax(IList&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt; data, &lt;span&gt;int&lt;/span&gt; low, &lt;span&gt;int&lt;/span&gt;&lt;span&gt; high)</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;        &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;             &lt;span&gt;if&lt;/span&gt; (low &amp;gt;= high) &lt;span&gt;return&lt;/span&gt;&lt;span&gt;;</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;             &lt;span&gt;int&lt;/span&gt; temp = data[(low + high) / &lt;span&gt;2&lt;/span&gt;&lt;span&gt;];</span><br><span class="line">&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;             &lt;span&gt;int&lt;/span&gt; i = low - &lt;span&gt;1&lt;/span&gt;, j = high + &lt;span&gt;1&lt;/span&gt;&lt;span&gt;;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;             &lt;span&gt;while&lt;/span&gt; (&lt;span&gt;true&lt;/span&gt;&lt;span&gt;)</span><br><span class="line">&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; &lt;span&gt;            &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;                 &lt;span&gt;while&lt;/span&gt; (data[++i] &amp;lt;&lt;span&gt; temp) ;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;14&lt;/span&gt;                 &lt;span&gt;while&lt;/span&gt; (data[--j] &amp;gt;&lt;span&gt; temp) ;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;                 &lt;span&gt;if&lt;/span&gt; (i &amp;gt;= j) &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;16&lt;/span&gt; &lt;span&gt;                Swap(data, i, j);</span><br><span class="line">&lt;/span&gt;&lt;span&gt;17&lt;/span&gt; &lt;span&gt;            &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;18&lt;/span&gt;             QuickSortRelax(data, j + &lt;span&gt;1&lt;/span&gt;&lt;span&gt;, high);</span><br><span class="line">&lt;/span&gt;&lt;span&gt;19&lt;/span&gt;             QuickSortRelax(data, low, i - &lt;span&gt;1&lt;/span&gt;&lt;span&gt;);</span><br><span class="line">&lt;/span&gt;&lt;span&gt;20&lt;/span&gt;         &#125;</span><br></pre></td></tr></table></figure>

<img src="/2019/11/30/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/8%E7%A7%8D%E4%B8%BB%E8%A6%81%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E7%9A%84C%E5%AE%9E%E7%8E%B0/IMG-20250704185625066.gif" class="" title="复制代码">

<p>过程解析：取的哨兵是数列中间的数。将数列分成两波，左侧小于等于哨兵，右侧大于等于哨兵。</p>
<p>也就是说，哨兵不一定处于两波数的中间。虽然哨兵不在中间，但不妨碍“哨兵”的思想的实现。所以</p>
<p>这个实现也可以达到快速排序的效果。但却造成了每次递归完成，要排序的数列数总和没有减少（除非i&#x3D;&#x3D;j）。</p>
<h4 id="针对这个版本的缺点，我进行了优化"><a href="#针对这个版本的缺点，我进行了优化" class="headerlink" title="针对这个版本的缺点，我进行了优化"></a>针对这个版本的缺点，我进行了优化</h4><p>实现如下：</p>
<img src="/2019/11/30/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/8%E7%A7%8D%E4%B8%BB%E8%A6%81%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E7%9A%84C%E5%AE%9E%E7%8E%B0/IMG-20250704185625066.gif" class="" title="复制代码">

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;span&gt; 1&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; QuickSortRelaxImproved(IList&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt;&lt;span&gt; data)</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;        &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;             QuickSortRelaxImproved(data, &lt;span&gt;0&lt;/span&gt;, data.Count - &lt;span&gt;1&lt;/span&gt;&lt;span&gt;);</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;        &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; </span><br><span class="line">&lt;span&gt; 6&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; QuickSortRelaxImproved(IList&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt; data, &lt;span&gt;int&lt;/span&gt; low, &lt;span&gt;int&lt;/span&gt;&lt;span&gt; high)</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;        &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;             &lt;span&gt;if&lt;/span&gt; (low &amp;gt;= high) &lt;span&gt;return&lt;/span&gt;&lt;span&gt;;</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;             &lt;span&gt;int&lt;/span&gt; temp = data[(low + high) / &lt;span&gt;2&lt;/span&gt;&lt;span&gt;];</span><br><span class="line">&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;             &lt;span&gt;int&lt;/span&gt; i = low - &lt;span&gt;1&lt;/span&gt;, j = high + &lt;span&gt;1&lt;/span&gt;&lt;span&gt;;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;             &lt;span&gt;int&lt;/span&gt; index = (low + high) / &lt;span&gt;2&lt;/span&gt;&lt;span&gt;;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;12&lt;/span&gt;             &lt;span&gt;while&lt;/span&gt; (&lt;span&gt;true&lt;/span&gt;&lt;span&gt;)</span><br><span class="line">&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; &lt;span&gt;            &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;14&lt;/span&gt;                 &lt;span&gt;while&lt;/span&gt; (data[++i] &amp;lt;&lt;span&gt; temp) ;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;                 &lt;span&gt;while&lt;/span&gt; (data[--j] &amp;gt;&lt;span&gt; temp) ;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;16&lt;/span&gt;                 &lt;span&gt;if&lt;/span&gt; (i &amp;gt;= j) &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;17&lt;/span&gt; &lt;span&gt;                Swap(data, i, j);</span><br><span class="line">&lt;/span&gt;&lt;span&gt;18&lt;/span&gt;                 &lt;span&gt;if&lt;/span&gt; (i == index) index =&lt;span&gt; j;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;19&lt;/span&gt;                 &lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt; (j == index) index =&lt;span&gt; i;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;20&lt;/span&gt; &lt;span&gt;            &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;21&lt;/span&gt;             &lt;span&gt;if&lt;/span&gt; (j ==&lt;span&gt; i)</span><br><span class="line">&lt;/span&gt;&lt;span&gt;22&lt;/span&gt; &lt;span&gt;            &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;23&lt;/span&gt;                 QuickSortRelaxImproved(data, j + &lt;span&gt;1&lt;/span&gt;&lt;span&gt;, high);</span><br><span class="line">&lt;/span&gt;&lt;span&gt;24&lt;/span&gt;                 QuickSortRelaxImproved(data, low, i - &lt;span&gt;1&lt;/span&gt;&lt;span&gt;);</span><br><span class="line">&lt;/span&gt;&lt;span&gt;25&lt;/span&gt; &lt;span&gt;            &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;26&lt;/span&gt;             &lt;span&gt;else&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;i-j==1&lt;/span&gt;</span><br><span class="line">&lt;span&gt;27&lt;/span&gt; &lt;span&gt;            &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;28&lt;/span&gt;                 &lt;span&gt;if&lt;/span&gt; (index &amp;gt;=&lt;span&gt; i)</span><br><span class="line">&lt;/span&gt;&lt;span&gt;29&lt;/span&gt; &lt;span&gt;                &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;30&lt;/span&gt;                     &lt;span&gt;if&lt;/span&gt; (index !=&lt;span&gt; i)</span><br><span class="line">&lt;/span&gt;&lt;span&gt;31&lt;/span&gt; &lt;span&gt;                        Swap(data, index, i);</span><br><span class="line">&lt;/span&gt;&lt;span&gt;32&lt;/span&gt;                     QuickSortRelaxImproved(data, i + &lt;span&gt;1&lt;/span&gt;&lt;span&gt;, high);</span><br><span class="line">&lt;/span&gt;&lt;span&gt;33&lt;/span&gt;                     QuickSortRelaxImproved(data, low, i - &lt;span&gt;1&lt;/span&gt;&lt;span&gt;);</span><br><span class="line">&lt;/span&gt;&lt;span&gt;34&lt;/span&gt; &lt;span&gt;                &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;35&lt;/span&gt;                 &lt;span&gt;else &lt;span&gt;//&lt;/span&gt;&lt;span&gt;index &amp;lt; i&lt;/span&gt;&lt;/span&gt;</span><br><span class="line">&lt;span&gt;36&lt;/span&gt; &lt;span&gt;                &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;37&lt;/span&gt;                     &lt;span&gt;if&lt;/span&gt; (index !=&lt;span&gt; j)</span><br><span class="line">&lt;/span&gt;&lt;span&gt;38&lt;/span&gt; &lt;span&gt;                        Swap(data, index, j);</span><br><span class="line">&lt;/span&gt;&lt;span&gt;39&lt;/span&gt;                     QuickSortRelaxImproved(data, j + &lt;span&gt;1&lt;/span&gt;&lt;span&gt;, high);</span><br><span class="line">&lt;/span&gt;&lt;span&gt;40&lt;/span&gt;                     QuickSortRelaxImproved(data, low, j - &lt;span&gt;1&lt;/span&gt;&lt;span&gt;);</span><br><span class="line">&lt;/span&gt;&lt;span&gt;41&lt;/span&gt; &lt;span&gt;                &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;42&lt;/span&gt; &lt;span&gt;            &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;43&lt;/span&gt;         &#125;</span><br></pre></td></tr></table></figure>

<img src="/2019/11/30/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/8%E7%A7%8D%E4%B8%BB%E8%A6%81%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E7%9A%84C%E5%AE%9E%E7%8E%B0/IMG-20250704185625066.gif" class="" title="复制代码">

<p>过程解析：定义了一个变量Index，来跟踪哨兵的位置。发现哨兵最后在小于自己的那堆，</p>
<p>那就与j交换，否则与i交换。达到每次递归都能减少要排序的数列数总和的目的。</p>
<h2 id="归并排序"><a href="#归并排序" class="headerlink" title="归并排序"></a>归并排序</h2><p>归并排序也是采用“分而治之”的方式。刚发现<a href="http://zh.wikipedia.org/wiki/%E5%88%86%E6%B2%BB%E6%B3%95">分治法</a>是一种算法范式，我还一直以为是一种需要意会的思想呢。</p>
<p>不好意思了，孤陋寡闻了，哈哈！</p>
<p>原理：将两个有序的数列，通过比较，合并为一个有序数列。 <a href="http://zh.wikipedia.org/wiki/%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F">维基入口</a></p>
<p>为方便理解，此处实现用了List<int>的一些方法，随后有IList<int>版本。</p>
<p>实现如下：</p>
<img src="/2019/11/30/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/8%E7%A7%8D%E4%B8%BB%E8%A6%81%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E7%9A%84C%E5%AE%9E%E7%8E%B0/IMG-20250704185625066.gif" class="" title="复制代码">

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;span&gt; 1&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; List&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt; MergeSortOnlyList(List&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt; data, &lt;span&gt;int&lt;/span&gt; low, &lt;span&gt;int&lt;/span&gt;&lt;span&gt; high)</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;        &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;             &lt;span&gt;if&lt;/span&gt; (low ==&lt;span&gt; high)</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;                 &lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; List&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt;&lt;span&gt; &#123; data[low] &#125;;</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;             List&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt; mergeData = &lt;span&gt;new&lt;/span&gt; List&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt;&lt;span&gt;();</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt;             &lt;span&gt;int&lt;/span&gt; mid = (low + high) / &lt;span&gt;2&lt;/span&gt;&lt;span&gt;;</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;             List&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt; leftData =&lt;span&gt; MergeSortOnlyList(data, low, mid);</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;             List&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt; rightData = MergeSortOnlyList(data, mid + &lt;span&gt;1&lt;/span&gt;&lt;span&gt;, high);</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;             &lt;span&gt;int&lt;/span&gt; i = &lt;span&gt;0&lt;/span&gt;, j = &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;             &lt;span&gt;while&lt;/span&gt; (&lt;span&gt;true&lt;/span&gt;&lt;span&gt;)</span><br><span class="line">&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; &lt;span&gt;            &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;12&lt;/span&gt;                 &lt;span&gt;if&lt;/span&gt; (leftData[i] &amp;lt;&lt;span&gt; rightData[j])</span><br><span class="line">&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; &lt;span&gt;                &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;14&lt;/span&gt; &lt;span&gt;                    mergeData.Add(leftData[i]);</span><br><span class="line">&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;                     &lt;span&gt;if&lt;/span&gt; (++i ==&lt;span&gt; leftData.Count)</span><br><span class="line">&lt;/span&gt;&lt;span&gt;16&lt;/span&gt; &lt;span&gt;                    &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;                         mergeData.AddRange(rightData.GetRange(j, rightData.Count -&lt;span&gt; j));</span><br><span class="line">&lt;/span&gt;&lt;span&gt;18&lt;/span&gt;                         &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;19&lt;/span&gt; &lt;span&gt;                    &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;20&lt;/span&gt; &lt;span&gt;                &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;21&lt;/span&gt;                 &lt;span&gt;else&lt;/span&gt;</span><br><span class="line">&lt;span&gt;22&lt;/span&gt; &lt;span&gt;                &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;23&lt;/span&gt; &lt;span&gt;                    mergeData.Add(rightData[j]);</span><br><span class="line">&lt;/span&gt;&lt;span&gt;24&lt;/span&gt;                     &lt;span&gt;if&lt;/span&gt; (++j ==&lt;span&gt; rightData.Count)</span><br><span class="line">&lt;/span&gt;&lt;span&gt;25&lt;/span&gt; &lt;span&gt;                    &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;26&lt;/span&gt;                         mergeData.AddRange(leftData.GetRange(i, leftData.Count -&lt;span&gt; i));</span><br><span class="line">&lt;/span&gt;&lt;span&gt;27&lt;/span&gt;                         &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;28&lt;/span&gt; &lt;span&gt;                    &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;29&lt;/span&gt; &lt;span&gt;                &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;30&lt;/span&gt; &lt;span&gt;            &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;31&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt;&lt;span&gt; mergeData;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;32&lt;/span&gt; &lt;span&gt;        &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;33&lt;/span&gt; </span><br><span class="line">&lt;span&gt;34&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; List&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt; MergeSortOnlyList(List&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt;&lt;span&gt; data)</span><br><span class="line">&lt;/span&gt;&lt;span&gt;35&lt;/span&gt; &lt;span&gt;        &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;36&lt;/span&gt;             data = MergeSortOnlyList(data, &lt;span&gt;0&lt;/span&gt;, data.Count - &lt;span&gt;1&lt;/span&gt;&lt;span&gt;);  &lt;span&gt;//不会改变外部引用 参照&lt;a href=&quot;http://www.cnblogs.com/fatbird/p/parametersInCsharp.html&quot; target=&quot;_blank&quot;&gt;C#参数传递</span><br><span class="line">&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;37&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt;&lt;span&gt; data;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;38&lt;/span&gt;         &#125;</span><br></pre></td></tr></table></figure>

<img src="/2019/11/30/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/8%E7%A7%8D%E4%B8%BB%E8%A6%81%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E7%9A%84C%E5%AE%9E%E7%8E%B0/IMG-20250704185625066.gif" class="" title="复制代码">

<p>过程解析：将数列分为两部分，分别得到两部分数列的有序版本，然后逐个比较，将比较出的小数逐个放进</p>
<p>新的空数列中。当一个数列放完后，将另一个数列剩余数全部放进去。</p>
<h4 id="IList版本"><a href="#IList版本" class="headerlink" title="IList版本"></a>IList<int>版本</h4><p>实现如下：</p>
<img src="/2019/11/30/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/8%E7%A7%8D%E4%B8%BB%E8%A6%81%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E7%9A%84C%E5%AE%9E%E7%8E%B0/IMG-20250704185625066.gif" class="" title="复制代码">

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;span&gt; 1&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; IList&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt; MergeSort(IList&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt;&lt;span&gt; data)</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;        &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;             data = MergeSort(data, &lt;span&gt;0&lt;/span&gt;, data.Count - &lt;span&gt;1&lt;/span&gt;&lt;span&gt;);</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt;&lt;span&gt; data;</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;        &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; </span><br><span class="line">&lt;span&gt; 7&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; IList&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt; MergeSort(IList&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt; data, &lt;span&gt;int&lt;/span&gt; low, &lt;span&gt;int&lt;/span&gt;&lt;span&gt; high)</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;        &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;             &lt;span&gt;int&lt;/span&gt; length = high - low + &lt;span&gt;1&lt;/span&gt;&lt;span&gt;;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;             IList&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt; mergeData =&lt;span&gt; NewInstance(data, length);</span><br><span class="line">&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;             &lt;span&gt;if&lt;/span&gt; (low ==&lt;span&gt; high)</span><br><span class="line">&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; &lt;span&gt;            &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;                 mergeData[&lt;span&gt;0&lt;/span&gt;] =&lt;span&gt; data[low];</span><br><span class="line">&lt;/span&gt;&lt;span&gt;14&lt;/span&gt;                 &lt;span&gt;return&lt;/span&gt;&lt;span&gt; mergeData;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; &lt;span&gt;            &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;16&lt;/span&gt;             &lt;span&gt;int&lt;/span&gt; mid = (low + high) / &lt;span&gt;2&lt;/span&gt;&lt;span&gt;;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;             IList&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt; leftData =&lt;span&gt; MergeSort(data, low, mid);</span><br><span class="line">&lt;/span&gt;&lt;span&gt;18&lt;/span&gt;             IList&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt; rightData = MergeSort(data, mid + &lt;span&gt;1&lt;/span&gt;&lt;span&gt;, high);</span><br><span class="line">&lt;/span&gt;&lt;span&gt;19&lt;/span&gt;             &lt;span&gt;int&lt;/span&gt; i = &lt;span&gt;0&lt;/span&gt;, j = &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;20&lt;/span&gt;             &lt;span&gt;while&lt;/span&gt; (&lt;span&gt;true&lt;/span&gt;&lt;span&gt;)</span><br><span class="line">&lt;/span&gt;&lt;span&gt;21&lt;/span&gt; &lt;span&gt;            &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;22&lt;/span&gt;                 &lt;span&gt;if&lt;/span&gt; (leftData[i] &amp;lt;&lt;span&gt; rightData[j])</span><br><span class="line">&lt;/span&gt;&lt;span&gt;23&lt;/span&gt; &lt;span&gt;                &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;24&lt;/span&gt;                     mergeData[i + j] = leftData[i++]; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;不能使用Add,Array Length不可变&lt;/span&gt;</span><br><span class="line">&lt;span&gt;25&lt;/span&gt;                     &lt;span&gt;if&lt;/span&gt; (i ==&lt;span&gt; leftData.Count)</span><br><span class="line">&lt;/span&gt;&lt;span&gt;26&lt;/span&gt; &lt;span&gt;                    &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;27&lt;/span&gt;                         &lt;span&gt;int&lt;/span&gt; rightLeft = rightData.Count -&lt;span&gt; j;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;28&lt;/span&gt;                         &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; m = &lt;span&gt;0&lt;/span&gt;; m &amp;lt; rightLeft; m++&lt;span&gt;)</span><br><span class="line">&lt;/span&gt;&lt;span&gt;29&lt;/span&gt; &lt;span&gt;                        &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;30&lt;/span&gt;                             mergeData[i + j] = rightData[j++&lt;span&gt;];</span><br><span class="line">&lt;/span&gt;&lt;span&gt;31&lt;/span&gt; &lt;span&gt;                        &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;32&lt;/span&gt;                         &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;33&lt;/span&gt; &lt;span&gt;                    &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;34&lt;/span&gt; &lt;span&gt;                &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;35&lt;/span&gt;                 &lt;span&gt;else&lt;/span&gt;</span><br><span class="line">&lt;span&gt;36&lt;/span&gt; &lt;span&gt;                &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;37&lt;/span&gt;                     mergeData[i + j] = rightData[j++&lt;span&gt;];</span><br><span class="line">&lt;/span&gt;&lt;span&gt;38&lt;/span&gt;                     &lt;span&gt;if&lt;/span&gt; (j ==&lt;span&gt; rightData.Count)</span><br><span class="line">&lt;/span&gt;&lt;span&gt;39&lt;/span&gt; &lt;span&gt;                    &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;40&lt;/span&gt;                         &lt;span&gt;int&lt;/span&gt; leftleft = leftData.Count -&lt;span&gt; i;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;41&lt;/span&gt;                         &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; n = &lt;span&gt;0&lt;/span&gt;; n &amp;lt; leftleft; n++&lt;span&gt;)</span><br><span class="line">&lt;/span&gt;&lt;span&gt;42&lt;/span&gt; &lt;span&gt;                        &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;43&lt;/span&gt;                             mergeData[i + j] = leftData[i++&lt;span&gt;];</span><br><span class="line">&lt;/span&gt;&lt;span&gt;44&lt;/span&gt; &lt;span&gt;                        &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;45&lt;/span&gt;                         &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;46&lt;/span&gt; &lt;span&gt;                    &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;47&lt;/span&gt; &lt;span&gt;                &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;48&lt;/span&gt; &lt;span&gt;            &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;49&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt;&lt;span&gt; mergeData;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;50&lt;/span&gt; </span><br><span class="line">&lt;span&gt;51&lt;/span&gt;         &#125;</span><br></pre></td></tr></table></figure>

<img src="/2019/11/30/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/8%E7%A7%8D%E4%B8%BB%E8%A6%81%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E7%9A%84C%E5%AE%9E%E7%8E%B0/IMG-20250704185625066.gif" class="" title="复制代码">

<p>过程原理与上个一样，此处就不赘述了。</p>
<h2 id="堆排序"><a href="#堆排序" class="headerlink" title="堆排序"></a>堆排序</h2><p>堆排序是根据堆这种数据结构设计的一种算法。堆的特性：父节点的值总是小于（或大于）它的子节点。近似二叉树。</p>
<p>原理：将数列构建为最大堆数列（即父节点总是最大值），将最大值（即根节点）交换到数列末尾。这样要排序的数列数总和减少，</p>
<p>同时根节点不再是最大值，调整最大堆数列。如此重复，最后得到有序数列。 <a href="http://zh.wikipedia.org/wiki/%E5%A0%86%E6%8E%92%E5%BA%8F">维基入口</a>   <a href="http://www.cs.usfca.edu/~galles/visualization/HeapSort.html">有趣的演示</a></p>
<p>实现准备：如何将数列构造为堆——父节点i的左子节点为2i+1，右子节点为2i+2。节点i的父节点为floor((i-1)&#x2F;2)。</p>
<p>实现如下（这个实现判断和临时变量使用太多，导致效率低，评论中@小城故事提出了更好的实现）：</p>
<img src="/2019/11/30/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/8%E7%A7%8D%E4%B8%BB%E8%A6%81%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E7%9A%84C%E5%AE%9E%E7%8E%B0/IMG-20250704185625066.gif" class="" title="复制代码">

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;span&gt; 1&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; HeapSort(IList&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt;&lt;span&gt; data)</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;        &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;            BuildMaxHeapify(data);</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;             &lt;span&gt;int&lt;/span&gt; j =&lt;span&gt; data.Count;</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;             &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; i = &lt;span&gt;0&lt;/span&gt;; i &amp;lt;&lt;span&gt; j; )</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;            &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;                 Swap(data, i, --&lt;span&gt;j);</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;                 &lt;span&gt;if&lt;/span&gt; (j - &lt;span&gt;2&lt;/span&gt; &amp;lt; &lt;span&gt;0&lt;/span&gt;&lt;span&gt;)  &lt;span&gt;//只剩下1个数 j代表余下要排列的数的个数</span><br><span class="line">&lt;/span&gt;&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;                     &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;                 &lt;span&gt;int&lt;/span&gt; k = &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;                 &lt;span&gt;while&lt;/span&gt; (&lt;span&gt;true&lt;/span&gt;&lt;span&gt;)</span><br><span class="line">&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; &lt;span&gt;                &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;                     &lt;span&gt;if&lt;/span&gt; (k &amp;gt; (j - &lt;span&gt;2&lt;/span&gt;) / &lt;span&gt;2&lt;/span&gt;) &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;  &lt;span&gt;//即：k &amp;gt; ((j-1)-1)/2&lt;/span&gt; &lt;span&gt;超出最后一个父节点的位置  </span><br><span class="line">&lt;/span&gt;&lt;/span&gt;&lt;span&gt;14&lt;/span&gt;                     &lt;span&gt;else&lt;/span&gt;</span><br><span class="line">&lt;span&gt;15&lt;/span&gt; &lt;span&gt;                    &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;16&lt;/span&gt;                         &lt;span&gt;int&lt;/span&gt; temp =&lt;span&gt; k;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;                         k = ReSortMaxBranch(data, k, &lt;span&gt;2&lt;/span&gt; * k + &lt;span&gt;1&lt;/span&gt;, &lt;span&gt;2&lt;/span&gt; * k + &lt;span&gt;2&lt;/span&gt;, j - &lt;span&gt;1&lt;/span&gt;&lt;span&gt;);</span><br><span class="line">&lt;/span&gt;&lt;span&gt;18&lt;/span&gt;                         &lt;span&gt;if&lt;/span&gt; (temp == k) &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;19&lt;/span&gt; &lt;span&gt;                    &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;20&lt;/span&gt; &lt;span&gt;                &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;21&lt;/span&gt; &lt;span&gt;            &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;22&lt;/span&gt; &lt;span&gt;        &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;23&lt;/span&gt; </span><br><span class="line">&lt;span&gt;24&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; BuildMaxHeapify(IList&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt;&lt;span&gt; data)</span><br><span class="line">&lt;/span&gt;&lt;span&gt;25&lt;/span&gt; &lt;span&gt;        &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;26&lt;/span&gt;             &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; i = data.Count / &lt;span&gt;2&lt;/span&gt; - &lt;span&gt;1&lt;/span&gt;; i &amp;gt;= &lt;span&gt;0&lt;/span&gt;; i--&lt;span&gt;)  &lt;span&gt;//(data.Count-1)-1)/2为数列最大父节点索引</span><br><span class="line">&lt;/span&gt;&lt;/span&gt;&lt;span&gt;27&lt;/span&gt; &lt;span&gt;            &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;28&lt;/span&gt;                 &lt;span&gt;int&lt;/span&gt; temp =&lt;span&gt; i;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;29&lt;/span&gt;                 temp = ReSortMaxBranch(data, i, &lt;span&gt;2&lt;/span&gt; * i + &lt;span&gt;1&lt;/span&gt;, &lt;span&gt;2&lt;/span&gt; * i + &lt;span&gt;2&lt;/span&gt;, data.Count - &lt;span&gt;1&lt;/span&gt;&lt;span&gt;);</span><br><span class="line">&lt;/span&gt;&lt;span&gt;30&lt;/span&gt;                 &lt;span&gt;if&lt;/span&gt; (temp !=&lt;span&gt; i)</span><br><span class="line">&lt;/span&gt;&lt;span&gt;31&lt;/span&gt; &lt;span&gt;                &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;32&lt;/span&gt;                     &lt;span&gt;int&lt;/span&gt; k =&lt;span&gt; i;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;33&lt;/span&gt;                     &lt;span&gt;while&lt;/span&gt; (k != temp &amp;amp;&amp;amp; temp &amp;lt;= data.Count / &lt;span&gt;2&lt;/span&gt; - &lt;span&gt;1&lt;/span&gt;&lt;span&gt;)</span><br><span class="line">&lt;/span&gt;&lt;span&gt;34&lt;/span&gt; &lt;span&gt;                    &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;35&lt;/span&gt;                         k =&lt;span&gt; temp;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;36&lt;/span&gt;                         temp = ReSortMaxBranch(data, temp, &lt;span&gt;2&lt;/span&gt; * temp + &lt;span&gt;1&lt;/span&gt;, &lt;span&gt;2&lt;/span&gt; * temp + &lt;span&gt;2&lt;/span&gt;, data.Count - &lt;span&gt;1&lt;/span&gt;&lt;span&gt;);</span><br><span class="line">&lt;/span&gt;&lt;span&gt;37&lt;/span&gt; &lt;span&gt;                    &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;38&lt;/span&gt; &lt;span&gt;                &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;39&lt;/span&gt; &lt;span&gt;            &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;40&lt;/span&gt; &lt;span&gt;        &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;41&lt;/span&gt; </span><br><span class="line">&lt;span&gt;42&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; ReSortMaxBranch(IList&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt; data, &lt;span&gt;int&lt;/span&gt; maxIndex, &lt;span&gt;int&lt;/span&gt; left, &lt;span&gt;int&lt;/span&gt; right, &lt;span&gt;int&lt;/span&gt;&lt;span&gt; lastIndex)</span><br><span class="line">&lt;/span&gt;&lt;span&gt;43&lt;/span&gt; &lt;span&gt;        &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;44&lt;/span&gt;             &lt;span&gt;int&lt;/span&gt;&lt;span&gt; temp;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;45&lt;/span&gt;             &lt;span&gt;if&lt;/span&gt; (right &amp;gt;&lt;span&gt; lastIndex)  &lt;span&gt;//父节点只有一个子节点</span><br><span class="line">&lt;/span&gt;&lt;/span&gt;&lt;span&gt;46&lt;/span&gt;                 temp =&lt;span&gt; left;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;47&lt;/span&gt;             &lt;span&gt;else&lt;/span&gt;</span><br><span class="line">&lt;span&gt;48&lt;/span&gt; &lt;span&gt;            &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;49&lt;/span&gt;                 &lt;span&gt;if&lt;/span&gt; (data[left] &amp;gt;&lt;span&gt; data[right])</span><br><span class="line">&lt;/span&gt;&lt;span&gt;50&lt;/span&gt;                     temp =&lt;span&gt; left;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;51&lt;/span&gt;                 &lt;span&gt;else&lt;/span&gt; temp =&lt;span&gt; right;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;52&lt;/span&gt; &lt;span&gt;            &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;53&lt;/span&gt; </span><br><span class="line">&lt;span&gt;54&lt;/span&gt;             &lt;span&gt;if&lt;/span&gt; (data[maxIndex] &amp;lt;&lt;span&gt; data[temp])</span><br><span class="line">&lt;/span&gt;&lt;span&gt;55&lt;/span&gt; &lt;span&gt;                Swap(data, maxIndex, temp);</span><br><span class="line">&lt;/span&gt;&lt;span&gt;56&lt;/span&gt;             &lt;span&gt;else&lt;/span&gt; temp =&lt;span&gt; maxIndex;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;57&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt;&lt;span&gt; temp;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;58&lt;/span&gt;         &#125;</span><br></pre></td></tr></table></figure>

<img src="/2019/11/30/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/8%E7%A7%8D%E4%B8%BB%E8%A6%81%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E7%9A%84C%E5%AE%9E%E7%8E%B0/IMG-20250704185625066.gif" class="" title="复制代码">

<p>过程解析：BuildMaxHeapify为排序前构建的最大堆数列方法，主要内容为从最后一个父节点开始往前将每个三角组合</p>
<p>（即父节点与它的两个子节点）符合父节点值最大的规则。ReSortMaxBranch为将三角调整为父节点值最大，</p>
<p>并返回该值之前的索引，用来判断是否进行了交换，以及原来的父节点值交换到了什么位置。在HeapSort里首先</p>
<p>构建了最大堆数列，然后将根节点交换到末尾，根节点不是最大值了，在while语句中对最大堆数列进行调整。</p>
<p>插曲：自从看了Martin Fowler大师《重构》第三版，我发现我更不喜欢写注释了。每次都想着尽量让方法的名字更贴切，</p>
<p>即使会造成方法的名字很长很丑。这算不算曲解了大师的意思啊！？上面的代码注释都是写博客的时候现加的（源代码很干净的。汗!）。</p>
<h2 id="希尔排序"><a href="#希尔排序" class="headerlink" title="希尔排序"></a>希尔排序</h2><p>希尔排序是插入排序的一种更高效的改进版本。</p>
<p>在前面介绍的插入排序，我们知道1.它对有序数列排序的效率是非常高的 2.要排序的数向前移动是一步步进行的导致插入排序效率低。</p>
<p>希尔排序正是利用第一点，改善第二点，达到更理想的效果。</p>
<p>原理：通过奇妙的步长，插入排序间隔步长的元素，随后逐渐缩短步长至1，实现数列的插入排序。 <a href="http://zh.wikipedia.org/wiki/%E5%B8%8C%E5%B0%94%E6%8E%92%E5%BA%8F">维基入口</a></p>
<p>疑问：可以想象到排序间隔步长的数，会逐渐让数列变得有序，提升最后步长为1时标准插入排序的效率。在维基上看到这么</p>
<p>一句话“可能<strong>希尔排序</strong>最重要的地方在于当用较小步长排序后，以前用的较大步长仍然是有序的”注意用词是‘可能’。我的疑问是</p>
<p>这是个正确的命题吗？如何证明呢？看维基上也是由果推因，说是如果不是这样，就不会排序那么快了。可这我感觉还是太牵强了，</p>
<p>哪位大哥发现相关资料，希望能分享出来，不胜感激。</p>
<p>实现如下：</p>
<img src="/2019/11/30/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/8%E7%A7%8D%E4%B8%BB%E8%A6%81%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E7%9A%84C%E5%AE%9E%E7%8E%B0/IMG-20250704185625066.gif" class="" title="复制代码">

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;span&gt; 1&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; ShellSort(IList&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt;&lt;span&gt; data)</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;        &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;             &lt;span&gt;int&lt;/span&gt;&lt;span&gt; temp;</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;             &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; gap = data.Count / &lt;span&gt;2&lt;/span&gt;; gap &amp;gt; &lt;span&gt;0&lt;/span&gt;; gap /= &lt;span&gt;2&lt;/span&gt;&lt;span&gt;)</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;            &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt;                 &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; i = gap; i &amp;lt; data.Count; i +=&lt;span&gt; gap)</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;                &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;                     temp =&lt;span&gt; data[i];</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;                     &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; j = i - gap; j &amp;gt;= &lt;span&gt;0&lt;/span&gt;; j -=&lt;span&gt; gap)</span><br><span class="line">&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; &lt;span&gt;                    &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;                         &lt;span&gt;if&lt;/span&gt; (data[j] &amp;gt;&lt;span&gt; temp)</span><br><span class="line">&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; &lt;span&gt;                        &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;                             data[j + gap] =&lt;span&gt; data[j];</span><br><span class="line">&lt;/span&gt;&lt;span&gt;14&lt;/span&gt;                             &lt;span&gt;if&lt;/span&gt; (j == &lt;span&gt;0&lt;/span&gt;&lt;span&gt;)</span><br><span class="line">&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; &lt;span&gt;                            &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;16&lt;/span&gt;                                 data[j] =&lt;span&gt; temp;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;                                 &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;18&lt;/span&gt; &lt;span&gt;                            &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;19&lt;/span&gt; &lt;span&gt;                        &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;20&lt;/span&gt;                         &lt;span&gt;else&lt;/span&gt;</span><br><span class="line">&lt;span&gt;21&lt;/span&gt; &lt;span&gt;                        &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;22&lt;/span&gt;                             data[j + gap] =&lt;span&gt; temp;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;23&lt;/span&gt;                             &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;24&lt;/span&gt; &lt;span&gt;                        &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;25&lt;/span&gt; &lt;span&gt;                    &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;26&lt;/span&gt; &lt;span&gt;                &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;27&lt;/span&gt; &lt;span&gt;            &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;28&lt;/span&gt;         &#125;</span><br></pre></td></tr></table></figure>

<img src="/2019/11/30/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/8%E7%A7%8D%E4%B8%BB%E8%A6%81%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E7%9A%84C%E5%AE%9E%E7%8E%B0/IMG-20250704185625066.gif" class="" title="复制代码">

<p>过程解析：采用的步长是N&#x2F;2，每次取半，直至1。循环内部就是标准的插入排序。</p>
<p>——————</p>
<p>修正：修正后希尔排序才是真正牛叉的希尔啊！感谢@390218462的提出  </p>
<img src="/2019/11/30/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/8%E7%A7%8D%E4%B8%BB%E8%A6%81%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E7%9A%84C%E5%AE%9E%E7%8E%B0/IMG-20250704185625066.gif" class="" title="复制代码">

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;span&gt; 1&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; ShellSortCorrect(IList&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt;&lt;span&gt; data)</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;        &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;             &lt;span&gt;int&lt;/span&gt;&lt;span&gt; temp;</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;             &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; gap = data.Count / &lt;span&gt;2&lt;/span&gt;; gap &amp;gt; &lt;span&gt;0&lt;/span&gt;; gap /= &lt;span&gt;2&lt;/span&gt;&lt;span&gt;)</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;            &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt;                 &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; i = gap; i &amp;lt; data.Count; &lt;span&gt;i++&lt;/span&gt;&lt;span&gt;)      // &lt;span&gt;i+ = gap 改为了 i++</span><br><span class="line">&lt;/span&gt;&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;                &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;                     temp =&lt;span&gt; data[i];</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;                     &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; j = i - gap; j &amp;gt;= &lt;span&gt;0&lt;/span&gt;; j -=&lt;span&gt; gap)</span><br><span class="line">&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; &lt;span&gt;                    &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;                         &lt;span&gt;if&lt;/span&gt; (data[j] &amp;gt;&lt;span&gt; temp)</span><br><span class="line">&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; &lt;span&gt;                        &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;                             data[j + gap] =&lt;span&gt; data[j];</span><br><span class="line">&lt;/span&gt;&lt;span&gt;14&lt;/span&gt;                             &lt;span&gt;if&lt;/span&gt; (j == &lt;span&gt;0&lt;/span&gt;&lt;span&gt;)</span><br><span class="line">&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; &lt;span&gt;                            &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;16&lt;/span&gt;                                 data[j] =&lt;span&gt; temp;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;                                 &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;18&lt;/span&gt; &lt;span&gt;                            &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;19&lt;/span&gt; &lt;span&gt;                        &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;20&lt;/span&gt;                         &lt;span&gt;else&lt;/span&gt;</span><br><span class="line">&lt;span&gt;21&lt;/span&gt; &lt;span&gt;                        &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;22&lt;/span&gt;                             data[j + gap] =&lt;span&gt; temp;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;23&lt;/span&gt;                             &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;24&lt;/span&gt; &lt;span&gt;                        &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;25&lt;/span&gt; &lt;span&gt;                    &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;26&lt;/span&gt; &lt;span&gt;                &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;27&lt;/span&gt; &lt;span&gt;            &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;28&lt;/span&gt;         &#125;</span><br></pre></td></tr></table></figure>

<img src="/2019/11/30/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/8%E7%A7%8D%E4%B8%BB%E8%A6%81%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E7%9A%84C%E5%AE%9E%E7%8E%B0/IMG-20250704185625066.gif" class="" title="复制代码">

<img src="/2019/11/30/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/8%E7%A7%8D%E4%B8%BB%E8%A6%81%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E7%9A%84C%E5%AE%9E%E7%8E%B0/IMG-20250704185625206.jpg" class=""><img src="/2019/11/30/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/8%E7%A7%8D%E4%B8%BB%E8%A6%81%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E7%9A%84C%E5%AE%9E%E7%8E%B0/IMG-20250704185625286.jpg" class="">

<p>——————</p>
<p>这里实现的貌似是最差的希尔排序。主要源于步长的选择。维基上有各种牛叉的“凌波微步”，极限在哪里，</p>
<p>喜欢挑战的同学可以去学习学习。看维基<a href="http://zh.wikipedia.org/wiki/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95">排序算法</a>里六种排序的测试，希尔最快，比快速排序还快！！我没实现啊！</p>
<p>只是对于神奇的步长更充满了敬畏。</p>
<h2 id="基数排序"><a href="#基数排序" class="headerlink" title="基数排序"></a>基数排序</h2><p>基数排序是一种非比较型整数排序。</p>
<p>“非比较型”是什么意思呢？因为它内部使用的是桶排序，而桶排序是非比较型排序。</p>
<p>这里就要说说桶排序了。一个非常有意思的排序。</p>
<h4 id="桶排序"><a href="#桶排序" class="headerlink" title="桶排序"></a>桶排序</h4><p>原理：取一定数量（数列中的最大值）的编好序号的桶，将数列每个数放进编号为它的桶里，然后将不是空的桶依次倒出来，</p>
<p>就组成有序数列了。  <a href="http://zh.wikipedia.org/wiki/%E6%A1%B6%E6%8E%92%E5%BA%8F">维基入口</a></p>
<p>好吧！聪明的人一眼就看出桶排序的破绽了。假设只有两个数1,10000，岂不是要一万个桶！？这确实是个问题啊！我也</p>
<p>没想出解决办法。我起初也以为桶排序就是一个通过牺牲空间来换取时间的排序算法，它不需要比较，所以是非比较型算法。</p>
<p>但看了<a href="http://www.cs.usfca.edu/~galles/visualization/Algorithms.html">有趣的演示</a>的<a href="http://www.cs.usfca.edu/~galles/visualization/BucketSort.html">桶排序</a>后，发现世界之大，你没有解决，不代表别人没解决，睿智的人总是很多。</p>
<p>1，9999的桶排序实现：new Int[2];总共有两个数，得出最大数9999的位数4，取10的4次幂即10000作为分母，</p>
<p>要排序的数（1或9999）作为分子，并乘以数列总数2，即1*2&#x2F;10000,9999*2&#x2F;10000得到各自的位置0,1，完成排序。</p>
<p>如果是1,10000进行排序的话，上面的做法就需要稍微加一些处理——发现最大数是10的n次幂，就将它作为分母，并</p>
<p>放在数列末尾就好了。</p>
<p>如果是9999,10000进行排序的话，那就需要二维数组了，两个都在位置1，位置0没数。这个时候就需要在放</p>
<p>入每个位置时采用其它排序（比如插入排序）办法对这个位置的多个数排序了。</p>
<h4 id="为基数排序做个过渡，我这里实现了一个个位数桶排序"><a href="#为基数排序做个过渡，我这里实现了一个个位数桶排序" class="headerlink" title="为基数排序做个过渡，我这里实现了一个个位数桶排序"></a>为基数排序做个过渡，我这里实现了一个个位数桶排序</h4><p>涉及到了当重复的数出现的处理。</p>
<p>实现如下：</p>
<img src="/2019/11/30/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/8%E7%A7%8D%E4%B8%BB%E8%A6%81%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E7%9A%84C%E5%AE%9E%E7%8E%B0/IMG-20250704185625066.gif" class="" title="复制代码">

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;span&gt; 1&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; BucketSortOnlyUnitDigit(IList&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt;&lt;span&gt; data)</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;        &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;             &lt;span&gt;int&lt;/span&gt;[] indexCounter = &lt;span&gt;new&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;[&lt;span&gt;10&lt;/span&gt;&lt;span&gt;];</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;             &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; i = &lt;span&gt;0&lt;/span&gt;; i &amp;lt; data.Count; i++&lt;span&gt;)</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;            &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt;                 indexCounter[data[i]]++&lt;span&gt;;</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;            &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;             &lt;span&gt;int&lt;/span&gt;[] indexBegin = &lt;span&gt;new&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;[&lt;span&gt;10&lt;/span&gt;&lt;span&gt;];</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;             &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; i = &lt;span&gt;1&lt;/span&gt;; i &amp;lt; &lt;span&gt;10&lt;/span&gt;; i++&lt;span&gt;)</span><br><span class="line">&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; &lt;span&gt;            &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;                 indexBegin[i] = indexBegin[i-1]+&lt;span&gt; indexCounter[i-1];</span><br><span class="line">&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; &lt;span&gt;            &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;16&lt;/span&gt;             IList&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt; tempList =&lt;span&gt; NewInstance(data, data.Count);</span><br><span class="line">&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;             &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; i = &lt;span&gt;0&lt;/span&gt;; i &amp;lt; data.Count; i++&lt;span&gt;)</span><br><span class="line">&lt;/span&gt;&lt;span&gt;18&lt;/span&gt; &lt;span&gt;            &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;19&lt;/span&gt;                 &lt;span&gt;int&lt;/span&gt; number =&lt;span&gt; data[i];</span><br><span class="line">&lt;/span&gt;&lt;span&gt;20&lt;/span&gt;                 tempList[indexBegin[number]++] =&lt;span&gt; data[i];</span><br><span class="line">&lt;/span&gt;&lt;span&gt;21&lt;/span&gt; &lt;span&gt;            &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;22&lt;/span&gt;             data =&lt;span&gt; tempList;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;23&lt;/span&gt;         &#125;</span><br></pre></td></tr></table></figure>

<img src="/2019/11/30/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/8%E7%A7%8D%E4%B8%BB%E8%A6%81%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E7%9A%84C%E5%AE%9E%E7%8E%B0/IMG-20250704185625066.gif" class="" title="复制代码">

<p>过程解析：indexCounter进行对每个数出现的频率的统计。indexBegin存储每个数的起始索引。</p>
<p>比如 1 1 2，indexCounter统计到0个0,2个1,1个2。indexBegin计算出0,1,2的起始索引分别为</p>
<p>0,0,2。当1个1已取出排序，那索引将+1,变为0,1,2。这样就通过提前给重复的数空出位置，解决了</p>
<p>重复的数出现的问题。当然，你也可以考虑用二维数组来解决重复。</p>
<p>下面继续基数排序。</p>
<p>基数排序原理：将整数按位数切割成不同的数字，然后按每个位数分别比较。</p>
<p>取得最大数的位数，从低位开始，每个位上进行桶排序。</p>
<p>实现如下：</p>
<img src="/2019/11/30/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/8%E7%A7%8D%E4%B8%BB%E8%A6%81%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E7%9A%84C%E5%AE%9E%E7%8E%B0/IMG-20250704185625066.gif" class="" title="复制代码">

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;span&gt; 1&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; IList&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt; RadixSort(IList&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt;&lt;span&gt; data)</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;        &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;             &lt;span&gt;int&lt;/span&gt; max = data[&lt;span&gt;0&lt;/span&gt;&lt;span&gt;];</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;             &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; i = &lt;span&gt;1&lt;/span&gt;; i &amp;lt; data.Count; i++&lt;span&gt;)</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;            &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt;                 &lt;span&gt;if&lt;/span&gt; (data[i] &amp;gt;&lt;span&gt; max)</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;                     max =&lt;span&gt; data[i];</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;            &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;             &lt;span&gt;int&lt;/span&gt; digit = &lt;span&gt;1&lt;/span&gt;&lt;span&gt;;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;             &lt;span&gt;while&lt;/span&gt; (max / &lt;span&gt;10&lt;/span&gt; != &lt;span&gt;0&lt;/span&gt;&lt;span&gt;)</span><br><span class="line">&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; &lt;span&gt;            &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;12&lt;/span&gt;                 digit++&lt;span&gt;;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;                 max /= &lt;span&gt;10&lt;/span&gt;&lt;span&gt;;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;14&lt;/span&gt; &lt;span&gt;            &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;             &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; i = &lt;span&gt;0&lt;/span&gt;; i &amp;lt; digit; i++&lt;span&gt;)</span><br><span class="line">&lt;/span&gt;&lt;span&gt;16&lt;/span&gt; &lt;span&gt;            &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;                 &lt;span&gt;int&lt;/span&gt;[] indexCounter = &lt;span&gt;new&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;[&lt;span&gt;10&lt;/span&gt;&lt;span&gt;];</span><br><span class="line">&lt;/span&gt;&lt;span&gt;18&lt;/span&gt;                 IList&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt; tempList =&lt;span&gt; NewInstance(data, data.Count);</span><br><span class="line">&lt;/span&gt;&lt;span&gt;19&lt;/span&gt;                 &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; j = &lt;span&gt;0&lt;/span&gt;; j &amp;lt; data.Count; j++&lt;span&gt;)</span><br><span class="line">&lt;/span&gt;&lt;span&gt;20&lt;/span&gt; &lt;span&gt;                &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;21&lt;/span&gt;                     &lt;span&gt;int&lt;/span&gt; number = (data[j] % Convert.ToInt32(Math.Pow(&lt;span&gt;10&lt;/span&gt;, i + &lt;span&gt;1&lt;/span&gt;))) / Convert.ToInt32(Math.Pow(&lt;span&gt;10&lt;/span&gt;, i));  &lt;span&gt;//&lt;/span&gt;&lt;span&gt;得出i+1位上的数&lt;/span&gt;</span><br><span class="line">&lt;span&gt;22&lt;/span&gt;                     indexCounter[number]++&lt;span&gt;;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;23&lt;/span&gt; &lt;span&gt;                &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;24&lt;/span&gt;                 &lt;span&gt;int&lt;/span&gt;[] indexBegin = &lt;span&gt;new&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;[&lt;span&gt;10&lt;/span&gt;&lt;span&gt;];</span><br><span class="line">&lt;/span&gt;&lt;span&gt;25&lt;/span&gt;                 &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; k = &lt;span&gt;1&lt;/span&gt;; k &amp;lt; &lt;span&gt;10&lt;/span&gt;; k++&lt;span&gt;)</span><br><span class="line">&lt;/span&gt;&lt;span&gt;26&lt;/span&gt; &lt;span&gt;                &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;27&lt;/span&gt;                     indexBegin[k] = indexBegin[k - &lt;span&gt;1&lt;/span&gt;] + indexCounter[k - &lt;span&gt;1&lt;/span&gt;&lt;span&gt;];</span><br><span class="line">&lt;/span&gt;&lt;span&gt;28&lt;/span&gt; &lt;span&gt;                &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;29&lt;/span&gt;                 &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; k = &lt;span&gt;0&lt;/span&gt;; k &amp;lt; data.Count; k++&lt;span&gt;)</span><br><span class="line">&lt;/span&gt;&lt;span&gt;30&lt;/span&gt; &lt;span&gt;                &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;31&lt;/span&gt;                     &lt;span&gt;int&lt;/span&gt; number = (data[k] % Convert.ToInt32(Math.Pow(&lt;span&gt;10&lt;/span&gt;, i + &lt;span&gt;1&lt;/span&gt;))) / Convert.ToInt32(Math.Pow(&lt;span&gt;10&lt;/span&gt;&lt;span&gt;, i));</span><br><span class="line">&lt;/span&gt;&lt;span&gt;32&lt;/span&gt;                     tempList[indexBegin[number]++] =&lt;span&gt; data[k];</span><br><span class="line">&lt;/span&gt;&lt;span&gt;33&lt;/span&gt; &lt;span&gt;                &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;34&lt;/span&gt;                 data =&lt;span&gt; tempList;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;35&lt;/span&gt; &lt;span&gt;            &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;36&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt;&lt;span&gt; data;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;37&lt;/span&gt;         &#125;</span><br></pre></td></tr></table></figure>

<img src="/2019/11/30/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/8%E7%A7%8D%E4%B8%BB%E8%A6%81%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E7%9A%84C%E5%AE%9E%E7%8E%B0/IMG-20250704185625066.gif" class="" title="复制代码">

<p>过程解析：得出最大数的位数，从低位开始桶排序。我写的这个实现代码并不简洁，但逻辑更清晰。</p>
<p>后面测试的时候我们就会发现，按理来说这个实现也还行吧！ 但并不如想象的那么快！</p>
<p>循环的次数太多？（统计频率n次+9次计算+n次放到新的数组）*位数。</p>
<p>创建的新实例太多？(new int[10]两次+NewInstance is反射判断创建实例+new int[n])*位数</p>
<h2 id="测试比较"><a href="#测试比较" class="headerlink" title="测试比较"></a>测试比较</h2><p>添加随机数组，数组有序校验，微软Linq排序</p>
<p>代码如下：</p>
<img src="/2019/11/30/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/8%E7%A7%8D%E4%B8%BB%E8%A6%81%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E7%9A%84C%E5%AE%9E%E7%8E%B0/IMG-20250704185625066.gif" class="" title="复制代码">

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;span&gt; 1&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;[] RandomSet(&lt;span&gt;int&lt;/span&gt; length, &lt;span&gt;int&lt;/span&gt;&lt;span&gt; max)</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;        &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;             &lt;span&gt;int&lt;/span&gt;[] result = &lt;span&gt;new&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt;[length];</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;             Random rand = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Random();</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;             &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; i = &lt;span&gt;0&lt;/span&gt;; i &amp;lt; result.Length; i++&lt;span&gt;)</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;            &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;                 result[i] =&lt;span&gt; rand.Next(max);</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;            &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt;&lt;span&gt; result;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; &lt;span&gt;        &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; </span><br><span class="line">&lt;span&gt;12&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;bool&lt;/span&gt; IsAscOrdered(IList&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt;&lt;span&gt; data)</span><br><span class="line">&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; &lt;span&gt;        &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;14&lt;/span&gt;             &lt;span&gt;bool&lt;/span&gt; flag = &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;             &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; i = &lt;span&gt;0&lt;/span&gt;; i &amp;lt; data.Count - &lt;span&gt;1&lt;/span&gt;; i++&lt;span&gt;)</span><br><span class="line">&lt;/span&gt;&lt;span&gt;16&lt;/span&gt; &lt;span&gt;            &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;                 &lt;span&gt;if&lt;/span&gt; (data[i] &amp;gt; data[i + &lt;span&gt;1&lt;/span&gt;&lt;span&gt;])</span><br><span class="line">&lt;/span&gt;&lt;span&gt;18&lt;/span&gt;                     flag = &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;19&lt;/span&gt; &lt;span&gt;            &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;20&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt;&lt;span&gt; flag;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;21&lt;/span&gt; &lt;span&gt;        &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;22&lt;/span&gt; </span><br><span class="line">&lt;span&gt;23&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; TestMicrosoft(IList&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt;&lt;span&gt; data)</span><br><span class="line">&lt;/span&gt;&lt;span&gt;24&lt;/span&gt; &lt;span&gt;        &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;25&lt;/span&gt;             Stopwatch stopwatch = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Stopwatch();</span><br><span class="line">&lt;/span&gt;&lt;span&gt;26&lt;/span&gt; &lt;span&gt;            stopwatch.Start();</span><br><span class="line">&lt;/span&gt;&lt;span&gt;27&lt;/span&gt;             List&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt; result = data.OrderBy(a =&amp;gt;&lt;span&gt; a).ToList();</span><br><span class="line">&lt;/span&gt;&lt;span&gt;28&lt;/span&gt; &lt;span&gt;            stopwatch.Stop();</span><br><span class="line">&lt;/span&gt;&lt;span&gt;29&lt;/span&gt;             &lt;span&gt;string&lt;/span&gt; methodName = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;TestMicrosoft&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;30&lt;/span&gt;             &lt;span&gt;int&lt;/span&gt; length =&lt;span&gt; methodName.Length;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;31&lt;/span&gt;             &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; i = &lt;span&gt;0&lt;/span&gt;; i &amp;lt; &lt;span&gt;40&lt;/span&gt; - length; i++&lt;span&gt;)</span><br><span class="line">&lt;/span&gt;&lt;span&gt;32&lt;/span&gt; &lt;span&gt;            &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;33&lt;/span&gt;                 methodName += &lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;34&lt;/span&gt; &lt;span&gt;            &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;35&lt;/span&gt;             Console.WriteLine(methodName +</span><br><span class="line">&lt;span&gt;36&lt;/span&gt;                 &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;  IsAscOrdered:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; + IsAscOrdered(result) + &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;  Time:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; +&lt;span&gt; stopwatch.Elapsed.TotalSeconds);</span><br><span class="line">&lt;/span&gt;&lt;span&gt;37&lt;/span&gt; </span><br><span class="line">&lt;span&gt;38&lt;/span&gt;         &#125;</span><br></pre></td></tr></table></figure>

<img src="/2019/11/30/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/8%E7%A7%8D%E4%B8%BB%E8%A6%81%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E7%9A%84C%E5%AE%9E%E7%8E%B0/IMG-20250704185625066.gif" class="" title="复制代码">

<p>测试主体如下：</p>
<img src="/2019/11/30/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/8%E7%A7%8D%E4%B8%BB%E8%A6%81%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E7%9A%84C%E5%AE%9E%E7%8E%B0/IMG-20250704185625066.gif" class="" title="复制代码">

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;span&gt; 1&lt;/span&gt;         &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; Main(&lt;span&gt;string&lt;/span&gt;&lt;span&gt;[] args)</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;        &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;             &lt;span&gt;int&lt;/span&gt;[] aa = RandomSet(&lt;span&gt;50000&lt;/span&gt;, &lt;span&gt;99999&lt;/span&gt;&lt;span&gt;);</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;             &lt;span&gt;//&lt;/span&gt;&lt;span&gt;int[] aa = OrderedSet(5000);&lt;/span&gt;</span><br><span class="line">&lt;span&gt; 5&lt;/span&gt;             Console.WriteLine(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Array Length:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; +&lt;span&gt; aa.Length);</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt;             RunTheMethod((Action&amp;lt;IList&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt;&amp;gt;)SelectSort, aa.Clone() &lt;span&gt;as&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt;[]);</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;             RunTheMethod((Action&amp;lt;IList&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt;&amp;gt;)BubbleSort, aa.Clone() &lt;span&gt;as&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt;[]);</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;             RunTheMethod((Action&amp;lt;IList&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt;&amp;gt;)BubbleSortImprovedWithFlag, aa.Clone() &lt;span&gt;as&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt;[]);</span><br><span class="line">&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;             RunTheMethod((Action&amp;lt;IList&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt;&amp;gt;)BubbleCocktailSort, aa.Clone() &lt;span&gt;as&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt;[]);</span><br><span class="line">&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;             RunTheMethod((Action&amp;lt;IList&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt;&amp;gt;)InsertSort, aa.Clone() &lt;span&gt;as&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt;[]);</span><br><span class="line">&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;             RunTheMethod((Action&amp;lt;IList&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt;&amp;gt;)InsertSortImprovedWithBinarySearch, aa.Clone() &lt;span&gt;as&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt;[]);</span><br><span class="line">&lt;/span&gt;&lt;span&gt;12&lt;/span&gt;             RunTheMethod((Action&amp;lt;IList&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt;&amp;gt;)QuickSortStrict, aa.Clone() &lt;span&gt;as&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt;[]);</span><br><span class="line">&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;             RunTheMethod((Action&amp;lt;IList&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt;&amp;gt;)QuickSortRelax, aa.Clone() &lt;span&gt;as&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt;[]);</span><br><span class="line">&lt;/span&gt;&lt;span&gt;14&lt;/span&gt;             RunTheMethod((Action&amp;lt;IList&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt;&amp;gt;)QuickSortRelaxImproved, aa.Clone() &lt;span&gt;as&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt;[]);</span><br><span class="line">&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;             RunTheMethod((Func&amp;lt;IList&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt;, IList&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt;&amp;gt;)MergeSort, aa.Clone() &lt;span&gt;as&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt;[]);</span><br><span class="line">&lt;/span&gt;&lt;span&gt;16&lt;/span&gt;             RunTheMethod((Action&amp;lt;IList&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt;&amp;gt;)ShellSort, aa.Clone() &lt;span&gt;as&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt;[]);</span><br><span class="line">&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;             RunTheMethod((Func&amp;lt;IList&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt;, IList&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt;&amp;gt;)RadixSort, aa.Clone() &lt;span&gt;as&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt;[]);</span><br><span class="line">&lt;/span&gt;&lt;span&gt;18&lt;/span&gt;             RunTheMethod((Action&amp;lt;IList&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt;&amp;gt;)HeapSort, aa.Clone() &lt;span&gt;as&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt;[]);</span><br><span class="line">&lt;/span&gt;&lt;span&gt;19&lt;/span&gt;             TestMicrosoft(aa.Clone() &lt;span&gt;as&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt;[]);</span><br><span class="line">&lt;/span&gt;&lt;span&gt;20&lt;/span&gt; &lt;span&gt;            Console.Read();</span><br><span class="line">&lt;/span&gt;&lt;span&gt;21&lt;/span&gt; &lt;span&gt;        &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;22&lt;/span&gt; </span><br><span class="line">&lt;span&gt;23&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; RunTheMethod(Func&amp;lt;IList&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt;, IList&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt;&amp;gt; method, IList&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt;&lt;span&gt; data)</span><br><span class="line">&lt;/span&gt;&lt;span&gt;24&lt;/span&gt; &lt;span&gt;        &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;25&lt;/span&gt;             Stopwatch stopwatch = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Stopwatch();</span><br><span class="line">&lt;/span&gt;&lt;span&gt;26&lt;/span&gt; &lt;span&gt;            stopwatch.Start();</span><br><span class="line">&lt;/span&gt;&lt;span&gt;27&lt;/span&gt;             IList&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt; result =&lt;span&gt; method(data);</span><br><span class="line">&lt;/span&gt;&lt;span&gt;28&lt;/span&gt; &lt;span&gt;            stopwatch.Stop();</span><br><span class="line">&lt;/span&gt;&lt;span&gt;29&lt;/span&gt;             &lt;span&gt;string&lt;/span&gt; methodName =&lt;span&gt; method.Method.Name;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;30&lt;/span&gt;             &lt;span&gt;int&lt;/span&gt; length =&lt;span&gt; methodName.Length;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;31&lt;/span&gt;             &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; i = &lt;span&gt;0&lt;/span&gt;; i &amp;lt; &lt;span&gt;40&lt;/span&gt; - length; i++&lt;span&gt;)</span><br><span class="line">&lt;/span&gt;&lt;span&gt;32&lt;/span&gt; &lt;span&gt;            &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;33&lt;/span&gt;                 methodName += &lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;34&lt;/span&gt; &lt;span&gt;            &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;35&lt;/span&gt;             Console.WriteLine(methodName +</span><br><span class="line">&lt;span&gt;36&lt;/span&gt;                 &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;  IsAscOrdered:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; + IsAscOrdered(result) + &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;  Time:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; +&lt;span&gt; stopwatch.Elapsed.TotalSeconds);</span><br><span class="line">&lt;/span&gt;&lt;span&gt;37&lt;/span&gt; &lt;span&gt;        &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;38&lt;/span&gt; </span><br><span class="line">&lt;span&gt;39&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; RunTheMethod(Action&amp;lt;IList&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt;&amp;gt; method, IList&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt;&lt;span&gt; data)</span><br><span class="line">&lt;/span&gt;&lt;span&gt;40&lt;/span&gt; &lt;span&gt;        &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;41&lt;/span&gt;             Stopwatch stopwatch = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Stopwatch();</span><br><span class="line">&lt;/span&gt;&lt;span&gt;42&lt;/span&gt; &lt;span&gt;            stopwatch.Start();</span><br><span class="line">&lt;/span&gt;&lt;span&gt;43&lt;/span&gt; &lt;span&gt;            method(data);</span><br><span class="line">&lt;/span&gt;&lt;span&gt;44&lt;/span&gt; &lt;span&gt;            stopwatch.Stop();</span><br><span class="line">&lt;/span&gt;&lt;span&gt;45&lt;/span&gt;             &lt;span&gt;string&lt;/span&gt; methodName =&lt;span&gt; method.Method.Name;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;46&lt;/span&gt;             &lt;span&gt;int&lt;/span&gt; length =&lt;span&gt; methodName.Length;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;47&lt;/span&gt;             &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; i = &lt;span&gt;0&lt;/span&gt;; i &amp;lt; &lt;span&gt;40&lt;/span&gt; - length; i++&lt;span&gt;)</span><br><span class="line">&lt;/span&gt;&lt;span&gt;48&lt;/span&gt; &lt;span&gt;            &#123;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;49&lt;/span&gt;                 methodName += &lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;50&lt;/span&gt; &lt;span&gt;            &#125;</span><br><span class="line">&lt;/span&gt;&lt;span&gt;51&lt;/span&gt;             Console.WriteLine(methodName +</span><br><span class="line">&lt;span&gt;52&lt;/span&gt;                 &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;  IsAscOrdered:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; + IsAscOrdered(data) + &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;  Time:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; +&lt;span&gt; stopwatch.Elapsed.TotalSeconds);</span><br><span class="line">&lt;/span&gt;&lt;span&gt;53&lt;/span&gt;         &#125;</span><br></pre></td></tr></table></figure>

<img src="/2019/11/30/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/8%E7%A7%8D%E4%B8%BB%E8%A6%81%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E7%9A%84C%E5%AE%9E%E7%8E%B0/IMG-20250704185625066.gif" class="" title="复制代码">

<p>剩余代码折叠在此处</p>
<img src="/2019/11/30/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/8%E7%A7%8D%E4%B8%BB%E8%A6%81%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E7%9A%84C%E5%AE%9E%E7%8E%B0/IMG-20250704185625323.gif" class=""> View Code

<p>测试设备：win8(64位)，i7-3630QM,8G内存，vs2012</p>
<p>测试结果：</p>
<p>100000,50000,10000,5000,1000,100依次是：</p>
<img src="/2019/11/30/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/8%E7%A7%8D%E4%B8%BB%E8%A6%81%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E7%9A%84C%E5%AE%9E%E7%8E%B0/IMG-20250704185625384.jpg" class="">

<img src="/2019/11/30/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/8%E7%A7%8D%E4%B8%BB%E8%A6%81%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E7%9A%84C%E5%AE%9E%E7%8E%B0/IMG-20250704185625426.jpg" class=""><img src="/2019/11/30/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/8%E7%A7%8D%E4%B8%BB%E8%A6%81%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E7%9A%84C%E5%AE%9E%E7%8E%B0/IMG-20250704185625487.jpg" class=""><img src="/2019/11/30/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/8%E7%A7%8D%E4%B8%BB%E8%A6%81%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E7%9A%84C%E5%AE%9E%E7%8E%B0/IMG-20250704185625541.jpg" class=""><img src="/2019/11/30/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/8%E7%A7%8D%E4%B8%BB%E8%A6%81%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E7%9A%84C%E5%AE%9E%E7%8E%B0/IMG-20250704185625607.jpg" class=""><img src="/2019/11/30/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/8%E7%A7%8D%E4%B8%BB%E8%A6%81%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E7%9A%84C%E5%AE%9E%E7%8E%B0/IMG-20250704185625659.jpg" class="">

<p>结果分析：可以看出在大数组的时候，微软自带排序更接近快速排序。而当数组变小时，速度却没有明显提升，甚至变得更慢，</p>
<p>比如1000和100。可以推断出在数组足够小的时候，比较已经不是影响这个方法主要因素。而根据它对大数组的表现。我们可以</p>
<p>推断出它应该用的是快速排序。反编译验证下：</p>
<img src="/2019/11/30/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/8%E7%A7%8D%E4%B8%BB%E8%A6%81%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E7%9A%84C%E5%AE%9E%E7%8E%B0/IMG-20250704185625705.jpg" class="">

<p>在System.Linq.EnumerableSorter下。有兴趣的同学可以去看下详细实现。</p>
<p>维基上也有个测试。硬件没我的好。时间是我测试结果时间的几百倍。有兴趣的同学可以比较下。</p>
<p>在上面的测试中，我们可以看到快速最快，归并其次，冒泡最慢（维基上是希尔最快，估计使用的是某种神奇的步长）。</p>
<p>在我这里，以前实现的希尔还不如二分查找优化版的快，修正后希尔快了相当多，上面测试的希尔排序是以前错误的实现。</p>
<p>修正后的实现测试效果请点击右侧导航到希尔排序查看。希尔排序是一种神奇又有潜力的算法。步长不好会很挫！</p>
<p>而基数排序却是比平均时间复杂度为o(nlogn)的堆排序，归并排序，快速排序还要慢的，虽然它的平均时间复杂度为o(n)。</p>
<p>冒泡标识优化版对随机数列结果优化不明显，鸡尾酒版优化可以看到，但也不是很厉害。</p>
<p>插入排序二分查找优化版优化比较明显。我优化的快速排序QuickSortRelaxImproved优化也不明显。</p>
<p>以上是随机数列的测试结果，最大值为99999。</p>
<p>而对于有序数列，这些方法表现又会如何呢？</p>
<p>我这里就不演示了。<a href="http://www.cnblogs.com/fatbird/p/SortAlgorithm.html">本文</a>末尾会附上demo，大家可以自行测试。</p>
<p>有意思的是:</p>
<p>我在测试有序数列的时候，QuickSortStrict方法栈溢出了（stack overflow exception）。这个异常</p>
<p>是让我去stackoverflow搜寻答案吗？哈哈！我确信我的方法不是无限循环。跳过一堆链接。。。我是</p>
<p>在测试10000个数排序的时候发生的错误。我跟踪后发现大约在9400多次递归的时候，栈溢出。找啊找</p>
<p>终于找见了一个类似的<a href="http://stackoverflow.com/questions/4106708/runtime-exception-recursion-too-deep">问题</a>。上面说如果一个递归9000多次而没有返回值，也会报栈溢出的。而这个方法</p>
<p>对于10000个有序数列，确实每次减少一个数地递归，次数会超过限制。</p>
<p>我的算法理论不怎么好，对于时间复杂度和空间复杂度，还有稳定度，搞得也不怎么清楚，只知道个大致的  </p>
<p>意思。各位要笔试面试的朋友可以去<a href="http://zh.wikipedia.org/wiki/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95#.E7.AE.80.E8.A6.81.E6.AF.94.E8.BE.83">维基百科这个表</a>来了解学习。</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>我觉得使用IList<int>更贴近数列，更能展现基本的操作。所以我的实现中都没有将它强制转化为List<int></p>
<p>或者int[]来调用微软封装的方法。这样说来，题目说C#实现倒快有点名不副实了。不过这样却也方便了其它语言</p>
<p>朋友。比如将我这篇博文里的实现随便改改，就可以说是另一个语言版本的8种排序算法了。哈哈！在这里，</p>
<p>我想说下这次学习排序对我的意义：老久不怎么动脑了，突然动起来，磨磨唧唧地得出结果，最后倒也有点成就感！</p>
<p>在学习过程中，经常会脑子转不过弯，想不通的，只是走在路上或者睡觉前突然灵感一现，有点小惊喜的感觉！</p>
<p>这大概就是进步的特征吧！哈哈！这次写demo+写博客花费了不少时间，倒也收获颇多，尤其在我将8种</p>
<p>排序都实现之前，没进行过一次测试，全部实现完成后，测试时各种索引越界+无限循环+各种问题，没几个</p>
<p>能跑通的，到后来的几乎都没有问题，也算是锻炼了思维，找出错原因的能力。本篇是自我学习的一个总结，</p>
<p>要学习及锻炼的园友，还望一定自己实现一下，可以和我的比较一下，解除疑惑或者提出改进。</p>
<h4 id="主要参考：维基百科，有趣的演示"><a href="#主要参考：维基百科，有趣的演示" class="headerlink" title="主要参考：维基百科，有趣的演示"></a>主要参考：<a href="http://zh.wikipedia.org/wiki/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95">维基百科</a>，<a href="http://www.cs.usfca.edu/~galles/visualization/Algorithms.html">有趣的演示</a></h4><h4 id="Demo源码"><a href="#Demo源码" class="headerlink" title="Demo源码"></a><a href="https://files.cnblogs.com/fatbird/SortAlgorithmDemo.zip">Demo源码</a></h4><p>PS:我打算三月份去广州发展，主要会Asp.net mvc+jquery（不介意学习新的技术[除了webform]及语言[除了java]）。</p>
]]></content>
      <categories>
        <category>学习笔记</category>
        <category>排序算法</category>
      </categories>
      <tags>
        <tag>排序算法</tag>
      </tags>
  </entry>
  <entry>
    <title>CSharp排序算法小结</title>
    <url>/2019/11/30/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/CSharp%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E5%B0%8F%E7%BB%93/</url>
    <content><![CDATA[<p><strong>前言</strong></p>
<p>算法这个东西其实在开发中很少用到，特别是web开发中，但是算法也很重要，因为任何的程序，任何的软件，都是由很多的算法和数据结构组成的。但是这不意味着算法对于每个软件设计人员的实际工作都是很重要的。每个项目特点和需求特殊也导致算法运用场景上不同。但是个人觉得算法运用的好的话会给自己在程序设计的时候提供比较好的思路。下面就对一些排序算法小结一下，就当做自己的一个笔记吧。</p>
<p><strong>插入排序</strong></p>
<p> <strong>1.简介</strong></p>
<p>插入排序（Insertion Sort）的算法描述是一种简单直观的排序算法。它的工作原理是通过构建有序序列，对于未排序数据，在已排序序列中从后向前扫描，找到相应位置并插入。插入排序在实现上，通常采用in-place排序（即只需用到O(1)的额外空间的排序），因而在从后向前扫描过程中，需要反复把已排序元素逐步向后挪位，为最新元素提供插入空间。</p>
<p><strong>2.算法描述</strong></p>
<p>一般来说，插入排序都采用in-place在数组上实现。具体算法描述如下：<br>1.从第一个元素开始，该元素可以认为已经被排序<br>2.取出下一个元素，在已经排序的元素序列中从后向前扫描<br>3.如果该元素（已排序）大于新元素，将该元素移到下一位置<br>4.重复步骤3，直到找到已排序的元素小于或者等于新元素的位置<br>5.将新元素插入到该位置后<br>6.重复步骤2~5<br>如果比较操作的代价比交换操作大的话，可以采用二分查找法来减少比较操作的数目。该算法可以认为是插入排序的一个变种，称为二分查找排序。</p>
<p><strong>3.使用插入排序为一列数字进行排序的过程</strong> </p>
<p><img src="https://images0.cnblogs.com/blog/373130/201402/181030498429191.gif"></p>
<p><img src="https://images0.cnblogs.com/blog/373130/201402/181031003601771.gif"></p>
<p><strong>最差时间复杂度 <img src="http://upload.wikimedia.org/math/c/d/6/cd641c6cabc83e0f7ff510bf812feca1.png" alt="O(n^{2})"></strong> </p>
<p>最优时间复杂度 <img src="http://upload.wikimedia.org/math/7/b/a/7ba55e7c64a9405a0b39a1107e90ca94.png" alt="O(n)"></p>
<p>平均时间复杂度<img src="http://upload.wikimedia.org/math/c/d/6/cd641c6cabc83e0f7ff510bf812feca1.png" alt="O(n^{2})"></p>
<p><strong>4.C#实现</strong></p>
<p><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></p>
<pre><code>    /// &lt;summary&gt;
    /// 插入排序 /// &lt;/summary&gt;
    public class InsertionSorter
    &#123; public void Sort(int\[\] list)
        &#123; for (int i = 1; i &lt; list.Length; ++i)
            &#123; int t = list\[i\]; int j = i; while ((j &gt; 0) &amp;&amp; (list\[j - 1\] &gt; t))
                &#123;
                    list\[j\] \= list\[j - 1\]; \--j;
                &#125;
                list\[j\] \= t;
            &#125;

        &#125;
    &#125;
</code></pre>
<p><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></p>
<p>数组</p>
<p>int[] iArrary &#x3D; new int[] { 1, 5, 3, 6, 10, 55, 9, 2, 87, 12, 34, 75, 33, 47 };</p>
<p><strong>希尔排序</strong></p>
<p> <strong>1.简介</strong></p>
<p>希尔排序，也称递减增量排序算法，是插入排序的一种更高效的改进版本。希尔排序是非稳定排序算法。</p>
<p><strong>2.算法实现</strong></p>
<p>原始的算法实现在最坏的情况下需要进行O(n2)的比较和交换。V. Pratt的书[1] 对算法进行了少量修改，可以使得性能提升至O(n log2 n)。这比最好的比较算法的O(n log n)要差一些。<br>希尔排序通过将比较的全部元素分为几个区域来提升插入排序的性能。这样可以让一个元素可以一次性地朝最终位置前进一大步。然后算法再取越来越小的步长进行排序，算法的最后一步就是普通的插入排序，但是到了这步，需排序的数据几乎是已排好的了（此时插入排序较快）。<br>假设有一个很小的数据在一个已按升序排好序的数组的末端。如果用复杂度为O(n2)的排序（冒泡排序或插入排序），可能会进行n次的比较和交换才能将该数据移至正确位置。而希尔排序会用较大的步长移动数据，所以小数据只需进行少数比较和交换即可到正确位置。<br>一个更好理解的希尔排序实现：将数组列在一个表中并对列排序（用插入排序）。重复这过程，不过每次用更长的列来进行。最后整个表就只有一列了。将数组转换至表是为了更好地理解这算法，算法本身仅仅对原数组进行排序（通过增加索引的步长，例如是用i +&#x3D; step_size而不是i++）。</p>
<p><strong>3.排序过程</strong></p>
<p><img src="https://images0.cnblogs.com/blog/373130/201402/181058308243697.gif"></p>
<p>最差时间复杂度 根据步长串行的不同而不同。<img src="http://upload.wikimedia.org/math/2/0/0/20062c989c6b1067c07dfdeb30efbfb7.png" alt="O(n\log^2 n)"></p>
<p>最优时间复杂度 O(<em>n</em>)</p>
<p>平均时间复杂度  根据步长串行的不同而不同。</p>
<p><strong>4.C#实现</strong></p>
<p><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></p>
<pre><code>    /// &lt;summary&gt;
    /// 希尔排序 /// &lt;/summary&gt;
    public class ShellSorter
    &#123; public void Sort(int\[\] list)
        &#123; int inc; for (inc = 1; inc &lt;= list.Length / 9; inc = 3 \* inc + 1) ; for (; inc &gt; 0; inc /= 3)
            &#123; for (int i = inc + 1; i &lt;= list.Length; i += inc)
                &#123; int t = list\[i - 1\]; int j = i; while ((j &gt; inc) &amp;&amp; (list\[j - inc - 1\] &gt; t))
                    &#123;
                        list\[j \- 1\] = list\[j - inc - 1\];
                        j \-= inc;
                    &#125;
                    list\[j \- 1\] = t;
                &#125;
            &#125;
        &#125;
    &#125;
</code></pre>
<p><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></p>
<p><strong>选择排序</strong></p>
<p> 1.简介</p>
<p>选择排序(Selection sort)是一种简单直观的排序算法。它的工作原理如下。首先在未排序序列中找到最小（大）元素，存放到排序序列的起始位置，然后，再从剩余未排序元素中继续寻找最小（大）元素，然后放到已排序序列的末尾。以此类推，直到所有元素均排序完毕。<br>选择排序的主要优点与数据移动有关。如果某个元素位于正确的最终位置上，则它不会被移动。选择排序每次交换一对元素，它们当中至少有一个将被移到其最终位置上，因此对n个元素的表进行排序总共进行至多n-1次交换。在所有的完全依靠交换去移动元素的排序方法中，选择排序属于非常好的一种。</p>
<p>2.实现过程</p>
<p><img src="https://images0.cnblogs.com/blog/373130/201402/181110130383862.gif"></p>
<p>最差时间复杂度 <em>О(n²)</em></p>
<p><em>最优时间复杂度 <em>О(n²)</em></em></p>
<p>平均时间复杂度 <em>О(n²)</em></p>
<p><strong>3.C#实现</strong></p>
<p><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></p>
<pre><code>    /// &lt;summary&gt;
    /// 选择排序 /// &lt;/summary&gt;
    public class SelectionSorter
    &#123; // public enum comp &#123;COMP\_LESS,COMP\_EQUAL,COMP\_GRTR&#125;;
        private int min; // private int m=0;
        public void Sort(int\[\] list)
        &#123; for (int i = 0; i &lt; list.Length - 1; ++i)
            &#123;
                min \= i; for (int j = i + 1; j &lt; list.Length; ++j)
                &#123; if (list\[j\] &lt; list\[min\])
                        min \= j;
                &#125; int t = list\[min\];
                list\[min\] \= list\[i\];
                list\[i\] \= t; // Console.WriteLine(&quot;&#123;0&#125;&quot;,list\[i\]);
</code></pre>
<p> }</p>
<pre><code>        &#125;
    &#125;
</code></pre>
<p><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></p>
<p><strong>冒泡排序</strong></p>
<p> <strong>1.简介</strong></p>
<p>冒泡排序（Bubble Sort，台湾译为：泡沫排序或气泡排序）是一种简单的排序算法。它重复地走访过要排序的数列，一次比较两个元素，如果他们的顺序错误就把他们交换过来。走访数列的工作是重复地进行直到没有再需要交换，也就是说该数列已经排序完成。这个算法的名字由来是因为越小的元素会经由交换慢慢“浮”到数列的顶端。<br>冒泡排序对n个项目需要O(n^{2})的比较次数，且可以原地排序。尽管这个算法是最简单了解和实作的排序算法之一，但它对于少数元素之外的数列排序是很没有效率的。<br>冒泡排序是与插入排序拥有相等的执行时间，但是两种法在需要的交换次数却很大地不同。在最坏的情况，冒泡排序需要O(n^{2})次交换，而插入排序只要最多O(n)交换。冒泡排序的实现（类似下面）通常会对已经排序好的数列拙劣地执行（O(n^{2})），而插入排序在这个例子只需要O(n)个运算。因此很多现代的算法教科书避免使用冒泡排序，而用插入排序取代之。冒泡排序如果能在内部循环第一次执行时，使用一个旗标来表示有无需要交换的可能，也有可能把最好的复杂度降低到O(n)。在这个情况，在已经排序好的数列就无交换的需要。若在每次走访数列时，把走访顺序和比较大小反过来，也可以稍微地改进效率。有时候称为往返排序，因为算法会从数列的一端到另一端之间穿梭往返。</p>
<p><strong>2.算法实现</strong><br>1.比较相邻的元素。如果第一个比第二个大，就交换他们两个。<br>2.对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对。在这一点，最后的元素应该会是最大的数。<br>3.针对所有的元素重复以上的步骤，除了最后一个。<br>4.持续每次对越来越少的元素重复上面的步骤，直到没有任何一对数字需要比较。 </p>
<p><strong>3.实现过程</strong></p>
<p><img src="https://images0.cnblogs.com/blog/373130/201402/181136161673239.gif"></p>
<p>最差时间复杂度 <img src="http://upload.wikimedia.org/math/c/d/6/cd641c6cabc83e0f7ff510bf812feca1.png" alt="O(n^{2})"></p>
<p>最优时间复杂度 <img src="http://upload.wikimedia.org/math/7/b/a/7ba55e7c64a9405a0b39a1107e90ca94.png" alt="O(n)"></p>
<p>平均时间复杂度 <img src="http://upload.wikimedia.org/math/c/d/6/cd641c6cabc83e0f7ff510bf812feca1.png" alt="O(n^{2})"></p>
<p><strong>4.C#实现</strong></p>
<p><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></p>
<pre><code>   /// &lt;summary&gt;
    /// 冒泡排序 /// &lt;/summary&gt;
    public class bubblesort
    &#123; public void BubbleSort(int\[\] R)
        &#123; int i, j, temp; //交换标志 
            bool exchange; for (i = 0; i &lt; R.Length; i++) //最多做R.Length-1趟排序 
</code></pre>
<p> {<br>                    exchange = false; &#x2F;&#x2F;本趟排序开始前，交换标志应为假<br>                    for (j &#x3D; R.Length - 2; j &gt;&#x3D; i; j–)<br>                    { if (R[j + 1] &lt; R[j])　&#x2F;&#x2F;交换条件<br> {<br>                            temp = R[j + 1];<br>                            R[j + 1] &#x3D; R[j];<br>                            R[j] = temp;<br>                            exchange = true; &#x2F;&#x2F;发生了交换，故将交换标志置为真<br> }<br>                    } if (!exchange) &#x2F;&#x2F;本趟排序未发生交换，提前终止算法<br> { break;<br>                    }<br>                }<br>            }<br>        }</p>
<p><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></p>
]]></content>
      <categories>
        <category>学习笔记</category>
        <category>排序算法</category>
      </categories>
      <tags>
        <tag>排序算法</tag>
      </tags>
  </entry>
  <entry>
    <title>C#排序算法的比较</title>
    <url>/2024/09/04/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/CSharp%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E7%9A%84%E6%AF%94%E8%BE%83/</url>
    <content><![CDATA[<h1 id="C-排序算法的比较"><a href="#C-排序算法的比较" class="headerlink" title="C#排序算法的比较"></a>C#排序算法的比较</h1><p><strong>首先通过图表比较不同排序算法的时间复杂度和稳定性。</strong></p>
<table><tbody><tr><td><p><strong>排序方法</strong></p></td><td><p><strong>平均时间</strong></p></td><td><p><strong>最坏情况</strong></p></td><td><p><strong>最好情况</strong></p></td><td><p><strong>辅助空间</strong></p></td><td><p><strong>稳定性</strong></p></td></tr><tr><td>直接插入排序</td><td><p>O(n<sup>2</sup>)</p></td><td><p>O(n<sup>2</sup>)</p></td><td><p>O(n)</p></td><td><p>O(1)</p></td><td>是</td></tr><tr><td>冒泡排序</td><td><p>O(n<sup>2</sup>)</p></td><td><p>O(n<sup>2</sup>)</p></td><td><p>O(n)</p></td><td><p>O(1)</p></td><td>是</td></tr><tr><td>简单选择排序</td><td><p>O(n<sup>2</sup>)</p></td><td><p>O(n<sup>2</sup>)</p></td><td><p>O(n<sup>2</sup>)</p></td><td><p>O(1)</p></td><td>是</td></tr><tr><td>希尔排序</td><td>-</td><td><p>O(nlog<sub>2</sub>n)~O(n<sup>2</sup>)</p></td><td><p>O(nlog<sub>2</sub>n)~O(n<sup>2</sup>)</p></td><td><p>O(1)</p></td><td>否</td></tr><tr><td>快速排序</td><td><p>O(nlog<sub>2</sub>n)</p></td><td><p>O(n<sup>2</sup>)</p></td><td><p>O(nlog<sub>2</sub>n)</p></td><td><p>O(log<sub>2</sub>n)</p></td><td>否</td></tr><tr><td>堆排序</td><td><p>O(nlog<sub>2</sub>n)</p></td><td><p>O(nlog<sub>2</sub>n)</p></td><td><p>O(nlog<sub>2</sub>n)</p></td><td><p>O(1)</p></td><td>否</td></tr><tr><td>2-路归并排序</td><td><p>O(nlog<sub>2</sub>n)</p></td><td><p>O(nlog<sub>2</sub>n)</p></td><td><p>O(nlog<sub>2</sub>n)</p></td><td><p>O(n)</p></td><td>是</td></tr><tr><td>基数排序</td><td>O(d(n + rd))</td><td>O(d(n + rd))</td><td>O(d(n + rd))</td><td>O(rd)</td><td>是</td></tr></tbody></table>

<p>注：1. 算法的时间复杂度一般情况下指最坏情况下的渐近时间复杂度。</p>
<p>        2. 排序算法的稳定性会对多关键字排序产生影响。</p>
<p><strong>下面通过C#代码说明不同的排序算法</strong></p>
<p><strong>插入排序</strong></p>
<p><strong>时间复杂度：平均情况—O(n<sup><span>2</span></sup>) 最坏情况—O(n<sup><span>2</span></sup>) 辅助空间：O(1) 稳定性：稳定</strong></p>
<p>插入排序是在一个已经有序的小序列的基础上，一次插入一个元素。当然，刚开始这个有序的小序列只有1个元素，就是第一个元素。比较是从有序序列的末尾开始，也就是想要插入的元素和已经有序的最大者开始比起，如果比它大则直接插入在其后面，否则一直往前找直到找到它该插入的位置。如果碰见一个和插入元素相等的，那么插入元素把想插入的元素放在相等元素的后面。所以，相等元素的前后顺序没有改变，从原无序序列出去的顺序就是排好序后的顺序，所以插入排序是稳定的。</p>
<p><strong>希尔排序(shell)</strong></p>
<p><strong>时间复杂度：理想情况—O(nlog<sub><span>2</span></sub>n) 最坏情况—O(n<sup><span>2</span></sup>) 稳定性：不稳定</strong></p>
<p>希尔排序是按照不同步长对元素进行插入排序，当刚开始元素很无序的时候，步长最大，所以插入排序的元素个数很少，速度很快；当元素基本有序了，步长很小，插入排序对于有序的序列效率很高。所以，希尔排序的时间复杂度会比o(n^2)好一些。由于多次插入排序，我们知道一次插入排序是稳定的，不会改变相同元素的相对顺序，但在不同的插入排序过程中，相同的元素可能在各自的插入排序中移动，最后其稳定性就会被打乱，所以shell排序是不稳定的。</p>
<p><strong>冒泡排序</strong></p>
<p><strong>时间复杂度：平均情况—O(n<sup><span>2</span></sup>) 最坏情况—O(n<sup><span>2</span></sup>) 辅助空间：O(1) 稳定性：稳定</strong></p>
<p>冒泡排序就是把小的元素往前调或者把大的元素往后调。比较是相邻的两个元素比较，交换也发生在这两个元素之间。所以，如果两个元素相等，我想你是不会再无聊地把他们俩交换一下的；如果两个相等的元素没有相邻，那么即使通过前面的两两交换把两个相邻起来，这时候也不会交换，所以相同元素的前后顺序并没有改变，所以冒泡排序是一种稳定排序算法。</p>
<p><strong>快速排序</strong></p>
<p><strong>时间复杂度：平均情况—O(nlog<sub><span>2</span></sub>n) 最坏情况—O(n<sup><span>2</span></sup>) 辅助空间：O(log<sub><span>2</span></sub>n) 稳定性：不稳定</strong></p>
<p>快速排序有两个方向，左边的i下标一直往右走，当a[i] &lt;&#x3D; a[center_index]，其中center_index是中枢元素的数组下标，一般取为数组第0个元素。而右边的j下标一直往左走，当a[j] &gt; a[center_index]。如果i和j都走不动了，i &lt;&#x3D; j, 交换a[i]和a[j],重复上面的过程，直到i&gt;j。 交换a[j]和a[center_index]，完成一趟快速排序。在中枢元素和a[j]交换的时候，很有可能把前面的元素的稳定性打乱，比如序列为 5 3 3 4 3 8 9 10 11， 现在中枢元素5和3(第5个元素，下标从1开始计)交换就会把元素3的稳定性打乱，所以快速排序是一个不稳定的排序算法，不稳定发生在中枢元素和a[j]交换的时刻。</p>
<p><strong>选择排序</strong></p>
<p><strong>时间复杂度：平均情况—O(n<sup><span>2</span></sup>) 最坏情况—O(n<sup><span>2</span></sup>) 辅助空间：O(1) 稳定性：不稳定</strong></p>
<p>选择排序是给每个位置选择当前元素最小的，比如给第一个位置选择最小的，在剩余元素里面给第二个元素选择第二小的，依次类推，直到第n-1个元素，第n个元素不用选择了，因为只剩下它一个最大的元素了。那么，在一趟选择，如果当前元素比一个元素小，而该小的元素又出现在一个和当前元素相等的元素后面，那么交换后稳定性就被破坏了。比较拗口，举个例子，序列5 8 5 2 9， 我们知道第一遍选择第1个元素5会和2交换，那么原序列中2个5的相对前后顺序就被破坏了，所以选择排序不是一个稳定的排序算法。</p>
<p><strong>堆排序</strong></p>
<p><strong>时间复杂度：平均情况—O(nlog<sub><span>2</span></sub>n) 最坏情况—O(nlog<sub><span>2</span></sub>n) 辅助空间：O(1) 稳定性：不稳定</strong></p>
<p>我们知道堆的结构是节点i的孩子为2*i和2*i+1节点，大顶堆要求父节点大于等于其2个子节点，小顶堆要求父节点小于等于其2个子节点。在一个长为n的序列，堆排序的过程是从第n&#x2F;2开始和其子节点共3个值选择最大(大顶堆)或者最小(小顶堆),这3个元素之间的选择当然不会破坏稳定性。但当为n&#x2F;2-1, n&#x2F;2-2, …1这些个父节点选择元素时，就会破坏稳定性。有可能第n&#x2F;2个父节点交换把后面一个元素交换过去了，而第n&#x2F;2-1个父节点把后面一个相同的元素没有交换，那么这2个相同的元素之间的稳定性就被破坏了。所以，堆排序不是稳定的排序算法</p>
<p><strong>归并排序</strong></p>
<p><strong>时间复杂度：平均情况—O(nlog<sub><span>2</span></sub>n) 最坏情况—O(nlog<sub><span>2</span></sub>n) 辅助空间：O(n) 稳定性：稳定</strong></p>
<p>归并排序是把序列递归地分成短序列，递归出口是短序列只有1个元素(认为直接有序)或者2个序列(1次比较和交换),然后把各个有序的段序列合并成一个有序的长序列，不断合并直到原序列全部排好序。可以发现，在1个或2个元素时，1个元素不会交换，2个元素如果大小相等也没有人故意交换，这不会破坏稳定性。那么，在短的有序序列合并的过程中，稳定是是否受到破坏？没有，合并过程中我们可以保证如果两个当前元素相等时，我们把处在前面的序列的元素保存在结果序列的前面，这样就保证了稳定性。所以，归并排序也是稳定的排序算法。</p>
]]></content>
      <categories>
        <category>学习笔记</category>
        <category>排序算法</category>
      </categories>
      <tags>
        <tag>排序算法</tag>
      </tags>
  </entry>
  <entry>
    <title>C#经典排序算法大全</title>
    <url>/2024/09/04/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/CSharp%E7%BB%8F%E5%85%B8%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E5%A4%A7%E5%85%A8/</url>
    <content><![CDATA[<h1 id="C-经典排序算法大全"><a href="#C-经典排序算法大全" class="headerlink" title="C# 经典排序算法大全"></a>C# 经典排序算法大全</h1><blockquote>
<h2 id="Excerpt"><a href="#Excerpt" class="headerlink" title="Excerpt"></a>Excerpt</h2><p>文章浏览阅读84次。C# 经典排序算法大全选择排序using System;using System.Collections.Generic;using System.Linq;using System.Text;namespace sorter{    public class SelectionSorter    {        private int min;       …_c# case复杂排序</p>
</blockquote>
<hr>
<h2 id="C-经典排序算法大全-1"><a href="#C-经典排序算法大全-1" class="headerlink" title="C# 经典排序算法大全"></a>C# 经典排序算法大全</h2><h3 id="选择排序"><a href="#选择排序" class="headerlink" title="选择排序"></a>选择排序</h3><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">sorter</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">SelectionSorter</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="built_in">int</span> min;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Sort</span>(<span class="params"><span class="built_in">int</span>[] arr</span>)</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; arr.Length - <span class="number">1</span>; ++i)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">min = i;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> j = i + <span class="number">1</span>; j &lt; arr.Length; ++j)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (arr[j] &lt; arr[min])</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">min = j;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> t = arr[min];</span><br><span class="line"></span><br><span class="line">arr[min] = arr[i];</span><br><span class="line"></span><br><span class="line">arr[i] = t;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span>[] arrInt = <span class="keyword">new</span> <span class="built_in">int</span>[] &#123; <span class="number">4</span>, <span class="number">2</span>, <span class="number">7</span>, <span class="number">1</span>, <span class="number">8</span>, <span class="number">3</span>, <span class="number">9</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">6</span> &#125;;</span><br><span class="line"></span><br><span class="line">SelectionSorter selSor = <span class="keyword">new</span> SelectionSorter();</span><br><span class="line"></span><br><span class="line">selSor.Sort(arrInt);</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> (<span class="built_in">int</span> i <span class="keyword">in</span> arrInt)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">Console.WriteLine(i);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Console.ReadKey();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h3><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">sorter</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">EbullitionSorter</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Sort</span>(<span class="params"><span class="built_in">int</span>[] arr</span>)</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> i, j, temp;</span><br><span class="line"></span><br><span class="line"><span class="built_in">bool</span> done = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">j = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> ((j &lt; arr.Length) &amp;&amp; (!done))</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">done = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; arr.Length - j; i++)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (arr[i] &gt; arr[i + <span class="number">1</span>])</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">done = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">temp = arr[i];</span><br><span class="line"></span><br><span class="line">arr[i] = arr[i + <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">arr[i + <span class="number">1</span>] = temp;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">j++;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span>[] arrInt = <span class="keyword">new</span> <span class="built_in">int</span>[] &#123; <span class="number">4</span>, <span class="number">2</span>, <span class="number">7</span>, <span class="number">1</span>, <span class="number">8</span>, <span class="number">3</span>, <span class="number">9</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">6</span> &#125;;</span><br><span class="line"></span><br><span class="line">EbullitionSorter selSor = <span class="keyword">new</span> EbullitionSorter();</span><br><span class="line"></span><br><span class="line">selSor.Sort(arrInt);</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> (<span class="built_in">int</span> i <span class="keyword">in</span> arrInt)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">Console.WriteLine(i);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Console.ReadKey();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="高速排序"><a href="#高速排序" class="headerlink" title="高速排序"></a>高速排序</h3><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">sorter</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">QuickSorter</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">swap</span>(<span class="params"><span class="keyword">ref</span> <span class="built_in">int</span> l, <span class="keyword">ref</span> <span class="built_in">int</span> r</span>)</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> temp;</span><br><span class="line"></span><br><span class="line">temp = l;</span><br><span class="line"></span><br><span class="line">l = r;</span><br><span class="line"></span><br><span class="line">r = temp;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Sort</span>(<span class="params"><span class="built_in">int</span>[] list, <span class="built_in">int</span> low, <span class="built_in">int</span> high</span>)</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> pivot;</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> l, r;</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> mid;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (high &lt;= low)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (high == low + <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (list[low] &gt; list[high])</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">swap(<span class="keyword">ref</span> list[low], <span class="keyword">ref</span> list[high]);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">mid = (low + high) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">pivot = list[mid];</span><br><span class="line"></span><br><span class="line">swap(<span class="keyword">ref</span> list[low], <span class="keyword">ref</span> list[mid]);</span><br><span class="line"></span><br><span class="line">l = low + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">r = high;</span><br><span class="line"></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (l &lt;= r &amp;&amp; list[l] &lt; pivot)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">l++;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (list[r] &gt;= pivot)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">r--;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (l &lt; r)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">swap(<span class="keyword">ref</span> list[l], <span class="keyword">ref</span> list[r]);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">while</span> (l &lt; r);</span><br><span class="line"></span><br><span class="line">list[low] = list[r];</span><br><span class="line"></span><br><span class="line">list[r] = pivot;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (low + <span class="number">1</span> &lt; r)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">Sort(list, low, r - <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (r + <span class="number">1</span> &lt; high)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">Sort(list, r + <span class="number">1</span>, high);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span>[] arrInt = <span class="keyword">new</span> <span class="built_in">int</span>[] &#123; <span class="number">4</span>, <span class="number">2</span>, <span class="number">7</span>, <span class="number">1</span>, <span class="number">8</span>, <span class="number">3</span>, <span class="number">9</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">6</span> &#125;;</span><br><span class="line"></span><br><span class="line">QuickSorter selSor = <span class="keyword">new</span> QuickSorter();</span><br><span class="line"></span><br><span class="line">selSor.Sort(arrInt, <span class="number">0</span>, arrInt.Length - <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> (<span class="built_in">int</span> i <span class="keyword">in</span> arrInt)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">Console.WriteLine(i);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Console.ReadKey();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="插入排序"><a href="#插入排序" class="headerlink" title="插入排序"></a>插入排序</h3><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">sorter</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">InsertionSorter</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Sort</span>(<span class="params"><span class="built_in">int</span>[] arr</span>)</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">1</span>; i &lt; arr.Length; i++)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> t = arr[i];</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> j = i;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> ((j &gt; <span class="number">0</span>) &amp;&amp; (arr[j - <span class="number">1</span>] &gt; t))</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">arr[j] = arr[j - <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">--j;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">arr[j] = t;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span>[] arrInt = <span class="keyword">new</span> <span class="built_in">int</span>[] &#123; <span class="number">4</span>, <span class="number">2</span>, <span class="number">7</span>, <span class="number">1</span>, <span class="number">8</span>, <span class="number">3</span>, <span class="number">9</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">6</span> &#125;;</span><br><span class="line"></span><br><span class="line">InsertionSorter selSor = <span class="keyword">new</span> InsertionSorter();</span><br><span class="line"></span><br><span class="line">selSor.Sort(arrInt);</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> (<span class="built_in">int</span> i <span class="keyword">in</span> arrInt)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">Console.WriteLine(i);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Console.ReadKey();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="希尔排序"><a href="#希尔排序" class="headerlink" title="希尔排序"></a>希尔排序</h3><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">sorter</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ShellSorter</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Sort</span>(<span class="params"><span class="built_in">int</span>[] arr</span>)</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> inc;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (inc = <span class="number">1</span>; inc &lt;= arr.Length / <span class="number">9</span>; inc = <span class="number">3</span> * inc + <span class="number">1</span>) ;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (; inc &gt; <span class="number">0</span>; inc /= <span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = inc + <span class="number">1</span>; i &lt;= arr.Length; i += inc)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> t = arr[i - <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> j = i;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> ((j &gt; inc) &amp;&amp; (arr[j - inc - <span class="number">1</span>] &gt; t))</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">arr[j - <span class="number">1</span>] = arr[j - inc - <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">j -= inc;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">arr[j - <span class="number">1</span>] = t;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span>[] arrInt = <span class="keyword">new</span> <span class="built_in">int</span>[] &#123; <span class="number">4</span>, <span class="number">2</span>, <span class="number">7</span>, <span class="number">1</span>, <span class="number">8</span>, <span class="number">3</span>, <span class="number">9</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">6</span> &#125;;</span><br><span class="line"></span><br><span class="line">ShellSorter selSor = <span class="keyword">new</span> ShellSorter();</span><br><span class="line"></span><br><span class="line">selSor.Sort(arrInt);</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> (<span class="built_in">int</span> i <span class="keyword">in</span> arrInt)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">Console.WriteLine(i);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Console.ReadKey();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="归并排序"><a href="#归并排序" class="headerlink" title="归并排序"></a>归并排序</h3><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Merge</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Function</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="built_in">int</span> Groups;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="built_in">int</span> CopyGroups;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="built_in">int</span> mergerows;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="built_in">int</span>[] Array27;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> Random ran = <span class="keyword">new</span> Random();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Function</span>(<span class="params"><span class="built_in">int</span> length</span>)</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">Array27 = <span class="keyword">new</span> <span class="built_in">int</span>[length];</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; length; i++)</span><br><span class="line"></span><br><span class="line">Array27[i] = ran.Next(<span class="number">1</span>, <span class="number">100</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ToMergeSort</span>()</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">MergeSort(Array27);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ToRecursiveMergeSort</span>()</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">RecursiveMergeSort(Array27, <span class="number">0</span>, Array27.Length - <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ToNaturalMergeSort</span>()</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">NaturalMergeSort(Array27);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">RecursiveMergeSort</span>(<span class="params"><span class="built_in">int</span>[] Array, <span class="built_in">int</span> left, <span class="built_in">int</span> right</span>)</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> middle = (left + right) / <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (left &lt; right)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">RecursiveMergeSort(Array, left, middle);</span><br><span class="line"></span><br><span class="line">RecursiveMergeSort(Array, middle + <span class="number">1</span>, right);</span><br><span class="line"></span><br><span class="line">MergeOne(Array, left, middle, right);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">MergeOne</span>(<span class="params"><span class="built_in">int</span>[] Array, <span class="built_in">int</span> left, <span class="built_in">int</span> middle, <span class="built_in">int</span> right</span>)</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> leftindex = left;</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> rightindex = middle + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span>[] merge = <span class="keyword">new</span> <span class="built_in">int</span>[right + <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> index = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (leftindex &lt;= middle &amp;&amp; rightindex &lt;= right)</span><br><span class="line"></span><br><span class="line">merge[index++] = (Array[leftindex] - Array[rightindex]) &gt;= <span class="number">0</span> ? Array[rightindex++] : Array[leftindex++];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (leftindex &lt;= middle)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = leftindex; i &lt;= middle; i++)</span><br><span class="line"></span><br><span class="line">merge[index++] = Array[i];</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (rightindex &lt;= right)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = rightindex; i &lt;= right; i++)</span><br><span class="line"></span><br><span class="line">merge[index++] = Array[i];</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">index = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = left; i &lt;= right; i++)</span><br><span class="line"></span><br><span class="line">Array[i] = merge[index++];</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">MergeSort</span>(<span class="params"><span class="built_in">int</span>[] Array</span>)</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span>[] merge = <span class="keyword">new</span> <span class="built_in">int</span>[Array.Length];</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> P = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> index = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> ENumb = (<span class="built_in">int</span>)Math.Pow(<span class="number">2</span>, P);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (ENumb &lt; Array.Length)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> TorFAndrightindex = index;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (TorFAndrightindex &lt;= Array.Length - <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">MergeTwo(Array, merge, index, ENumb);</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">index += <span class="number">2</span> * ENumb;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">P++;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">MergeTwo</span>(<span class="params"><span class="built_in">int</span>[] Array, <span class="built_in">int</span>[] merge, <span class="built_in">int</span> index, <span class="built_in">int</span> ENumb</span>)</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> left = index;</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> middle = left + ENumb - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (middle &gt;= Array.Length)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">middle = index;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> mergeindex = index;</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> right;</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> middleTwo = (index + ENumb - <span class="number">1</span>) + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">right = index + ENumb + ENumb - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (right &gt;= Array.Length - <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">right = Array.Length - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (left &lt;= middle &amp;&amp; middleTwo &lt;= right)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">merge[mergeindex++] = Array[left] &gt;= Array[middleTwo] ? Array[middleTwo++] : Array[left++];</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (left &lt;= middle)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (left &lt;= middle &amp;&amp; mergeindex &lt; merge.Length)</span><br><span class="line"></span><br><span class="line">merge[mergeindex++] = Array[left++];</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (middleTwo &lt;= right)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (middleTwo &lt;= right)</span><br><span class="line"></span><br><span class="line">merge[mergeindex++] = Array[middleTwo++];</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (right + <span class="number">1</span> &gt;= Array.Length)</span><br><span class="line"></span><br><span class="line">Copy(Array, merge);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">NaturalMergeSort</span>(<span class="params"><span class="built_in">int</span>[] Array</span>)</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span>[,] PointsSymbol = LinearPoints(Array);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (PointsSymbol[<span class="number">0</span>, <span class="number">1</span>] == Array.Length - <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"></span><br><span class="line">NaturalMerge(Array, PointsSymbol);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">NaturalMerge</span>(<span class="params"><span class="built_in">int</span>[] Array, <span class="built_in">int</span>[,] PointsSymbol</span>)</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> left;</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> right;</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> leftend;</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> rightend;</span><br><span class="line"></span><br><span class="line">mergerows = GNumberTwo(Groups);</span><br><span class="line"></span><br><span class="line">CopyGroups = Groups;</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span>[] TempArray = <span class="keyword">new</span> <span class="built_in">int</span>[Array.Length];</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span>[,] TempPointsSymbol = <span class="keyword">new</span> <span class="built_in">int</span>[mergerows, <span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> row = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (row != CopyGroups - <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">left = PointsSymbol[row, <span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">leftend = PointsSymbol[row, <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">right = PointsSymbol[row + <span class="number">1</span>, <span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">rightend = PointsSymbol[row + <span class="number">1</span>, <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">MergeThree(Array, TempArray, left, leftend, right, rightend);</span><br><span class="line"></span><br><span class="line">MergePointSymbol(PointsSymbol, TempPointsSymbol, row);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">默认剩下的单独一个子数组已经虚拟合并。然后Copy进TempArray。</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> TempRow = PointsSymbol[row, <span class="number">0</span>];</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> TempCol = PointsSymbol[row, <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (TempRow &lt;= TempCol)</span><br><span class="line"></span><br><span class="line">TempArray[TempRow] = Array[TempRow++];</span><br><span class="line"></span><br><span class="line">TempPointsSymbol[row / <span class="number">2</span>, <span class="number">0</span>] = PointsSymbol[row, <span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">TempPointsSymbol[row / <span class="number">2</span>, <span class="number">1</span>] = PointsSymbol[row, <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">row += <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (TempPointsSymbol[<span class="number">0</span>, <span class="number">1</span>] == Array.Length - <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (row &lt;= CopyGroups - <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">Copy(Array, TempArray);</span><br><span class="line"></span><br><span class="line">UpdatePointSymbol(PointsSymbol, TempPointsSymbol, row);</span><br><span class="line"></span><br><span class="line">mergerows = GNumber(mergerows);</span><br><span class="line"></span><br><span class="line">CopyGroups = GNumberTwo(CopyGroups);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (PointsSymbol[<span class="number">0</span>, <span class="number">1</span>] == Array.Length - <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="built_in">int</span> <span class="title">GNumber</span>(<span class="params"><span class="built_in">int</span> Value</span>)</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (Value % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">Value /= <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"></span><br><span class="line">Value -= <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> Value;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="built_in">int</span> <span class="title">GNumberTwo</span>(<span class="params"><span class="built_in">int</span> Value</span>)</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (Value % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">mergerows = Value / <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"></span><br><span class="line">mergerows = Value / <span class="number">2</span> + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> mergerows;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">MergeThree</span>(<span class="params"><span class="built_in">int</span>[] Array, <span class="built_in">int</span>[] Temp, <span class="built_in">int</span> left, <span class="built_in">int</span> leftend, <span class="built_in">int</span> right, <span class="built_in">int</span> rightend</span>)</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> index = left;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (left &lt;= leftend &amp;&amp; right &lt;= rightend)</span><br><span class="line"></span><br><span class="line">Temp[index++] = Array[left] &gt;= Array[right] ? Array[right++] : Array[left++];</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (left &lt;= leftend)</span><br><span class="line"></span><br><span class="line">Temp[index++] = Array[left++];</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (right &lt;= rightend)</span><br><span class="line"></span><br><span class="line">Temp[index++] = Array[right++];</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">MergePointSymbol</span>(<span class="params"><span class="built_in">int</span>[,] PointsSymbol, <span class="built_in">int</span>[,] TempPointsSymbol, <span class="built_in">int</span> row</span>)</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> rowindex = row / <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">TempPointsSymbol[rowindex, <span class="number">0</span>] = PointsSymbol[row, <span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">TempPointsSymbol[rowindex, <span class="number">1</span>] = PointsSymbol[row + <span class="number">1</span>, <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">UpdatePointSymbol</span>(<span class="params"><span class="built_in">int</span>[,] PointsSymbol, <span class="built_in">int</span>[,] TempPointsSymbol, <span class="built_in">int</span> rows</span>)</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> row = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (; row &lt; TempPointsSymbol.GetLength(<span class="number">0</span>); row++)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> col = <span class="number">0</span>; col &lt; <span class="number">2</span>; col++)</span><br><span class="line"></span><br><span class="line">PointsSymbol[row, col] = TempPointsSymbol[row, col];</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (; row &lt; PointsSymbol.GetLength(<span class="number">0</span>); row++)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> col2 = <span class="number">0</span>; col2 &lt; <span class="number">2</span>; col2++)</span><br><span class="line"></span><br><span class="line">PointsSymbol[row, col2] = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">补剩下的index组，</span><br></pre></td></tr></table></figure>

<p>&#x2F;&#x2F; int row3 &#x3D; TempPointsSymbol.GetLength(0); &#x2F;&#x2F; PointsSymbol[row3, 0] &#x3D; PointsSymbol[rows, 0]; &#x2F;&#x2F; PointsSymbol[row3, 1] &#x3D; PointsSymbol[rows, 1]; &#x2F;&#x2F; &#x2F;&#x2F;后面的清零 &#x2F;&#x2F; for (int row4 &#x3D; row3 + 1; row4 &lt; PointsSymbol.GetLength(0); row4++) &#x2F;&#x2F; { &#x2F;&#x2F; for (int col4 &#x3D; 0; col4 &lt; 2; col4++) &#x2F;&#x2F; PointsSymbol[row4, col4] &#x3D; 0; &#x2F;&#x2F; } &#x2F;&#x2F;} } public int[,] LinearPoints(int[] Array) { Groups &#x3D; 1; int StartPoint &#x3D; 0; int row &#x3D; 0; int col &#x3D; 0; &#x2F;&#x2F;最糟糕的情况就是有Array.Length行。 int[,] PointsSet &#x3D; new int[Array.Length, 2]; &#x2F;&#x2F;线性扫描Array，划分数组 &#x2F;&#x2F;初始前index&#x3D;0 PointsSet[row, col] &#x3D; 0; do { &#x2F;&#x2F;推断升序子数组终于的index开关 bool Judge &#x3D; false; &#x2F;&#x2F;从Array第二个数推断是否要结束或者是否是升序子数组. while (++StartPoint &lt; Array.Length &amp;&amp; Array[StartPoint] &lt; Array[StartPoint - 1]) { &#x2F;&#x2F;打开第一个升序子数组结束的index开关 Judge &#x3D; true; &#x2F;&#x2F;又一次開始第二个升序子数组的前index PointsSet[row, col + 1] &#x3D; StartPoint - 1; &#x2F;&#x2F;计算子数组个数 Groups++; &#x2F;&#x2F;换行记录自然子数组的index row++; break; &#x2F;&#x2F;–StartPoint; } &#x2F;&#x2F;升序子数组结束index if (Judge) PointsSet[row, col] &#x3D; StartPoint; &#x2F;&#x2F;else &#x2F;&#x2F; –StartPoint; } while (StartPoint &lt; Array.Length); &#x2F;&#x2F;终于index&#x3D;StartPoint - 1，可是糟糕情况下还有剩余若干行为： 0,0 … PointsSet[row, col + 1] &#x3D; StartPoint - 1; &#x2F;&#x2F;调用展示方法 DisplaySubarray(Array, PointsSet, Groups); return PointsSet; } public void DisplaySubarray(int[] Array, int[,] PointsSet, int Groups) { Console.WriteLine(“Subarray is {0}:”, Groups); &#x2F;&#x2F;展示子数组的前后index for (int r &#x3D; 0; r &lt; Groups; r++) { for (int c &#x3D; 0; c &lt; PointsSet.GetLength(1); c++) { Console.Write(PointsSet[r, c]); if (c &lt; PointsSet.GetLength(1) - 1) Console.Write(“,”); } Console.Write(“\t\t”); } Console.WriteLine(); &#x2F;&#x2F;展示分出的子数组 for (int v &#x3D; 0; v &lt; Groups; v++) { int i &#x3D; 1; for (int r &#x3D; PointsSet[v, 0]; r &lt;&#x3D; PointsSet[v, 1]; r++) { Console.Write(Array[r] + “ “); i++; } if (i &lt;&#x3D; 3) Console.Write(“\t\t”); else Console.Write(“\t”); if (PointsSet[v, 1] &#x3D;&#x3D; Array.Length) break; } } public void Copy(int[] Array, int[] merge) { &#x2F;&#x2F;一部分排好序的元素替换掉原来Array中的元素 for (int i &#x3D; 0; i &lt; Array.Length; i++) { Array[i] &#x3D; merge[i]; } } &#x2F;&#x2F;输出 public override string ToString() { string temporary &#x3D; string.Empty; foreach (var element in Array27) temporary +&#x3D; element + “ “; temporary +&#x3D; “\n”; return temporary; } } class Program { static void Main(string[] args) { while (true) { Console.WriteLine(“请选择：”); Console.WriteLine(“1.归并排序（非递归）”); Console.WriteLine(“2.归并排序（递归）”); Console.WriteLine(“3.归并排序（自然合并）”); Console.WriteLine(“4.退出”); int Arraynum &#x3D; Convert.ToInt32(Console.ReadLine()); switch (Arraynum) { case 4: Environment.Exit(0); break; case 1: Console.WriteLine(“Please Input Array Length”); int Leng271 &#x3D; Convert.ToInt32(Console.ReadLine()); Function obj1 &#x3D; new Function(Leng271); Console.WriteLine(“The original sequence:”); Console.WriteLine(obj1); Console.WriteLine(“‘MergeSort’ Finaly Sorting Result:”); obj1.ToMergeSort(); Console.WriteLine(obj1); break; case 2: Console.WriteLine(“Please Input Array Length”); int Leng272 &#x3D; Convert.ToInt32(Console.ReadLine()); Function obj2 &#x3D; new Function(Leng272); Console.WriteLine(“The original sequence:”); Console.WriteLine(obj2); Console.WriteLine(“‘RecursiveMergeSort’ Finaly Sorting Result:”); obj2.ToRecursiveMergeSort(); Console.WriteLine(obj2); break; case 3: Console.WriteLine(“Please Input Array Length”); int Leng273 &#x3D; Convert.ToInt32(Console.ReadLine()); Function obj3 &#x3D; new Function(Leng273); Console.WriteLine(“The original sequence:”); Console.WriteLine(obj3); obj3.ToNaturalMergeSort(); Console.WriteLine(); Console.WriteLine(); Console.WriteLine(“‘NaturalMergeSort’ Finaly Sorting Result:”); Console.WriteLine(obj3); break; } } } } }</p>
<h3 id="基数排序"><a href="#基数排序" class="headerlink" title="基数排序"></a>基数排序</h3><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Merge</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">RadixSorter</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="built_in">int</span>[] <span class="title">RadixSort</span>(<span class="params"><span class="built_in">int</span>[] ArrayToSort, <span class="built_in">int</span> digit</span>)</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> k = <span class="number">1</span>; k &lt;= digit; k++)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span>[] tmpArray = <span class="keyword">new</span> <span class="built_in">int</span>[ArrayToSort.Length];</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span>[] tmpCountingSortArray = <span class="keyword">new</span> <span class="built_in">int</span>[<span class="number">10</span>] &#123; <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; ArrayToSort.Length; i++)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> tmpSplitDigit = ArrayToSort[i] / (<span class="built_in">int</span>)Math.Pow(<span class="number">10</span>, k - <span class="number">1</span>) - (ArrayToSort[i] / (<span class="built_in">int</span>)Math.Pow(<span class="number">10</span>, k)) * <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">tmpCountingSortArray[tmpSplitDigit] += <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> m = <span class="number">1</span>; m &lt; <span class="number">10</span>; m++)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">tmpCountingSortArray[m] += tmpCountingSortArray[m -</span><br><span class="line"></span><br><span class="line"><span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> n = ArrayToSort.Length - <span class="number">1</span>; n &gt;= <span class="number">0</span>; n--)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> tmpSplitDigit = ArrayToSort[n] / (<span class="built_in">int</span>)Math.Pow(<span class="number">10</span>, k - <span class="number">1</span>) -</span><br><span class="line"></span><br><span class="line">(ArrayToSort[n] / (<span class="built_in">int</span>)Math.Pow(<span class="number">10</span>, k)) * <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">tmpArray[tmpCountingSortArray[tmpSplitDigit] - <span class="number">1</span>] = ArrayToSort</span><br><span class="line"></span><br><span class="line">[<span class="meta">n</span>];</span><br><span class="line"></span><br><span class="line">tmpCountingSortArray[tmpSplitDigit] -= <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> p = <span class="number">0</span>; p &lt; ArrayToSort.Length; p++)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">ArrayToSort[p] = tmpArray[p];</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> ArrayToSort;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span>[] intArray = <span class="keyword">new</span> <span class="built_in">int</span>[] &#123; <span class="number">5</span>, <span class="number">3</span>, <span class="number">7</span>, <span class="number">4</span>, <span class="number">8</span>, <span class="number">2</span>, <span class="number">9</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">6</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span>[] newIntArray = intArray;</span><br><span class="line"></span><br><span class="line">RadixSorter rS=<span class="keyword">new</span> RadixSorter();</span><br><span class="line"></span><br><span class="line">newIntArray = rS.RadixSort(intArray, intArray.Length);</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> (<span class="built_in">int</span> i <span class="keyword">in</span> intArray)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">Console.Write(i + <span class="string">&quot; &quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Console.ReadKey();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="计数排序"><a href="#计数排序" class="headerlink" title="计数排序"></a>计数排序</h3><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Merge</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br></pre></td></tr></table></figure>

<p>&#x2F;&#x2F;&#x2F; 要求: &#x2F;&#x2F;&#x2F; arrayToSort的元素必须大于等于0。或者经过一定的转换使其元素在 &#x2F;&#x2F;&#x2F; 大于等于0范围内。比如有例如以下序列(-1,-8,10,11),那么依据最小值8, &#x2F;&#x2F;&#x2F; 将各个数字加8转化为(7,0,18,19),然后进行计数排序。结果为(0,7,18,19), &#x2F;&#x2F;&#x2F; 然后再将结果个数字减8即为(-8,-1,10,11) &#x2F;&#x2F;&#x2F; </summary> &#x2F;&#x2F;&#x2F; <param name="arrayToSort">要排序的数组</param> &#x2F;&#x2F;&#x2F; <param name="maxValue">数组的最大值加一</param> &#x2F;&#x2F;&#x2F; <returns>计数排序后的结果</returns> public static int[] CountingSort(int[] arrayToSort, int k) { &#x2F;&#x2F; 排序后的结果存储 int[] sortedArray &#x3D; new int[arrayToSort.Length]; &#x2F;&#x2F; 计数数组 int[] countingArray &#x3D; new int[k]; &#x2F;&#x2F; 计数数组初始化 for (int i &#x3D; 0; i &lt; countingArray.Length; i++) { countingArray[i] &#x3D; 0; } &#x2F;&#x2F; 单个元素计数(经过该步骤countingArray[i]的含义为数字i的个数为countingArray[i]) for (int i &#x3D; 0; i &lt; arrayToSort.Length; i++) { countingArray[arrayToSort[i]] &#x3D; countingArray[arrayToSort[i]] + 1; } &#x2F;&#x2F; 计算小于等于某数的个数(经过该步骤countingArray[i]的含义为小于等于数字i的元素个数为countingArray[i]) for (int i &#x3D; 1; i &lt; countingArray.Length; i++) { countingArray[i] +&#x3D; countingArray[i - 1]; } &#x2F;&#x2F; 得到排序后的结果 for (int i &#x3D; 0; i &lt; sortedArray.Length; i++) { int numIndex &#x3D; countingArray[arrayToSort[i]] - 1; sortedArray[numIndex] &#x3D; arrayToSort[i]; countingArray[arrayToSort[i]] &#x3D; countingArray[arrayToSort[i]] - 1; } return sortedArray; } static void Main(string[] args) { int[] intArray &#x3D; new int[] { 5, 3, 7, 4, 8, 2, 9, 1, 0, 6 }; int[] intNewArray &#x3D; intArray; intNewArray &#x3D; CountingSort(intArray, intArray.Length); foreach (int i in intNewArray) { Console.Write(i + “ “); } Console.ReadKey(); } } }</p>
<h3 id="堆排序"><a href="#堆排序" class="headerlink" title="堆排序"></a>堆排序</h3><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Merge</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">HeapSortFunction</span>(<span class="params"><span class="built_in">int</span>[] array</span>)</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">BuildMaxHeap(array);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = array.Length - <span class="number">1</span>; i &gt; <span class="number">0</span>; i--)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">Swap(<span class="keyword">ref</span> array[<span class="number">0</span>], <span class="keyword">ref</span> array[i]);</span><br><span class="line"></span><br><span class="line">MaxHeapify(array, <span class="number">0</span>, i);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">catch</span> (Exception ex)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">Console.Write(ex.Message);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">BuildMaxHeap</span>(<span class="params"><span class="built_in">int</span>[] array</span>)</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = array.Length / <span class="number">2</span> - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">MaxHeapify(array, i, array.Length);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">catch</span> (Exception ex)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">Console.Write(ex.Message);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">MaxHeapify</span>(<span class="params"><span class="built_in">int</span>[] array, <span class="built_in">int</span> currentIndex, <span class="built_in">int</span> heapSize</span>)</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> left = <span class="number">2</span> * currentIndex + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> right = <span class="number">2</span> * currentIndex + <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> large = currentIndex;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (left &lt; heapSize &amp;&amp; array[left] &gt; array[large])</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">large = left;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (right &lt; heapSize &amp;&amp; array[right] &gt; array[large])</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">large = right;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (currentIndex != large)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">Swap(<span class="keyword">ref</span> array[currentIndex], <span class="keyword">ref</span> array[large]);</span><br><span class="line"></span><br><span class="line">MaxHeapify(array, large, heapSize);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">catch</span> (Exception ex)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">Console.Write(ex.Message);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Swap</span>(<span class="params"><span class="keyword">ref</span> <span class="built_in">int</span> a, <span class="keyword">ref</span> <span class="built_in">int</span> b</span>)</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> temp = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">temp = a;</span><br><span class="line"></span><br><span class="line">a = b;</span><br><span class="line"></span><br><span class="line">b = temp;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span>[] intArray = <span class="keyword">new</span> <span class="built_in">int</span>[] &#123; <span class="number">5</span>, <span class="number">3</span>, <span class="number">7</span>, <span class="number">4</span>, <span class="number">8</span>, <span class="number">2</span>, <span class="number">9</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">6</span> &#125;;</span><br><span class="line"></span><br><span class="line">HeapSortFunction(intArray);</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> (<span class="built_in">int</span> i <span class="keyword">in</span> intArray)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">Console.Write(i + <span class="string">&quot; &quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Console.ReadKey();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="排序的分类-稳定性-时间复杂度和空间复杂度总结"><a href="#排序的分类-稳定性-时间复杂度和空间复杂度总结" class="headerlink" title="排序的分类&#x2F;稳定性&#x2F;时间复杂度和空间复杂度总结"></a>排序的分类&#x2F;稳定性&#x2F;时间复杂度和空间复杂度总结</h3><img src="/2024/09/04/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/CSharp%E7%BB%8F%E5%85%B8%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E5%A4%A7%E5%85%A8/IMG-20250704185625088.png" class="">  

<p>版权声明：本文博客原创文章。博客，未经同意，不得转载。</p>
]]></content>
      <categories>
        <category>学习笔记</category>
        <category>排序算法</category>
      </categories>
      <tags>
        <tag>排序算法</tag>
      </tags>
  </entry>
  <entry>
    <title>冒泡排序算法CSharp实现</title>
    <url>/2024/09/04/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95CSharp%E5%AE%9E%E7%8E%B0/</url>
    <content><![CDATA[<h1 id="冒泡排序算法（C-实现）-Eric-Sun-博客园"><a href="#冒泡排序算法（C-实现）-Eric-Sun-博客园" class="headerlink" title="冒泡排序算法（C#实现） - Eric Sun - 博客园"></a>冒泡排序算法（C#实现） - Eric Sun - 博客园</h1><blockquote>
<h2 id="Excerpt"><a href="#Excerpt" class="headerlink" title="Excerpt"></a>Excerpt</h2><p>简单的冒泡排序算法，代码如下：&#x2F;&#x2F;冒泡排序（从数组的起始位置开始遍历，以大数为基准：大的数向下沉一位）privatestaticvoid BubbleSortFunction(int[] array) { try { int length &#x3D; array.Length; int temp; bool</p>
</blockquote>
<hr>
<p>简单的冒泡排序算法，代码如下：</p>
<img src="/2024/09/04/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95CSharp%E5%AE%9E%E7%8E%B0/IMG-20250704185625090.gif" class="" title="复制代码">

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;span&gt;//&lt;/span&gt;&lt;span&gt;冒泡排序（从数组的起始位置开始遍历，以大数为基准：大的数向下沉一位）&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt;static&lt;/span&gt;&lt;span&gt;void&lt;/span&gt;&lt;span&gt; BubbleSortFunction(&lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt;[] array)&lt;br&gt;        &#123;&lt;br&gt;            &lt;/span&gt;&lt;span&gt;try&lt;/span&gt;&lt;span&gt;&lt;br&gt;            &#123;&lt;br&gt;                &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; length &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; array.Length;&lt;br&gt;                &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; temp;&lt;br&gt;                &lt;/span&gt;&lt;span&gt;bool&lt;/span&gt;&lt;span&gt; hasExchangeAction; &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;记录此次大循环中相邻的两个数是否发生过互换（如果没有互换，则数组已经是有序的）&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;&lt;br&gt;                &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt; (&lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; i &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;; i &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt; length &lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;; i&lt;/span&gt;&lt;span&gt;++&lt;/span&gt;&lt;span&gt;)    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;数组有N个数，那么用N-1次大循环就可以排完&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;                &#123;&lt;br&gt;                    hasExchangeAction &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;false&lt;/span&gt;&lt;span&gt;;  &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;每次大循环都假设数组有序&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;&lt;br&gt;                    &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt; (&lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; j &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;; j &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt; length &lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt; i &lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;; j&lt;/span&gt;&lt;span&gt;++&lt;/span&gt;&lt;span&gt;)    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;从数组下标0处开始遍历，（length - i - 1 是刨除已经排好的大数）&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;                    &#123;&lt;br&gt;                        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt; (array[j] &lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt; array[j &lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;])    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;相邻两个数进行比较，如果前面的数大于后面的数，则将这相邻的两个数进行互换&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;                        &#123;&lt;br&gt;                            temp &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; array[j];&lt;br&gt;                            array[j] &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; array[j &lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;];&lt;br&gt;                            array[j &lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;] &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; temp;&lt;br&gt;                            hasExchangeAction &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;true&lt;/span&gt;&lt;span&gt;;   &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;发生过互换&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;                        &#125;&lt;br&gt;                    &#125;&lt;br&gt;&lt;br&gt;                    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt; (&lt;/span&gt;&lt;span&gt;!&lt;/span&gt;&lt;span&gt;hasExchangeAction) &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;如果没有发生过互换，则数组已经是有序的了，跳出循环&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;                    &#123;&lt;br&gt;                        &lt;/span&gt;&lt;span&gt;break&lt;/span&gt;&lt;span&gt;;&lt;br&gt;                    &#125;&lt;br&gt;                &#125;&lt;br&gt;            &#125;&lt;br&gt;            &lt;/span&gt;&lt;span&gt;catch&lt;/span&gt;&lt;span&gt; (Exception ex)&lt;br&gt;            &#123; &#125;&lt;br&gt;        &#125;&lt;/span&gt;</span><br></pre></td></tr></table></figure>

<img src="/2024/09/04/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95CSharp%E5%AE%9E%E7%8E%B0/IMG-20250704185625090.gif" class="" title="复制代码">

<p>。。。。。</p>
<p>posted @ 2011-08-17 16:02  <a href="https://www.cnblogs.com/mingmingruyuedlut">Eric Sun</a>  阅读(7637)  评论()  <a href="https://i.cnblogs.com/EditPosts.aspx?postid=2143231">编辑</a>  收藏  举报</p>
]]></content>
      <categories>
        <category>学习笔记</category>
        <category>排序算法</category>
      </categories>
      <tags>
        <tag>排序算法</tag>
      </tags>
  </entry>
  <entry>
    <title>堆排序算法CSharp实现</title>
    <url>/2024/09/04/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/%E5%A0%86%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95CSharp%E5%AE%9E%E7%8E%B0/</url>
    <content><![CDATA[<h1 id="堆排序算法（C-实现）"><a href="#堆排序算法（C-实现）" class="headerlink" title="堆排序算法（C#实现）"></a>堆排序算法（C#实现）</h1><blockquote>
<h2 id="Excerpt"><a href="#Excerpt" class="headerlink" title="Excerpt"></a>Excerpt</h2><p>在软件设计相关领域，“堆（Heap）”的概念主要涉及到两个方面：一种是数据结构，逻辑上是一颗完全二叉树，存储上是一个数组对象（二叉堆）。另一种是垃圾收集存储区，是软件系统可以编程的内存区域。本文所说的堆指的是前者，另外，这篇文章中堆中元素的值均以整形为例堆排序的时间复杂度是O(nlog2n),与快速</p>
</blockquote>
<hr>
<p>在软件设计相关领域，“堆（Heap）”的概念主要涉及到两个方面：</p>
<p>一种是数据结构，逻辑上是一颗完全二叉树，存储上是一个数组对象（二叉堆）。</p>
<p>另一种是垃圾收集存储区，是软件系统可以编程的内存区域。</p>
<p>本文所说的堆指的是前者，另外，这篇文章中堆中元素的值均以整形为例</p>
<p>堆排序的时间复杂度是O(nlog2n),与快速排序达到相同的时间复杂度. 但是在实际应用中,我们往往采用快速排序而不是堆排序. 这是因为快速排序的一个好的实现,往往比堆排序具有更好的表现. 堆排序的主要用途,是在形成和处理优先级队列方面. 另外, 如果计算要求是类优先级队列(比如, 只要返回最大或者最小元素, 只有有限的插入要求等), 堆同样是很适合的数据结构.</p>
<p>**堆排序<br>**堆排序是一种选择排序。是不稳定的排序方法。时间复杂度为O(nlog2n)。<br>堆排序的特点是：在排序过程中，将排序数组看成是一棵完全二叉树的顺序存储结构，利用完全二叉树中双亲节点和孩子节点之间的内在关系，在当前无序区中选择关键字最大(或最小)的记录。</p>
<p><strong>基本思想</strong><br>1.将要排序的数组创建为一个大根堆。大根堆的堆顶元素就是这个堆中最大的元素。<br>2.将大根堆的堆顶元素和无序区最后一个元素交换，并将无序区最后一个位置例入有序区，然后将新的无序区调整为大根堆。<br>重复操作，无序区在递减，有序区在递增。<br>初始时，整个数组为无序区，第一次交换后无序区减一，有序区增一。<br>每一次交换，都是大根堆的堆顶元素插入有序区，所以有序区保持是有序的。</p>
<p><strong>大根堆和小根堆</strong><br>堆：是一颗完全二叉树。<br>大根堆：所有节点的子节点比其自身小的堆<br>小根堆：所有节点的子节点比其自身大的堆</p>
<p><strong>堆与数组的关系</strong></p>
<p>堆是一种逻辑结构（形象的表示数据的存储格式），数组则是数据的实际存储结构（对应数据的存储地址），堆中的根节点与左右子节点在存储数组中的位置关系如下：假设根节点在数组中的位置（数组下标）为 i ，那么左节点在数组中的位置（数组下标）为 i * 2 + 1 ， 右节点在数组中的位置（数组下标）为 i * 2 + 2 。</p>
<p>以上是基本的知识点，具体代码如下所示：</p>
<img src="/2024/09/04/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/%E5%A0%86%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95CSharp%E5%AE%9E%E7%8E%B0/IMG-20250704185625091.gif" class="" title="复制代码">

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;span&gt;        //&lt;/span&gt;&lt;span&gt;堆排序算法（传递待排数组名，即：数组的地址。故形参数组的各种操作反应到实参数组上）&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;　　　　 private &lt;/span&gt;&lt;span&gt;static &lt;/span&gt;&lt;span&gt;void&lt;/span&gt;&lt;span&gt; HeapSortFunction(&lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt;[] array)&lt;br&gt;        &#123;&lt;br&gt;            &lt;/span&gt;&lt;span&gt;try&lt;/span&gt;&lt;span&gt;&lt;br&gt;            &#123;&lt;br&gt;                BuildMaxHeap(array);    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;创建大顶推（初始状态看做：整体无序）&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;　　　　　　　　　for&lt;/span&gt;&lt;span&gt; (&lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; i &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; array.Length &lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;; i &lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;; i&lt;/span&gt;&lt;span&gt;--&lt;/span&gt;&lt;span&gt;)&lt;br&gt;                &#123;&lt;br&gt;                    Swap(&lt;/span&gt;&lt;span&gt;ref&lt;/span&gt;&lt;span&gt; array[&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;], &lt;/span&gt;&lt;span&gt;ref&lt;/span&gt;&lt;span&gt; array[i]); &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;将堆顶元素依次与无序区的最后一位交换（使堆顶元素进入有序区）&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;                    MaxHeapify(array, &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;, i); &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;重新将无序区调整为大顶堆&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;                &#125;&lt;br&gt;            &#125;&lt;br&gt;            &lt;/span&gt;&lt;span&gt;catch&lt;/span&gt;&lt;span&gt; (Exception ex)&lt;br&gt;            &#123; &#125;&lt;br&gt;        &#125;&lt;br&gt;&lt;br&gt;        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt;&lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;&lt;span&gt;&lt;br&gt;        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt;&lt;span&gt; 创建大顶推（根节点大于左右子节点）&lt;br&gt;        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt;&lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;span&gt;&lt;br&gt;        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt;&lt;span&gt;&amp;lt;param name=&quot;array&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;待排数组&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;　　　　 private &lt;/span&gt;&lt;span&gt;static &lt;/span&gt;&lt;span&gt;void&lt;/span&gt;&lt;span&gt; BuildMaxHeap(&lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt;[] array)&lt;br&gt;        &#123;&lt;br&gt;            &lt;/span&gt;&lt;span&gt;try&lt;/span&gt;&lt;span&gt;&lt;br&gt;            &#123;&lt;br&gt;                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;根据大顶堆的性质可知：数组的前半段的元素为根节点，其余元素都为叶节点&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;　　　　　　　　　for&lt;/span&gt;&lt;span&gt; (&lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; i &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; array.Length &lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;; i &lt;/span&gt;&lt;span&gt;&amp;gt;=&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;; i&lt;/span&gt;&lt;span&gt;--&lt;/span&gt;&lt;span&gt;) &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;从最底层的最后一个根节点开始进行大顶推的调整&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;                &#123;&lt;br&gt;                    MaxHeapify(array, i, array.Length); &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;调整大顶堆&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;                &#125;&lt;br&gt;            &#125;&lt;br&gt;            &lt;/span&gt;&lt;span&gt;catch&lt;/span&gt;&lt;span&gt; (Exception ex)&lt;br&gt;            &#123; &#125;&lt;br&gt;        &#125;&lt;br&gt;&lt;br&gt;        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt;&lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;&lt;span&gt;&lt;br&gt;        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt;&lt;span&gt; 大顶推的调整过程&lt;br&gt;        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt;&lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;span&gt;&lt;br&gt;        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt;&lt;span&gt;&amp;lt;param name=&quot;array&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;待调整的数组&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;&lt;span&gt;&lt;br&gt;        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt;&lt;span&gt;&amp;lt;param name=&quot;currentIndex&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;待调整元素在数组中的位置（即：根节点）&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;&lt;span&gt;&lt;br&gt;        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt;&lt;span&gt;&amp;lt;param name=&quot;heapSize&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;堆中所有元素的个数&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;　　　　 private &lt;/span&gt;&lt;span&gt;static &lt;/span&gt;&lt;span&gt;void&lt;/span&gt;&lt;span&gt; MaxHeapify(&lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt;[] array, &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; currentIndex, &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; heapSize)&lt;br&gt;        &#123;&lt;br&gt;            &lt;/span&gt;&lt;span&gt;try&lt;/span&gt;&lt;span&gt;&lt;br&gt;            &#123;&lt;br&gt;                &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; left &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;&lt;span&gt;*&lt;/span&gt;&lt;span&gt; currentIndex &lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;;    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;左子节点在数组中的位置&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;　　　　　　　　　int&lt;/span&gt;&lt;span&gt; right &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;&lt;span&gt;*&lt;/span&gt;&lt;span&gt; currentIndex &lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;&lt;span&gt;;   &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;右子节点在数组中的位置&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;　　　　　　　　　int&lt;/span&gt;&lt;span&gt; large &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; currentIndex;   &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;记录此根节点、左子节点、右子节点 三者中最大值的位置&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;&lt;br&gt;                &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt; (left &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt; heapSize &lt;/span&gt;&lt;span&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span&gt; array[left] &lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt; array[large])  &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;与左子节点进行比较&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;                &#123;&lt;br&gt;                    large &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; left;&lt;br&gt;                &#125;&lt;br&gt;                &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt; (right &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt; heapSize &lt;/span&gt;&lt;span&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span&gt; array[right] &lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt; array[large])    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;与右子节点进行比较&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;                &#123;&lt;br&gt;                    large &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; right;&lt;br&gt;                &#125;&lt;br&gt;                &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt; (currentIndex &lt;/span&gt;&lt;span&gt;!=&lt;/span&gt;&lt;span&gt; large)  &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;如果 currentIndex != large 则表明 large 发生变化（即：左右子节点中有大于根节点的情况）&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;                &#123;&lt;br&gt;                    Swap(&lt;/span&gt;&lt;span&gt;ref&lt;/span&gt;&lt;span&gt; array[currentIndex], &lt;/span&gt;&lt;span&gt;ref&lt;/span&gt;&lt;span&gt; array[large]);    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;将左右节点中的大者与根节点进行交换（即：实现局部大顶堆）&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;                    MaxHeapify(array, large, heapSize); &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;以上次调整动作的large位置（为此次调整的根节点位置），进行递归调整&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;                &#125;&lt;br&gt;            &#125;&lt;br&gt;            &lt;/span&gt;&lt;span&gt;catch&lt;/span&gt;&lt;span&gt; (Exception ex)&lt;br&gt;            &#123; &#125;&lt;br&gt;        &#125;&lt;br&gt;&lt;br&gt;        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt;&lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;&lt;span&gt;&lt;br&gt;        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt;&lt;span&gt; 交换函数&lt;br&gt;        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt;&lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;span&gt;&lt;br&gt;        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt;&lt;span&gt;&amp;lt;param name=&quot;a&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;元素a&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;&lt;span&gt;&lt;br&gt;        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt;&lt;span&gt;&amp;lt;param name=&quot;b&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;元素b&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;　　　　　private &lt;/span&gt;&lt;span&gt;static &lt;/span&gt;&lt;span&gt;void&lt;/span&gt;&lt;span&gt; Swap(&lt;/span&gt;&lt;span&gt;ref&lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; a, &lt;/span&gt;&lt;span&gt;ref&lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; b)&lt;br&gt;        &#123;&lt;br&gt;            &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; temp &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;;&lt;br&gt;            temp &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; a;&lt;br&gt;            a &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; b;&lt;br&gt;            b &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; temp;&lt;br&gt;        &#125;&lt;/span&gt;</span><br></pre></td></tr></table></figure>

<img src="/2024/09/04/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/%E5%A0%86%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95CSharp%E5%AE%9E%E7%8E%B0/IMG-20250704185625091.gif" class="" title="复制代码">
]]></content>
      <categories>
        <category>学习笔记</category>
        <category>排序算法</category>
      </categories>
      <tags>
        <tag>排序算法</tag>
      </tags>
  </entry>
  <entry>
    <title>归并排序算法CSharp实现</title>
    <url>/2024/09/04/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95CSharp%E5%AE%9E%E7%8E%B0/</url>
    <content><![CDATA[<h1 id="归并排序算法（C-实现）"><a href="#归并排序算法（C-实现）" class="headerlink" title="归并排序算法（C#实现）"></a>归并排序算法（C#实现）</h1><blockquote>
<h2 id="Excerpt"><a href="#Excerpt" class="headerlink" title="Excerpt"></a>Excerpt</h2><p>自顶向下的归并排序：是利用递归和分而治之的技术将数据序列划分成为越来越小的半子表，再对半子表排序，最后再用递归步骤将排好序的半子表合并成为越来越大的有序序列，归并排序包括两个步骤，分别为：1）划分子表  2）合并半子表</p>
</blockquote>
<hr>
<p>     归并排序(Merge Sort)是利用”归并”技术来进行排序。归并是指将若干个已排序的子文件合并成一个有序的文件。归并排序有两种方式：1): <strong>自底向上的方法</strong> 2):<strong>自顶向下的方法</strong></p>
<p> <strong>1、 自底向上的方法</strong><br>（1） 自底向上的基本思想<br>     自底向上的基本思想是：第1趟归并排序时，将待排序的文件R[1..n]看作是n个长度为1的有序子文件，将这些子文件两两归并，若n为偶数，则得到n&#x2F;2个长度为2的有序子文件；若n为奇数，则最后一个子文件轮空(不参与归并)。故本趟归并完成后，前n&#x2F;2 - 1个有序子文件长度为2，但最后一个子文件长度仍为1；第2趟归并则是将第1趟归并所得到的n&#x2F;2个有序的子文件两两归并，如此反复，直到最后得到一个长度为n的有序文件为止。<br>     上述的每次归并操作，均是将两个有序的子文件合并成一个有序的子文件，故称其为”二路归并排序”。类似地有k(k&gt;2)路归并排序。   </p>
<p><strong>2、自顶向下的方法(本文主要介绍此种方法，下面的文字都是对此种方法的解读)</strong></p>
<p>（1） 自顶向下的基本思想<br>     采用分治法进行自顶向下的算法设计，形式更为简洁。<br>     自顶向下的归并排序：是利用递归和分而治之的技术将数据序列划分成为越来越小的半子表，再对半子表排序，最后再用递归步骤将排好序的半子表合并成为越来越大的有序序列，归并排序包括两个步骤，分别为：</p>
<p>      1）划分子表</p>
<p>      2）合并半子表</p>
<p>（1）分治法的三个步骤<br>     设归并排序的当前区间是R[low..high]，分治法的三个步骤是：<br>①分解：将当前区间一分为二，即求分裂点<br>②求解：递归地对两个子区间R[low..mid]和R[mid+1..high]进行归并排序；<br>③组合：将已排序的两个子区间R[low..mid]和R[mid+1..high]归并为一个有序的区间R[low..high]。<br>  递归的终结条件：子区间长度为1（一个记录自然有序）。</p>
<p><strong>如下演示递归的整个过程：</strong></p>
<p>递归便是深度遍历（如下由左至右进行遍历）：假设有这样的一列数组{9,8,7,6,5,4,3,2,1}进行划分的顺序如下：</p>
<p>{9,8,7,6,5,4,3,2,1} –&gt; {9,8,7,6,5}，{4,3,2,1}</p>
<p>{9,8,7,6,5} –&gt; {9,8,7}，{6,5}</p>
<p>                        {9,8,7} –&gt; {9,8}，{7}</p>
<p>                                          {9,8} –&gt; {9}，{8}</p>
<p>                        {6,5} –&gt;{6}，{5}</p>
<p>{4,3,2,1} –&gt; {4,3}，{2,1}</p>
<p>                      {4,3} –&gt;{4}，{3}</p>
<p>                      {2,1} –&gt;{2}，{1}</p>
<p>当深度划分到左右数组都只剩1个元素的时候，进行上述逆序的合并：</p>
<p>{9}，{8} –&gt; {8,9} 然后和 {7} –&gt; {7,8,9}</p>
<p>                                {6}，{5} –&gt; {5,6}    然后 {7,8,9}和{5,6} –&gt; {5,6,7,8,9}</p>
<p>                                     {2}，{1} –&gt; {1,2}</p>
<p>                                     {4}，{3} –&gt; {3,4}   然后 {1,2}和 {3,4} –&gt; {1,2,3,4}</p>
<p>                                                                                                                         最终{5,6,7,8,9}和{1,2,3,4} –&gt; {1,2,3,4,5,6,7,8,9}</p>
<p><strong>具体实现代码如下所示：</strong></p>
<img src="/2024/09/04/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95CSharp%E5%AE%9E%E7%8E%B0/IMG-20250704185625092.gif" class="" title="复制代码">

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;span&gt;//&lt;/span&gt;&lt;span&gt;归并排序（目标数组，子表的起始位置，子表的终止位置）&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;        &lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; MergeSortFunction(&lt;span&gt;int&lt;/span&gt;[] array, &lt;span&gt;int&lt;/span&gt; first, &lt;span&gt;int&lt;/span&gt; last)&lt;br&gt;        &#123;&lt;br&gt;            &lt;span&gt;try&lt;/span&gt;&lt;br&gt;            &#123;&lt;br&gt;                &lt;span&gt;if&lt;/span&gt; (first &amp;lt; last)   &lt;span&gt;//&lt;/span&gt;&lt;span&gt;子表的长度大于1，则进入下面的递归处理&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;                &#123;&lt;br&gt;                    &lt;span&gt;int&lt;/span&gt; mid = (first + last) / &lt;span&gt;2&lt;/span&gt;;   &lt;span&gt;//&lt;/span&gt;&lt;span&gt;子表划分的位置&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;                    MergeSortFunction(array, first, mid);   &lt;span&gt;//&lt;/span&gt;&lt;span&gt;对划分出来的左侧子表进行递归划分&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;                    MergeSortFunction(array, mid + &lt;span&gt;1&lt;/span&gt;, last);    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;对划分出来的右侧子表进行递归划分&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;                    MergeSortCore(array, first, mid, last); &lt;span&gt;//&lt;/span&gt;&lt;span&gt;对左右子表进行有序的整合（归并排序的核心部分）&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;                &#125;&lt;br&gt;            &#125;&lt;br&gt;            &lt;span&gt;catch&lt;/span&gt; (Exception ex)&lt;br&gt;            &#123; &#125;&lt;br&gt;        &#125;&lt;br&gt;&lt;br&gt;        &lt;span&gt;//&lt;/span&gt;&lt;span&gt;归并排序的核心部分：将两个有序的左右子表（以mid区分），合并成一个有序的表&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;        &lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; MergeSortCore(&lt;span&gt;int&lt;/span&gt;[] array, &lt;span&gt;int&lt;/span&gt; first, &lt;span&gt;int&lt;/span&gt; mid, &lt;span&gt;int&lt;/span&gt; last)&lt;br&gt;        &#123;&lt;br&gt;            &lt;span&gt;try&lt;/span&gt;&lt;br&gt;            &#123;&lt;br&gt;                &lt;span&gt;int&lt;/span&gt; indexA = first; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;左侧子表的起始位置&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;                &lt;span&gt;int&lt;/span&gt; indexB = mid + &lt;span&gt;1&lt;/span&gt;;   &lt;span&gt;//&lt;/span&gt;&lt;span&gt;右侧子表的起始位置&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;                &lt;span&gt;int&lt;/span&gt;[] temp = &lt;span&gt;new&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;[last + &lt;span&gt;1&lt;/span&gt;]; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;声明数组（暂存左右子表的所有有序数列）：长度等于左右子表的长度之和。&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;                &lt;span&gt;int&lt;/span&gt; tempIndex = &lt;span&gt;0&lt;/span&gt;;&lt;br&gt;                &lt;span&gt;while&lt;/span&gt; (indexA &amp;lt;= mid &amp;amp;&amp;amp; indexB &amp;lt;= last) &lt;span&gt;//&lt;/span&gt;&lt;span&gt;进行左右子表的遍历，如果其中有一个子表遍历完，则跳出循环&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;                &#123;&lt;br&gt;                    &lt;span&gt;if&lt;/span&gt; (array[indexA] &amp;lt;= array[indexB]) &lt;span&gt;//&lt;/span&gt;&lt;span&gt;此时左子表的数 &amp;lt;= 右子表的数&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;                    &#123;&lt;br&gt;                        temp[tempIndex++] = array[indexA++];    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;将左子表的数放入暂存数组中，遍历左子表下标++&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;                    &#125;&lt;br&gt;                    &lt;span&gt;else&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;此时左子表的数 &amp;gt; 右子表的数&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;                    &#123;&lt;br&gt;                        temp[tempIndex++] = array[indexB++];    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;将右子表的数放入暂存数组中，遍历右子表下标++&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;                    &#125;&lt;br&gt;                &#125;&lt;br&gt;                &lt;span&gt;//&lt;/span&gt;&lt;span&gt;有一侧子表遍历完后，跳出循环，将另外一侧子表剩下的数一次放入暂存数组中（有序）&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;                &lt;span&gt;while&lt;/span&gt; (indexA &amp;lt;= mid)&lt;br&gt;                &#123;&lt;br&gt;                    temp[tempIndex++] = array[indexA++];&lt;br&gt;                &#125;&lt;br&gt;                &lt;span&gt;while&lt;/span&gt; (indexB &amp;lt;= last)&lt;br&gt;                &#123;&lt;br&gt;                    temp[tempIndex++] = array[indexB++];&lt;br&gt;                &#125;&lt;br&gt;&lt;br&gt;                &lt;span&gt;//&lt;/span&gt;&lt;span&gt;将暂存数组中有序的数列写入目标数组的制定位置，使进行归并的数组段有序&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;                tempIndex = &lt;span&gt;0&lt;/span&gt;;&lt;br&gt;                &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; i = first; i &amp;lt;= last; i++)&lt;br&gt;                &#123;&lt;br&gt;                    array[i] = temp[tempIndex++];&lt;br&gt;                &#125;&lt;br&gt;            &#125;&lt;br&gt;            &lt;span&gt;catch&lt;/span&gt; (Exception ex)&lt;br&gt;            &#123; &#125;&lt;br&gt;        &#125;</span><br></pre></td></tr></table></figure>

<img src="/2024/09/04/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95CSharp%E5%AE%9E%E7%8E%B0/IMG-20250704185625092.gif" class="" title="复制代码">

<p>       对于N个元素的数组来说, 如此划分需要的层数是以2为底N的对数, 每一层中, 每一个元素都要复制到结果数组中, 并复制回来, 所以复制2N次, 那么对于归并排序,它的时间复杂度为O(N*logN), 而比较次数会少得多, 最少需要N&#x2F;2次,最多为N-1次, 所以平均比较次数在两者之间. 它的主要问题还是在于在内存中需要双倍的空间.</p>
]]></content>
      <categories>
        <category>学习笔记</category>
        <category>排序算法</category>
      </categories>
      <tags>
        <tag>排序算法</tag>
      </tags>
  </entry>
  <entry>
    <title>插入排序算法CSharp实现</title>
    <url>/2024/09/04/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95CSharp%E5%AE%9E%E7%8E%B0/</url>
    <content><![CDATA[<h1 id="插入排序算法C-实现"><a href="#插入排序算法C-实现" class="headerlink" title="插入排序算法C#实现"></a>插入排序算法C#实现</h1><blockquote>
<h2 id="Excerpt"><a href="#Excerpt" class="headerlink" title="Excerpt"></a>Excerpt</h2><p>插入排序算法主要分为：直接插入算法，折半排序算法（二分插入算法），希尔排序算法，后两种是直接插入算法的改良。因此直接插入算法是基础，这里先进行直接插入算法的分析与编码。直接插入算法的排序思想：假设有序数组从小到大为array[0],array[1],array[2],….,array[n-2],</p>
</blockquote>
<hr>
<p>插入排序算法主要分为：直接插入算法，折半排序算法（二分插入算法），希尔排序算法，后两种是直接插入算法的改良。因此直接插入算法是基础，这里先进行直接插入算法的分析与编码。</p>
<p>直接插入算法的排序思想：假设有序数组从小到大为array[0],array[1],array[2],….,array[n-2],array[n-1]，那么将待排数值array[n]与前面的有序数组从后向前依次比较，直到在有序数组中找到小于待排数值array[n]的位置，将array[n]插入到此位置，并入组合成新的有序数组。</p>
<p><strong>直接插入算法</strong>--代码如下所示：</p>
<img src="/2024/09/04/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95CSharp%E5%AE%9E%E7%8E%B0/IMG-20250704185625093.gif" class="" title="复制代码">

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;span&gt;　　　　　//&lt;/span&gt;&lt;span&gt;直接插入排序算法（传递待排数组名，即：数组的地址。故形参数组的各种操作反应到实参数组上）&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;　　　　　private &lt;/span&gt;&lt;span&gt;static &lt;/span&gt;&lt;span&gt;void&lt;/span&gt;&lt;span&gt; InsertSortionFunction(&lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt;[] array)&lt;br&gt;        &#123;&lt;br&gt;            &lt;/span&gt;&lt;span&gt;try&lt;/span&gt;&lt;span&gt;&lt;br&gt;            &#123;&lt;br&gt;                &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; temp &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;;   &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;临时变量，存储待排的数值&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;　　　　　　　　　for&lt;/span&gt;&lt;span&gt; (&lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; i &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;; i &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt; array.Length; i&lt;/span&gt;&lt;span&gt;++&lt;/span&gt;&lt;span&gt;)  &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;将无序的所有数值依次插入到有序数组中，注：下标从1开始，因为操作的是同一个数组&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;                &#123;&lt;br&gt;                    temp &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; array[i];    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;记录待插入前面有序数组的数值&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;　　　　　　　　　　　 int&lt;/span&gt;&lt;span&gt; index &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; i &lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;;  &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;记录前方有序数组的末尾位置&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;　　　　　　　　　　　 while&lt;/span&gt;&lt;span&gt; (index &lt;/span&gt;&lt;span&gt;&amp;gt;=&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span&gt; array[index] &lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt; temp)   &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;循环遍历前面的有序数组，并且从大到小依次与待排数值进行比较&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;                    &#123;&lt;br&gt;                        array[index &lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;] &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; array[index];    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;如果index&amp;gt;=0并且此时的值大于待排数值，将此处的值向后移动一位&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;                        index&lt;/span&gt;&lt;span&gt;--&lt;/span&gt;&lt;span&gt;;    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;index--向前遍历有序数组&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;                    &#125;&lt;br&gt;                    array[index &lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;] &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; temp;    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;由于前面的index--，所以temp插入的位置是index+1&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;                &#125;&lt;br&gt;            &#125;&lt;br&gt;            &lt;/span&gt;&lt;span&gt;catch&lt;/span&gt;&lt;span&gt; (Exception ex)&lt;br&gt;            &#123; &#125;&lt;br&gt;        &#125;&lt;/span&gt;</span><br></pre></td></tr></table></figure>

<img src="/2024/09/04/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95CSharp%E5%AE%9E%E7%8E%B0/IMG-20250704185625093.gif" class="" title="复制代码">

<p>折半排序算法是对直接插入算法的一种优化，优化的核心是：通过折半查看有序数组中间位置的数值（a）与待插入的数值（temp）的大小，如果a&gt;&#x3D;temp，则转向折半的左区间继续折半查找； 如果a&lt;temp，则转向折半后的右区间继续折半查找。直到左右下标相同时，此时折半的下标也指向相同的位置，再做最后一次循环，最终的结果是：左右下标相差1，并且原来左侧的下标指向大于temp的位置，原来右侧的下标指向了小于temp的位置，即：array[biggerIndex] &lt; temp &lt; array[smallerIndex]。</p>
<p><strong>折半排序算法</strong>--代码如下：</p>
<img src="/2024/09/04/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95CSharp%E5%AE%9E%E7%8E%B0/IMG-20250704185625093.gif" class="" title="复制代码">

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;span&gt;  &amp;nbsp;　　　&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;折半排序算法（传递待排数组名，即：数组的地址。故形参数组的各种操作反应到实参数组上）&lt;/span&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;span&gt;        private &lt;/span&gt;&lt;span&gt;static &lt;/span&gt;&lt;span&gt;void&lt;/span&gt;&lt;span&gt; BinaryInsertionSortFunction(&lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt;[] array)&lt;br&gt;        &#123;&lt;br&gt;            &lt;/span&gt;&lt;span&gt;try&lt;/span&gt;&lt;span&gt;&lt;br&gt;            &#123;&lt;br&gt;                &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; smallerIndex &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;; &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;记录有序数组的起始位置&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;　　　　　　　　　 int&lt;/span&gt;&lt;span&gt; biggerIndex &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;; &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;记录有序数组的终止位置&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;　　　　　　　　　 int&lt;/span&gt;&lt;span&gt; midIndex &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;; &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;记录获取有序数组的中间位置（折半法的关键：折半的位置）&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;　　　　　　　　　 int&lt;/span&gt;&lt;span&gt; temp;  &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;记录带排的数值&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;　　　　　　　　　 for&lt;/span&gt;&lt;span&gt; (&lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; i &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;; i &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt; array.Length; i&lt;/span&gt;&lt;span&gt;++&lt;/span&gt;&lt;span&gt;)  &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;循环向有序数组中插入数值（i从1开始，因为操作的是同一个数组）&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;                &#123;&lt;br&gt;                    temp &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; array[i];   &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;记录待插入有序数组的数值&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;                    biggerIndex &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; i &lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;;&lt;br&gt;                    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;当smallerIndex==biggerIndex时，进入最后一次循环：smallerIndex指向大于temp的数组位置，biggerIndex指向小于temp的数组位置&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;　　　　　　　　　　　 while&lt;/span&gt;&lt;span&gt; (smallerIndex &lt;/span&gt;&lt;span&gt;&amp;lt;=&lt;/span&gt;&lt;span&gt; biggerIndex)   &lt;br&gt;                    &#123;&lt;br&gt;                        midIndex &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; (smallerIndex &lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt; biggerIndex) &lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;&lt;span&gt;; &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;确定折半的位置&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;　　　　　　　　　　　　　　if&lt;/span&gt;&lt;span&gt;(array[midIndex] &lt;/span&gt;&lt;span&gt;&amp;gt;=&lt;/span&gt;&lt;span&gt; temp)  &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;折半位置的数值 &amp;gt;= temp&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;                        &#123;&lt;br&gt;                            biggerIndex &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; midIndex &lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;;    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;biggerIndex以midIndex为基础向前移动一位&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;                        &#125;&lt;br&gt;                        &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;&lt;br&gt;                        &#123;&lt;br&gt;                            smallerIndex &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; midIndex &lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;;  &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;smallerIndex以midIndex为基础向后移动一位&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;                        &#125;&lt;br&gt;                    &#125;&lt;br&gt;                    &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt; (&lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; j &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; i &lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;; j &lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;biggerIndex; j&lt;/span&gt;&lt;span&gt;--&lt;/span&gt;&lt;span&gt;) &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;将有序数组中大于temp的数值分别向后移动一位&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;                    &#123;&lt;br&gt;                        array[j &lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;] &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; array[j];  &lt;/span&gt;&lt;span&gt;//&lt;br&gt;&lt;/span&gt;&lt;span&gt;                    &#125;&lt;br&gt;                    array[biggerIndex &lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;] &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; temp;   &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;将temp插入biggerIndex + 1，因为此时array[biggerIndex]&amp;lt;temp&amp;lt;array[smallerIndex]&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;                &#125;&lt;br&gt;            &#125;&lt;br&gt;            &lt;/span&gt;&lt;span&gt;catch&lt;/span&gt;&lt;span&gt; (Exception ex)&lt;br&gt;            &#123; &#125;&lt;br&gt;        &#125;&lt;/span&gt;</span><br></pre></td></tr></table></figure>

<img src="/2024/09/04/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95CSharp%E5%AE%9E%E7%8E%B0/IMG-20250704185625093.gif" class="" title="复制代码">

<p>希尔排序同样是直接插入排序算法的一种改进，基本思想是：将无序的数列划分为若干小的子序列，然后对子序列进行直接插入排序。<br>时间性能优于直接插入排序算法，但是一种不稳定的排序，时间复杂度为O(nlogn)。<br>希尔排序算法主要分为3重循环：<br>第一重循环–&gt;按照gap的大小进行分组，初始化从array.Length&#x2F;2开始，依次递减到1<br>第二重循环–&gt;对所有分组进行排序<br>第三重循环–&gt;组内进行直接插入排序</p>
<p><strong>希尔排序算法</strong>--代码如下：</p>
<img src="/2024/09/04/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95CSharp%E5%AE%9E%E7%8E%B0/IMG-20250704185625093.gif" class="" title="复制代码">

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;span&gt;　　　　  private &lt;/span&gt;&lt;span&gt;static &lt;/span&gt;&lt;span&gt;void&lt;/span&gt;&lt;span&gt; ShellSortFunction(&lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt;[] array)&lt;br&gt;        &#123;&lt;br&gt;            &lt;/span&gt;&lt;span&gt;try&lt;/span&gt;&lt;span&gt;&lt;br&gt;            &#123;&lt;br&gt;                &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; length &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; array.Length;&lt;br&gt;                &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; temp &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;;&lt;br&gt;                &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt; (&lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; gap &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; length &lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;&lt;span&gt;; gap &lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;; gap&lt;/span&gt;&lt;span&gt;--&lt;/span&gt;&lt;span&gt;)  &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;第一重循环，按照gap的大小进行分组&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;                &#123;&lt;br&gt;                    &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt; (&lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; i &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;; i &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt; gap; i&lt;/span&gt;&lt;span&gt;++&lt;/span&gt;&lt;span&gt;)   &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;第二重循环，对所有分组进行排序&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;                    &#123;&lt;br&gt;                        &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt; (&lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; j &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; i; j &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt; length; j &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; j &lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt; gap)    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;第三重循环，组内进行直接插入排序&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;                        &#123;&lt;br&gt;                            temp &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; array[j];&lt;br&gt;                            &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; index &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; j &lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt; gap;&lt;br&gt;                            &lt;/span&gt;&lt;span&gt;while&lt;/span&gt;&lt;span&gt; (index &lt;/span&gt;&lt;span&gt;&amp;gt;=&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span&gt; array[index] &lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt; temp)&lt;br&gt;                            &#123;&lt;br&gt;                                array[index &lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt; gap] &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; array[index];&lt;br&gt;                                index &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; index &lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt; gap;&lt;br&gt;                            &#125;&lt;br&gt;                            array[index &lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt; gap] &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; temp;&lt;br&gt;                        &#125;&lt;br&gt;                    &#125;&lt;br&gt;                &#125;&lt;br&gt;            &#125;&lt;br&gt;            &lt;/span&gt;&lt;span&gt;catch&lt;/span&gt;&lt;span&gt; (Exception ex)&lt;br&gt;            &#123; &#125;&lt;br&gt;        &#125;&lt;/span&gt;</span><br></pre></td></tr></table></figure>

<img src="/2024/09/04/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95CSharp%E5%AE%9E%E7%8E%B0/IMG-20250704185625093.gif" class="" title="复制代码">

<p>。。。。</p>
]]></content>
      <categories>
        <category>学习笔记</category>
        <category>排序算法</category>
      </categories>
      <tags>
        <tag>排序算法</tag>
      </tags>
  </entry>
  <entry>
    <title>中介者模式</title>
    <url>/2019/11/18/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E4%B8%AD%E4%BB%8B%E8%80%85%E6%A8%A1%E5%BC%8F/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>学习笔记</category>
        <category>设计模式</category>
      </categories>
      <tags>
        <tag>设计模式</tag>
        <tag>中介者模式</tag>
      </tags>
  </entry>
  <entry>
    <title>享元模式</title>
    <url>/2019/11/12/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E4%BA%AB%E5%85%83%E6%A8%A1%E5%BC%8F/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>学习笔记</category>
        <category>设计模式</category>
      </categories>
      <tags>
        <tag>设计模式</tag>
        <tag>享元模式</tag>
      </tags>
  </entry>
  <entry>
    <title>代理模式</title>
    <url>/2019/11/13/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>学习笔记</category>
        <category>设计模式</category>
      </categories>
      <tags>
        <tag>设计模式</tag>
        <tag>代理模式</tag>
      </tags>
  </entry>
  <entry>
    <title>单例模式</title>
    <url>/2015/11/02/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/</url>
    <content><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>在软件开发中，<strong>单例模式（Singleton Pattern）</strong> 是一种常见的设计模式，用于确保一个类只有一个实例，并提供一个全局访问点。它适用于需要严格控制资源访问的场景，例如数据库连接池、配置管理器或任务调度器等。本文将详细介绍单例模式的核心思想，并展示其在 <strong>C#、Python、Golang、C 和 C++</strong> 中的实现方式。</p>
<p>单例模式的主要特点包括：</p>
<ul>
<li><strong>唯一性</strong>：类只有一个实例对象</li>
<li><strong>自创建</strong>：类自行创建自己的实例</li>
<li><strong>全局访问</strong>：提供一个全局访问点来获取该实例</li>
</ul>
<p>特点</p>
<ul>
<li><strong>唯一性</strong>：类自身负责创建和管理实例。</li>
<li><strong>延迟加载</strong>：实例通常在第一次使用时创建（懒汉式）。</li>
<li><strong>线程安全</strong>：在多线程环境中需确保实例的唯一性。</li>
<li><strong>不可克隆&#x2F;序列化</strong>：避免通过克隆或反序列化创建新实例。</li>
</ul>
<h2 id="单例模式的实现方式"><a href="#单例模式的实现方式" class="headerlink" title="单例模式的实现方式"></a>单例模式的实现方式</h2><h3 id="C-实现"><a href="#C-实现" class="headerlink" title="C# 实现"></a>C# 实现</h3><p>C# 中的单例模式通常通过 <strong>双重检查锁定（Double-Check Locking）</strong> 实现，以确保线程安全和延迟加载。</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">sealed</span> <span class="keyword">class</span> <span class="title">Singleton</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 使用 volatile 保证多线程下的可见性</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">volatile</span> Singleton _instance;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="built_in">object</span> _lock = <span class="keyword">new</span> <span class="built_in">object</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 私有构造函数</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Singleton</span>()</span> &#123; &#125;</span><br><span class="line"></span><br><span class="line">	</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Singleton <span class="title">GetInstance</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">	    <span class="comment">// 第一次检查，避免不必要的锁定</span></span><br><span class="line">        <span class="keyword">if</span> (_instance == <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">			 <span class="comment">// 锁定操作</span></span><br><span class="line">            <span class="keyword">lock</span> (_lock)</span><br><span class="line">            &#123;</span><br><span class="line">				<span class="comment">// 第二次检查，确保多线程安全</span></span><br><span class="line">                <span class="keyword">if</span> (_instance == <span class="literal">null</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    _instance = <span class="keyword">new</span> Singleton();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> _instance;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="饿汉式（立即加载）"><a href="#饿汉式（立即加载）" class="headerlink" title="饿汉式（立即加载）"></a>饿汉式（立即加载）</h4><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">sealed</span> <span class="keyword">class</span> <span class="title">Singleton</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">// 静态初始化，CLR保证线程安全</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">readonly</span> Singleton _instance = <span class="keyword">new</span> Singleton();</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 私有构造函数</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Singleton</span>()</span> &#123; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Singleton <span class="title">GetInstance</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> _instance;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Python-实现"><a href="#Python-实现" class="headerlink" title="Python 实现"></a>Python 实现</h3><p>Python 的模块天然支持单例，但也可以通过类实现。以下是一个线程安全的懒汉式实现：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Singleton</span>:</span><br><span class="line">    _instance_lock = threading.Lock()  <span class="comment"># 线程锁</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="comment"># 初始化逻辑</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__new__</span>(<span class="params">cls, *args, **kwargs</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">hasattr</span>(Singleton, <span class="string">&quot;_instance&quot;</span>):</span><br><span class="line">            <span class="keyword">with</span> cls._instance_lock:  <span class="comment"># 确保线程安全</span></span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">hasattr</span>(Singleton, <span class="string">&quot;_instance&quot;</span>):</span><br><span class="line">                    Singleton._instance = <span class="built_in">super</span>().__new__(cls)</span><br><span class="line">        <span class="keyword">return</span> Singleton._instance</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用示例</span></span><br><span class="line">s1 = Singleton()</span><br><span class="line">s2 = Singleton()</span><br><span class="line"><span class="built_in">print</span>(s1 <span class="keyword">is</span> s2)  <span class="comment"># 输出: True</span></span><br></pre></td></tr></table></figure>

<h4 id="饿汉式（模块级单例）"><a href="#饿汉式（模块级单例）" class="headerlink" title="饿汉式（模块级单例）"></a>饿汉式（模块级单例）</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># singleton.py</span><br><span class="line">class Singleton:</span><br><span class="line">    def __init__(self):</span><br><span class="line">        pass</span><br><span class="line"></span><br><span class="line">instance = Singleton()</span><br><span class="line"></span><br><span class="line"># 使用示例</span><br><span class="line">from singleton import instance</span><br></pre></td></tr></table></figure>

<h4 id="装饰器实现"><a href="#装饰器实现" class="headerlink" title="装饰器实现"></a>装饰器实现</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">singleton</span>(<span class="params">cls</span>): </span><br><span class="line">	instances = &#123;&#125; </span><br><span class="line">	<span class="keyword">def</span> <span class="title function_">wrapper</span>(<span class="params">*args, **kwargs</span>): </span><br><span class="line">		<span class="keyword">if</span> cls <span class="keyword">not</span> <span class="keyword">in</span> instances: </span><br><span class="line">			instances[cls] = cls(*args, **kwargs) </span><br><span class="line">			<span class="keyword">return</span> instances[cls]</span><br><span class="line">		<span class="keyword">return</span> wrapper </span><br><span class="line">		</span><br><span class="line"><span class="meta">@singleton </span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MySingleton</span>: </span><br><span class="line">	<span class="keyword">pass</span></span><br></pre></td></tr></table></figure>

<h3 id="Golang-实现"><a href="#Golang-实现" class="headerlink" title="Golang 实现"></a>Golang 实现</h3><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">&quot;sync&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Singleton <span class="keyword">struct</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">	instance *Singleton</span><br><span class="line">	once     sync.Once</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetInstance</span><span class="params">()</span></span> *Singleton &#123;</span><br><span class="line">	<span class="comment">// sync.Once 确保代码只执行一次，线程安全</span></span><br><span class="line">	once.Do(<span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">		instance = &amp;Singleton&#123;&#125;</span><br><span class="line">	&#125;)</span><br><span class="line">	<span class="keyword">return</span> instance</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用示例</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">	s1 := GetInstance()</span><br><span class="line">	s2 := GetInstance()</span><br><span class="line">	<span class="built_in">println</span>(s1 == s2) <span class="comment">// 输出: true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="饿汉式"><a href="#饿汉式" class="headerlink" title="饿汉式"></a>饿汉式</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">type Singleton struct&#123;&#125;</span><br><span class="line"></span><br><span class="line">var instance = &amp;Singleton&#123;&#125;</span><br><span class="line"></span><br><span class="line">func GetInstance() *Singleton &#123;</span><br><span class="line">	return instance</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="单例模式的优缺点"><a href="#单例模式的优缺点" class="headerlink" title="单例模式的优缺点"></a>单例模式的优缺点</h2><h3 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h3><ul>
<li><strong>控制实例数量</strong>：确保全局唯一性，避免资源浪费。</li>
<li><strong>灵活扩展</strong>：可通过子类化或组合模式扩展功能。</li>
<li><strong>全局访问</strong>：简化了对共享资源的访问。</li>
</ul>
<h3 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h3><ul>
<li><strong>违反单一职责原则</strong>：类负责管理自己的实例，增加了耦合。</li>
<li><strong>测试困难</strong>：全局状态可能导致单元测试难以隔离。</li>
<li><strong>生命周期管理</strong>：实例与程序生命周期一致，可能占用过多内存。.</li>
</ul>
<h2 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h2><ul>
<li><strong>资源管理器</strong>：如文件系统、数据库连接池。</li>
<li><strong>配置中心</strong>：全局配置对象，避免重复加载配置。</li>
<li><strong>缓存服务</strong>：单点缓存，减少内存开销。</li>
<li><strong>日志记录器</strong>：统一日志输出，避免多线程冲突。</li>
</ul>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>单例模式是一种简单但强大的设计模式，适用于需要严格控制实例数量的场景。不同编程语言的实现方式各有特色：</p>
<ul>
<li><strong>C#</strong> 通过 <code>lock</code> 和 <code>volatile</code> 保证线程安全。</li>
<li><strong>Python</strong> 可利用模块的天然单例特性。</li>
<li><strong>Golang</strong> 使用 <code>sync.Once</code> 实现原子初始化。</li>
<li><strong>C&#x2F;C++</strong> 通过静态局部变量或互斥锁实现线程安全。</li>
</ul>
<p><strong>实现要点总结</strong>：</p>
<ol>
<li><strong>私有构造函数</strong>：防止外部直接实例化</li>
<li><strong>静态实例变量</strong>：保存唯一的实例</li>
<li><strong>全局访问点</strong>：提供获取实例的静态方法</li>
<li><strong>线程安全</strong>：在多线程环境下需要考虑线程安全问题</li>
</ol>
<p><strong>选择建议</strong>：</p>
<ul>
<li><strong>懒汉式</strong>：适用于实例创建开销较大，且可能不被使用的场景</li>
<li><strong>饿汉式</strong>：适用于实例创建开销小，且一定会被使用的场景</li>
<li><strong>双重检查锁定</strong>：适用于需要兼顾性能和线程安全的场景</li>
</ul>
<p>在实际开发中，需根据语言特性和具体需求选择合适的实现方式，同时注意避免过度使用单例模式，以免引入全局状态带来的复杂性。</p>
]]></content>
      <categories>
        <category>学习笔记</category>
        <category>设计模式</category>
      </categories>
      <tags>
        <tag>设计模式</tag>
        <tag>单例模式</tag>
      </tags>
  </entry>
  <entry>
    <title>原型模式</title>
    <url>/2019/11/06/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E5%8E%9F%E5%9E%8B%E6%A8%A1%E5%BC%8F/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>学习笔记</category>
        <category>设计模式</category>
      </categories>
      <tags>
        <tag>设计模式</tag>
        <tag>原型模式</tag>
      </tags>
  </entry>
  <entry>
    <title>命令模式</title>
    <url>/2019/11/15/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E5%91%BD%E4%BB%A4%E6%A8%A1%E5%BC%8F/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>学习笔记</category>
        <category>设计模式</category>
      </categories>
      <tags>
        <tag>设计模式</tag>
        <tag>命令模式</tag>
      </tags>
  </entry>
  <entry>
    <title>备忘录模式</title>
    <url>/2019/11/23/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E5%A4%87%E5%BF%98%E5%BD%95%E6%A8%A1%E5%BC%8F/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>学习笔记</category>
        <category>设计模式</category>
      </categories>
      <tags>
        <tag>设计模式</tag>
        <tag>备忘录模式</tag>
      </tags>
  </entry>
  <entry>
    <title>外观模式</title>
    <url>/2019/11/11/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E5%A4%96%E8%A7%82%E6%A8%A1%E5%BC%8F/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>学习笔记</category>
        <category>设计模式</category>
      </categories>
      <tags>
        <tag>设计模式</tag>
        <tag>外观模式</tag>
      </tags>
  </entry>
  <entry>
    <title>工厂方法模式</title>
    <url>/2019/11/03/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E5%B7%A5%E5%8E%82%E6%96%B9%E6%B3%95%E6%A8%A1%E5%BC%8F/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>学习笔记</category>
        <category>设计模式</category>
      </categories>
      <tags>
        <tag>设计模式</tag>
        <tag>工厂方法</tag>
      </tags>
  </entry>
  <entry>
    <title>建造者模式</title>
    <url>/2019/11/05/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E5%BB%BA%E9%80%A0%E8%80%85%E6%A8%A1%E5%BC%8F/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>学习笔记</category>
        <category>设计模式</category>
      </categories>
      <tags>
        <tag>设计模式</tag>
        <tag>建造者</tag>
      </tags>
  </entry>
  <entry>
    <title>抽象工厂模式</title>
    <url>/2019/11/04/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E6%8A%BD%E8%B1%A1%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>学习笔记</category>
        <category>设计模式</category>
      </categories>
      <tags>
        <tag>设计模式</tag>
        <tag>抽象工厂</tag>
      </tags>
  </entry>
  <entry>
    <title>桥接模式</title>
    <url>/2019/11/08/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E6%A1%A5%E6%8E%A5%E6%A8%A1%E5%BC%8F/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>学习笔记</category>
        <category>设计模式</category>
      </categories>
      <tags>
        <tag>设计模式</tag>
        <tag>桥接模式</tag>
      </tags>
  </entry>
  <entry>
    <title>模板方法</title>
    <url>/2019/11/14/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E6%A8%A1%E6%9D%BF%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>学习笔记</category>
        <category>设计模式</category>
      </categories>
      <tags>
        <tag>设计模式</tag>
        <tag>模板方法</tag>
      </tags>
  </entry>
  <entry>
    <title>状态模式</title>
    <url>/2019/11/19/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E7%8A%B6%E6%80%81%E6%A8%A1%E5%BC%8F/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>学习笔记</category>
        <category>设计模式</category>
      </categories>
      <tags>
        <tag>设计模式</tag>
        <tag>状态模式</tag>
      </tags>
  </entry>
  <entry>
    <title>策略模式</title>
    <url>/2019/11/20/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>学习笔记</category>
        <category>设计模式</category>
      </categories>
      <tags>
        <tag>设计模式</tag>
        <tag>策略模式</tag>
      </tags>
  </entry>
  <entry>
    <title>组合模式</title>
    <url>/2019/11/10/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E7%BB%84%E5%90%88%E6%A8%A1%E5%BC%8F/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>学习笔记</category>
        <category>设计模式</category>
      </categories>
      <tags>
        <tag>设计模式</tag>
        <tag>组合模式</tag>
      </tags>
  </entry>
  <entry>
    <title>装饰模式</title>
    <url>/2019/11/09/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%A3%85%E9%A5%B0%E6%A8%A1%E5%BC%8F/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>学习笔记</category>
        <category>设计模式</category>
      </categories>
      <tags>
        <tag>设计模式</tag>
        <tag>装饰模式</tag>
      </tags>
  </entry>
  <entry>
    <title>观察者模式</title>
    <url>/2019/11/17/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>学习笔记</category>
        <category>设计模式</category>
      </categories>
      <tags>
        <tag>设计模式</tag>
        <tag>观察者模式</tag>
      </tags>
  </entry>
  <entry>
    <title>解释器模式</title>
    <url>/2019/11/24/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%A7%A3%E9%87%8A%E5%99%A8%E6%A8%A1%E5%BC%8F/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>学习笔记</category>
        <category>设计模式</category>
      </categories>
      <tags>
        <tag>设计模式</tag>
        <tag>解释器模式</tag>
      </tags>
  </entry>
  <entry>
    <title>设计模式系列导航</title>
    <url>/2019/11/30/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E7%B3%BB%E5%88%97%E5%AF%BC%E8%88%AA/</url>
    <content><![CDATA[<a href="/2019/11/01/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%9A%84%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99/" title="面向对象的设计原则">面向对象的设计原则</a>
<h3 id="创建型"><a href="#创建型" class="headerlink" title="创建型"></a>创建型</h3><p>创建型模式抽象了实例化的过程。创建性模式隐藏了这些类的实例是如何被创建和放在一起，整个系统关于这些对象所知道的是由抽象类所定义的接口。这样，创建性模式在创建了什么、谁创建它、她是怎么被创建的、以及何时创建方面提供了灵活性。创建相应数目的原型并克隆她们通常比每次用适合的状态手工实例化该类更方便。</p>
<a href="/2015/11/02/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/" title="单例模式">单例模式</a> (Singleton) 保证一个类仅有一个实例，并提供一个访问它的全局访问点。

<p><strong>优点</strong>：对唯一实例的受控访问。</p>
<p><strong>缺点</strong>：饿汉式&#x2F;懒汉式  多线程同时访问时可能造成多个实例。</p>
<a href="/2019/11/03/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E5%B7%A5%E5%8E%82%E6%96%B9%E6%B3%95%E6%A8%A1%E5%BC%8F/" title="工厂方法模式">工厂方法模式</a> (Factory Method) 定义一个用于创建对象的接口，让子类决定实例化哪一个类，工厂方法使一个类的实例化延迟到其子类。

<p><strong>优点</strong>：是简单工厂模式的进一步抽象和推广，既保持了简单工厂模式的优点（工厂类中包含了必要的逻辑判断，根据客户端的选择条件动态实例化相关的类。对于客户端来说，去除了与具体产品的依赖），而且克服了简单工厂的缺点（违背了开放封闭原则）。</p>
<p><strong>缺点</strong>：每增加一个产品，就需要增加一个产品工厂的类，增加了额外的开发。（用反射可以解决）。</p>
<a href="/2019/11/04/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E6%8A%BD%E8%B1%A1%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/" title="抽象工厂模式">抽象工厂模式</a> (Abstract Factory) 提供一个创建一系列相关或互相依赖对象的接口，而无需指定它们具体的类。

<p><strong>优点</strong>：</p>
<p>a)   改变具体工厂即可使用不同的产品配置，使改变一个应用的具体工厂变得很容易。</p>
<p>b)   让具体的创建实例过程与客户端分离，客户端通过抽象接口操作实例，产品的具体类名也被具体工厂的实现分离。</p>
<p><strong>缺点</strong>：如果要新增方法，改动极大。</p>
<a href="/2019/11/05/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E5%BB%BA%E9%80%A0%E8%80%85%E6%A8%A1%E5%BC%8F/" title="建造者模式">建造者模式</a> (Builder) 将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示。

<p><strong>优点</strong>：使得建造代码与表示代码分离。</p>
<p><strong>缺点</strong>：1、增加代码量；2、Builder只是一个替代构造器的选择，不能直接用于降低非构造函数方法的参数数量。</p>
<a href="/2019/11/06/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E5%8E%9F%E5%9E%8B%E6%A8%A1%E5%BC%8F/" title="原型模式">原型模式</a> (Prototype) 用原型实例指定创建对象的种类，并且通过拷贝这些原型创建新的对象。

<p><strong>优点</strong>：隐藏了对象创建的细节，大大提升了性能。不用重新初始化对象，而是动态的获得对象运行时的状态。</p>
<p><strong>缺点</strong>：深复制 or 浅复制 。</p>
<h3 id="结构型"><a href="#结构型" class="headerlink" title="结构型"></a>结构型</h3><a href="/2019/11/07/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F/" title="适配器模式">适配器模式</a> (Adapter) 将一个类的接口转换成客户希望的另外一个接口。Adapter模式使得原本由于接口不兼容而不能一起工作的那些类可以一起工作。

<p>在GoF的设计模式中，适配器有两种类型，类适配器模式和对象适配器模式。</p>
<p>a)   类适配器模式：通过多重继承对一个接口与另一个接口进行匹配，而C#，Java等语言都不支持多重继承，也就是一个类只有一个父类。</p>
<p>b)   一般都指的是 对象适配器模式</p>
<p><strong>优点</strong>：能够复用现存的类，客户端统一调用同一接口，更简单、直接、紧凑。</p>
<p><strong>缺点</strong>：适配器模式有点儿“亡羊补牢”的感觉，设计阶段要避免使用。</p>
<a href="/2019/11/08/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E6%A1%A5%E6%8E%A5%E6%A8%A1%E5%BC%8F/" title="桥接模式">桥接模式</a> (Bridge) 将抽象部分与它的实现部分分离，使它们都可以独立的变化。

<p><strong>优点</strong>：减少各部分的耦合。 分离抽象和实现部分，更好的扩展性，可动态地切换实现、可减少子类的个数。</p>
<p><strong>缺点</strong>：1、<a href="https://so.csdn.net/so/search?q=%E6%A1%A5%E6%8E%A5&spm=1001.2101.3001.7020">桥接</a>模式的引入会增加系统的理解与设计难度，由于聚合关联关系建立在抽象层，要求开发者针对抽象进行设计与编程。 2、桥接模式要求正确识别出系统中两个独立变化的维度，因此其使用范围具有一定的局限性</p>
<a href="/2019/11/09/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%A3%85%E9%A5%B0%E6%A8%A1%E5%BC%8F/" title="装饰模式">装饰模式</a> (Decorator) 动态地给一个对象添加一些额外的职责，就增加功能来说，装饰模式比生成子类更灵活。

<p><strong>优点</strong>：把类中的装饰功能从类中搬移出去，简化原有的类。有效的把类的核心职责和装饰功能区分开，去除相关类中重复的装饰逻辑。</p>
<p><strong>缺点</strong>：利用装饰器模式,常常造成设计中有大量的小类,数量实在太多,可能会造成使用此API程序员的困扰。</p>
<a href="/2019/11/10/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E7%BB%84%E5%90%88%E6%A8%A1%E5%BC%8F/" title="组合模式">组合模式</a> (Composite) 将对象组合成树形结构以表示“部分-整体”的层次结构。

<p><strong>优点</strong>：组合模式让客户可以一致的使用组合结构和单个对象。</p>
<p><strong>缺点</strong>：使设计变得更加抽象，对象的业务规则如果很复杂，则实现组合模式具有很大挑战性，而且不是所有的方法都与叶子对象子类都有关联。</p>
<a href="/2019/11/11/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E5%A4%96%E8%A7%82%E6%A8%A1%E5%BC%8F/" title="外观模式">外观模式</a> (Facade) 为子系统中的一组接口提供一个一致的界面，此模式定义了一个高层接口，这个接口使得这一子系统更加容易使用。

<p><strong>优点</strong>：1、客户对子系统的使用变得简单了，减少了与子系统的关联对象，实现了子系统与客户之间的松耦合关系。 2、只是提供了一个访问子系统的统一入口，并不影响用户直接使用子系统类 3、降低了大型软件系统中的编译依赖性，并简化了系统在不同平台之间的移植过程。</p>
<p><strong>缺点</strong>：1、不能很好地限制客户使用子系统类，如果对客户访问子系统类做太多的限制则减少了可变性和灵活性   2、在不引入抽象外观类的情况下，增加新的子系统可能需要修改外观类或客户端的源代码，违背了“开闭原则”。</p>
<a href="/2019/11/12/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E4%BA%AB%E5%85%83%E6%A8%A1%E5%BC%8F/" title="享元模式">享元模式</a> (Flyweight) 运用共享技术有效的支持大量细粒度的对象。

<p><strong>优点</strong>：享元模式可以避免大量非常相似类的开销。程序中，大量细粒度的类实例来表示数据，如果它们除了几个参数外基本相同，那么把它们转移到类实例的外面，在方法调用时将它们传递进来，就可以通过共享大幅度减少单个实例的数目。</p>
<p><strong>缺点</strong>：1、由于享元模式需要区分外部状态和内部状态，使得应用程序在某种程度上来说更加复杂化了。2、为了使对象可以共享，享元模式需要将享元对象的状态外部化，而读取外部状态使得运行时间变长。</p>
<a href="/2019/11/13/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/" title="代理模式">代理模式</a> (Proxy) 为其他对象提供一种代理以控制对这个对象的访问。

<p><strong>优点</strong>：1）代理模式能将代理对象与真正被调用的对象分离，在一定程度上降低了系统的耦合度。2）代理模式在客户端和目标对象之间起到一个中介作用，这样可以起到保护目标对象的作用。代理对象也可以对目标对象调用之前进行其他操作。</p>
<p><strong>缺点</strong>：1）在客户端和目标对象增加一个代理对象，会造成请求处理速度变慢。2）增加了系统的复杂度。</p>
<h3 id="行为型"><a href="#行为型" class="headerlink" title="行为型"></a>行为型</h3><a href="/2019/11/14/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E6%A8%A1%E6%9D%BF%E6%96%B9%E6%B3%95/" title="模板方法">模板方法</a> (Template Method)  定义一个操作中的算法的骨架，而将一些步骤延迟到子类中。

<p><strong>优点</strong>：模板方法模式是通过把不变行为搬移到超类，去除子类中重复代码来实现它的优势，提供了一个代码复用平台，帮助子类摆脱重复的不变行为的纠缠。</p>
<p><strong>缺点</strong>：如果父类中可变的基本方法太多,将会导致类的个数增加,系统更加庞大。</p>
<a href="/2019/11/15/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E5%91%BD%E4%BB%A4%E6%A8%A1%E5%BC%8F/" title="命令模式">命令模式</a> (Command) 将一个请求封装为一个对象，从而使你可用不同的请求对客户进行参数化；对请求排队或记录请求日志，以及支持可撤销的操作。
<p><strong>优点</strong>：</p>
<p>a)      命令模式把请求一个操作的对象与知道怎么执行一个操作的对象分割开。</p>
<p>b)      它能较容易的设计一个命令队列。</p>
<p>c)       在需要的情况下，可以较容易的将命令记入日志。</p>
<p>d)      允许接收请求的一方决定是否要否决请求。</p>
<p>e)      可以容易的实现对请求的撤销和重做。</p>
<p>f)        由于加进新的具体命令类不影响其他类，因此增加新的具体命令类很容易。</p>
<p><strong>缺点</strong>：会增加系统的复杂性，这里的复杂性应该主要指的是类的数量。</p>
<a href="/2019/11/16/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%BF%AD%E4%BB%A3%E5%99%A8%E6%A8%A1%E5%BC%8F/" title="迭代器模式">迭代器模式</a> (Iterator) 提供一种方法顺序访问一个聚合对象中各个元素，而又不暴露该对象的内部表示。

<p><strong>优点</strong>：迭代器模式就是分离了集合对象的遍历行为，抽象出一个迭代器来负责，这样既可以做到不暴露集合的内部结构，又可以让外部代码透明的访问集合内部的数据。</p>
<p><strong>缺点</strong>：由于迭代器模式将存储数据和遍历数据的职责分离，增加新的聚合类需要对应增加新的迭代器类，类的个数成对增加，这在一定程度上增加了系统的复杂性。</p>
<a href="/2019/11/17/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/" title="观察者模式">观察者模式</a> (Publish/Subscribe) 定义了一种一对多的依赖关系，让多个观察者对象同时监听某一个主题对象。这个主题对象在状态发生变化时，会通知所有观察者对象，让它们能够自动更新自己。

<p><strong>优点</strong>：解耦。</p>
<p><strong>缺点</strong>：如果在被观察者之间有循环依赖的话，被观察者会触发它们之间进行循环调用，导致系统崩溃。在使用观察者模式是要特别注意这一点。</p>
<a href="/2019/11/18/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E4%B8%AD%E4%BB%8B%E8%80%85%E6%A8%A1%E5%BC%8F/" title="中介者模式">中介者模式</a> (mediator) 用一个中介对象来封装一系列的对象交互。中介者使各对象不需要显示的相互引用，从而使其耦合松散，而且可以独立的改变它们之间的交互。

<p><strong>优点</strong>：</p>
<p>a)   抽象中介者类（Mediator）减少了抽象同事类（colleague）之间的耦合，是的可以独立的改变和复用各个类。</p>
<p>b)   由于把对象如何协作进行了抽象，将中介作为一个独立的概念并将其封装在一个对象中，这样关注的对象就从对象各自本身的行为转移到它们之间的交互上来，也就是站在一个更宏观的角度去看待系统。</p>
<p><strong>缺点</strong>：控制集中化导致了中介者的复杂化。</p>
<a href="/2019/11/19/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E7%8A%B6%E6%80%81%E6%A8%A1%E5%BC%8F/" title="状态模式">状态模式</a> (State)  当一个对象的内在状态改变时，允许改变其行为，这个对象看起来像是改变了其类。

<p><strong>优点</strong>：状态模式主要解决的是当控制一个对象状态转换的条件表达式过于复杂的情况。把状态的判断逻辑转移到表示不同状态的一系列类当中，可以把复杂的判断逻辑简化。【消除庞大的条件分支语句】。</p>
<p><strong>缺点</strong>：违背开放-封闭原则</p>
<a href="/2019/11/20/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F/" title="策略模式">策略模式</a> (strategy) 它定义了算法家族，分别封装起来，让它们之间可以互相替换，此模式让算法的变化不会影响到使用算法的用户。

<p><strong>优点</strong>：策略模式的策略类为上下文定义了一系列可供重用的算法或行为，继承有助于析取出这些算法中的公共功能。另外，策略模式简化了单元测试，因为每一个算法都有自己的类，可以通过自己的接口单独测试。当不同的行为堆砌在一个类中，很难避免使用switch语句。但是将这些行为封装在一个一个独立的策略类中，可以在使用这些行为的类中消除条件语句</p>
<p><strong>缺点</strong>：基本的策略模式，选择权在客户端，具体实现转给策略模式的上下文对象。这并不好。使用策略模式和工厂类结合，可以减轻客户端的职责。但是还是不够完美，使用反射才能真正快乐。</p>
<a href="/2019/11/21/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%B4%A3%E4%BB%BB%E9%93%BE%E6%A8%A1%E5%BC%8F/" title="责任链模式">责任链模式</a> (chain of responsibility) 使多个对象都有机会处理请求，从而避免请求的发送者和接受者之间的耦合关系。将这个对象连成一条链，并沿着这条链传递该请求，直到有一个对象处理它为止。

<p><strong>优点</strong>：使得接收者和发送者都没有对方的明确信息，且链中对象自己也不知道链结构，结果是职责链可以简化对象的相互连接，它们只需要保持一个指向其后继者的引用，而不需要保持它所有的候选接收者的引用。<strong>开发者可以随时的增加或者修改处理一个请求的结构，增强了给对象指派职责的灵活性</strong>。</p>
<p><strong>缺点</strong>：一个请求极有可能到了链的末端都得不到处理，或者因为没有正确配置而得不到处理。</p>
<a href="/2019/11/22/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%AE%BF%E9%97%AE%E8%80%85%E6%A8%A1%E5%BC%8F/" title="访问者模式">访问者模式</a> (Vistor) 表示一个作用于某对象结构中的各元素的操作，它使你可以在不改变各元素的类的前提下定义作用于这些元素的新操作。

<p><strong>优点</strong>：增加新的操作很容易。新的操作就是新的访问者。</p>
<p><strong>缺点</strong>：很难增加新的数据结构。</p>
<a href="/2019/11/23/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E5%A4%87%E5%BF%98%E5%BD%95%E6%A8%A1%E5%BC%8F/" title="备忘录模式">备忘录模式</a> (Memento) 在不破坏封装性的前提下，捕获一个对象的内部状态，并在该对象之外保存这个状态，这样以后就可将该对象恢复到原先保存的状态。

<p><strong>优点</strong>：使用备忘录模式可以把复杂的发起人内部信息对其他的对象屏蔽起来，从而可以恰当地保持封装的边界。</p>
<p><strong>缺点</strong>：如果发起人角色的状态需要完整地存储到备忘录对象中，那么在资源消耗上面备忘录对象会很昂贵。</p>
<a href="/2019/11/24/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%A7%A3%E9%87%8A%E5%99%A8%E6%A8%A1%E5%BC%8F/" title="解释器模式">解释器模式</a> (interpreter) 给定一个语言，定义它的文法的一种表示，并定义一个解释器，这个解释器使用该表示来解释语言中的句子。

<p><strong>优点</strong>：解释器很容易改变和扩展文法，因为该模式使用类来表示文法规则，可以使用继承来改变或扩展文法，也比较容易实现文法。因为定义抽象语法树中各个节点的类的实现大体类似，这些类都易于直接编写。</p>
<p><strong>缺点</strong>：解释器模式为文法中的每一条规则至少定义了一个类，因此包含许多规则的文法可能难以管理和维护，建议当文法非常复杂时，使用其他技术（语法分析程序、编译器生成器）。</p>
]]></content>
      <categories>
        <category>学习笔记</category>
        <category>设计模式</category>
      </categories>
      <tags>
        <tag>设计模式</tag>
      </tags>
  </entry>
  <entry>
    <title>访问者模式</title>
    <url>/2019/11/22/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%AE%BF%E9%97%AE%E8%80%85%E6%A8%A1%E5%BC%8F/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>学习笔记</category>
        <category>设计模式</category>
      </categories>
      <tags>
        <tag>设计模式</tag>
        <tag>访问者模式</tag>
      </tags>
  </entry>
  <entry>
    <title>责任链模式</title>
    <url>/2019/11/21/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%B4%A3%E4%BB%BB%E9%93%BE%E6%A8%A1%E5%BC%8F/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>学习笔记</category>
        <category>设计模式</category>
      </categories>
      <tags>
        <tag>设计模式</tag>
        <tag>责任链模式</tag>
      </tags>
  </entry>
  <entry>
    <title>迭代器模式</title>
    <url>/2019/11/16/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%BF%AD%E4%BB%A3%E5%99%A8%E6%A8%A1%E5%BC%8F/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>学习笔记</category>
        <category>设计模式</category>
      </categories>
      <tags>
        <tag>设计模式</tag>
        <tag>迭代器模式</tag>
      </tags>
  </entry>
  <entry>
    <title>适配器模式</title>
    <url>/2019/11/07/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>学习笔记</category>
        <category>设计模式</category>
      </categories>
      <tags>
        <tag>设计模式</tag>
        <tag>适配器模式</tag>
      </tags>
  </entry>
  <entry>
    <title>面向对象的设计原则</title>
    <url>/2019/11/01/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%9A%84%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99/</url>
    <content><![CDATA[<h3 id="面向对象的设计原则"><a href="#面向对象的设计原则" class="headerlink" title="面向对象的设计原则"></a>面向对象的设计原则</h3><p>写代码也是有原则的，我们之所以使用设计模式，主要是为了适应变化，提高代码复用率，使软件更具有可维护性和可扩展性。如果我们能更好的理解这些设计原则，对我们理解面向对象的设计模式也是有帮助的，因为这些模式的产生是基于这些原则的。这些规则是：单一职责原则（SRP）、开放封闭原则（OCP）、里氏代替原则（LSP）、依赖倒置原则（DIP）、接口隔离原则（ISP）、合成复用原则（CRP）和迪米特原则（LoD）。下面我们就分别介绍这几种设计原则。</p>
<ol>
<li><p><strong>单一职责原则(SRP)：</strong></p>
<ol>
<li>SRP(Single Responsibilities Principle)的定义：就一个类而言，应该仅有一个引起它变化的原因。简而言之，就是功能要单一。</li>
<li>如果一个类承担的职责过多，就等于把这些职责耦合在一起，一个职责的变化可能会削弱或者抑制这个类完成其它职责的能力。这种耦合会导致脆弱的设计，当变化发生时，设计会遭受到意想不到的破坏。(敏捷软件开发)</li>
<li>软件设计真正要做的许多内容，就是发现职责并把那些职责相互分离。</li>
</ol>
<p>  小结：单一职责原则（SRP）可以看做是低耦合、高内聚在面向对象原则上的引申，将职责定义为引起变化的原因，以提高内聚性来减少引起变化的原因。责任过多，引起它变化的原因就越多，这样就会导致职责依赖，大大损伤其内聚性和耦合度。</p>
</li>
<li><p><strong>开放关闭原则(OCP)</strong></p>
<ol>
<li>OCP(Open-Close Principle)的定义：就是说软件实体(类，方法等等)应该可以扩展（扩展可以理解为增加），但是不能在原来的方法或者类上修改，也可以这样说，对增加代码开放，对修改代码关闭。</li>
<li>OCP的两个特征： 对于扩展（增加）是开放的，因为它不影响原来的，这是新增加的。对于修改是封闭的，如果总是修改，逻辑会越来越复杂。</li>
</ol>
<p>  小结：开放封闭原则（OCP）是面向对象设计的核心思想。遵循这个原则可以为我们面向对象的设计带来巨大的好处：可维护（维护成本小，做管理简单，影响最小）、可扩展（有新需求，增加就好）、可复用（不耦合，可以使用以前代码）、灵活性好（维护方便、简单）。开发人员应该仅对程序中出现频繁变化的那些部分做出抽象，但是不能过激，对应用程序中的每个部分都刻意地进行抽象同样也不是一个好主意。拒绝不成熟的抽象和抽象本身一样重要。</p>
</li>
<li><p><strong>里氏代替原则(LSP)</strong></p>
<ol>
<li>LSP(Liskov Substitution Principle)的定义：子类型必须能够替换掉它们的父类型。更直白的说，LSP是实现面向接口编程的基础。</li>
</ol>
<p>  小结：任何基类可以出现的地方，子类一定可以出现，所以我们可以实现面向接口编程。 LSP是继承复用的基石，只有当子类可以替换掉基类，软件的功能不受到影响时，基类才能真正被复用，而子类也能够在基类的基础上增加新的行为。里氏代换原则是对“开-闭”原则的补充。实现“开-闭”原则的关键步骤就是抽象化。而基类与子类的继承关系就是抽象化的具体实现，所以里氏代换原则是对实现抽象化的具体步骤的规范。</p>
</li>
<li><p><strong>依赖倒置原则（DIP）</strong></p>
<ol>
<li>DIP(Dependence Inversion Principle)的定义：抽象不应该依赖细节，细节应该依赖于抽象。简单说就是，我们要针对接口编程，而不要针对实现编程。</li>
<li>高层模块不应该依赖低层模块，两个都应该依赖抽象，因为抽象是稳定的。抽象不应该依赖具体（细节），具体（细节）应该依赖抽象。</li>
</ol>
<p>  小结：依赖倒置原则其实可以说是面向对象设计的标志，如果在我们编码的时候考虑的是面向接口编程，而不是简单的功能实现，体现了抽象的稳定性，只有这样才符合面向对象的设计。</p>
</li>
<li><p><strong>接口隔离原则（ISP）</strong></p>
<ol>
<li>接口隔离原则（Interface Segregation Principle, ISP）指的是使用多个专门的接口比使用单一的总接口要好。也就是说不要让一个单一的接口承担过多的职责，而应把每个职责分离到多个专门的接口中，进行接口分离。过于臃肿的接口是对接口的一种污染。</li>
<li>使用多个专门的接口比使用单一的总接口要好。</li>
<li>一个类对另外一个类的依赖性应当是建立在最小的接口上的。</li>
<li>一个接口代表一个角色，不应当将不同的角色都交给一个接口。没有关系的接口合并在一起，形成一个臃肿的大接口，这是对角色和接口的污染。</li>
<li>“不应该强迫客户依赖于它们不用的方法。接口属于客户，不属于它所在的类层次结构。”这个说得很明白了，再通俗点说，不要强迫客户使用它们不用的方法，如果强迫用户使用它们不使用的方法，那么这些客户就会面临由于这些不使用的方法的改变所带来的改变。</li>
</ol>
<p>  小结：接口隔离原则（ISP）告诉我们，在做接口设计的时候，要尽量设计的接口功能单一，功能单一，使它变化的因素就少，这样就更稳定，其实这体现了高内聚，低耦合的原则，这样做也避免接口的污染。</p>
</li>
<li><p><strong>组合复用原则（CRP）</strong></p>
<ol>
<li>组合复用原则（Composite Reuse Principle, CRP）就是在一个新的对象里面使用一些已有的对象，使之成为新对象的一部分。新对象通过向这些对象的委派达到复用已用功能的目的。简单地说，就是要尽量使用合成&#x2F;聚合，尽量不要使用继承。</li>
<li>要使用好组合复用原则，首先需要区分”Has—A”和“Is—A”的关系。 “Is—A”是指一个类是另一个类的“一种”，是属于的关系，而“Has—A”则不同，它表示某一个角色具有某一项责任。导致错误的使用继承而不是聚合的常见的原因是错误地把“Has—A”当成“Is—A”.例如：鸡是动物，这就是“Is-A”的表现，某人有一个手枪，People类型里面包含一个Gun类型，这就是“Has-A”的表现。</li>
</ol>
<p>  小结：组合&#x2F;聚合复用原则可以使系统更加灵活，类与类之间的耦合度降低，一个类的变化对其他类造成的影响相对较少，因此一般首选使用组合&#x2F;聚合来实现复用；其次才考虑继承，在使用继承时，需要严格遵循里氏替换原则，有效使用继承会有助于对问题的理解，降低复杂度，而滥用继承反而会增加系统构建和维护的难度以及系统的复杂度，因此需要慎重使用继承复用。</p>
</li>
<li><p><strong>迪米特法则（Law of Demeter）</strong></p>
<ol>
<li>迪米特法则（Law of Demeter，LoD）又叫最少知识原则（Least Knowledge Principle，LKP），指的是一个对象应当对其他对象有尽可能少的了解。也就是说，一个模块或对象应尽量少的与其他实体之间发生相互作用，使得系统功能模块相对独立，这样当一个模块修改时，影响的模块就会越少，扩展起来更加容易。</li>
<li>关于迪米特法则其他的一些表述有：只与你直接的朋友们通信；不要跟“陌生人”说话。</li>
<li>外观模式（Facade Pattern)和中介者模式（Mediator Pattern）就使用了迪米特法则。</li>
</ol>
<p>  小结：迪米特法则的初衷是降低类之间的耦合，实现类型之间的高内聚，低耦合，这样可以解耦。但是凡事都有度，过分的使用迪米特原则，会产生大量这样的中介和传递类，导致系统复杂度变大。所以在采用迪米特法则时要反复权衡，既做到结构清晰，又要高内聚低耦合。</p>
</li>
</ol>
]]></content>
      <categories>
        <category>学习笔记</category>
        <category>设计模式</category>
      </categories>
      <tags>
        <tag>设计模式</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows InfluxDB 安装与配置</title>
    <url>/2019/08/03/%E6%95%B0%E6%8D%AE%E5%BA%93/InfluxDB/InfluxDB%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<p>一、下载链接<a href="https://portal.influxdata.com/downloads">https://portal.influxdata.com/downloads</a>，选windows版</p>
<p>二、解压到安装盘，目录如下</p>
<img src="/2019/08/03/%E6%95%B0%E6%8D%AE%E5%BA%93/InfluxDB/InfluxDB%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/IMG-20250704185714467.png" class="">

<p>三、修改conf文件，代码如下，直接复制粘贴（1.4.2版本），注意修改路径，带D盘的改为你的安装路径就好，一共三个，注意网上有配置admin进行web管理，但新版本配置文件里没有admin因为官方给删除了，需下载Chronograf，后文会介绍</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">### Welcome to the InfluxDB configuration file.</span><br><span class="line"></span><br><span class="line"># The values in this file override the default values used by the system if</span><br><span class="line"># a config option is not specified. The commented out lines are the configuration</span><br><span class="line"># field and the default value used. Uncommenting a line and changing the value</span><br><span class="line"># will change the value used at runtime when the process is restarted.</span><br><span class="line"></span><br><span class="line"># Once every 24 hours InfluxDB will report usage data to usage.influxdata.com</span><br><span class="line"># The data includes a random ID, os, arch, version, the number of series and other</span><br><span class="line"># usage data. No data from user databases is ever transmitted.</span><br><span class="line"># Change this option to true to disable reporting.</span><br><span class="line"># reporting-disabled = false</span><br><span class="line"></span><br><span class="line"># Bind address to use for the RPC service for backup and restore.</span><br><span class="line"># bind-address = &quot;127.0.0.1:8088&quot;</span><br><span class="line"></span><br><span class="line">###</span><br><span class="line">### [meta]</span><br><span class="line">###</span><br><span class="line">### Controls the parameters for the Raft consensus group that stores metadata</span><br><span class="line">### about the InfluxDB cluster.</span><br><span class="line">###</span><br><span class="line"></span><br><span class="line">[meta]</span><br><span class="line">  # Where the metadata/raft database is stored</span><br><span class="line">  dir = &quot;D:/influxdb-1.4.2-1/meta&quot;</span><br><span class="line"></span><br><span class="line">  # Automatically create a default retention policy when creating a database.</span><br><span class="line">    retention-autocreate = true</span><br><span class="line"></span><br><span class="line">  # If log messages are printed for the meta service</span><br><span class="line">    logging-enabled = true</span><br><span class="line"></span><br><span class="line">###</span><br><span class="line">### [data]</span><br><span class="line">###</span><br><span class="line">### Controls where the actual shard data for InfluxDB lives and how it is</span><br><span class="line">### flushed from the WAL. &quot;dir&quot; may need to be changed to a suitable place</span><br><span class="line">### for your system, but the WAL settings are an advanced configuration. The</span><br><span class="line">### defaults should work for most systems.</span><br><span class="line">###</span><br><span class="line"></span><br><span class="line">[data]</span><br><span class="line">  # The directory where the TSM storage engine stores TSM files.</span><br><span class="line">  dir = &quot;D:/influxdb-1.4.2-1/data&quot;</span><br><span class="line"></span><br><span class="line">  # The directory where the TSM storage engine stores WAL files.</span><br><span class="line">  wal-dir = &quot;D:/influxdb-1.4.2-1/wal&quot;</span><br><span class="line"></span><br><span class="line">  # The amount of time that a write will wait before fsyncing.  A duration</span><br><span class="line">  # greater than 0 can be used to batch up multiple fsync calls.  This is useful for slower</span><br><span class="line">  # disks or when WAL write contention is seen.  A value of 0s fsyncs every write to the WAL.</span><br><span class="line">  # Values in the range of 0-100ms are recommended for non-SSD disks.</span><br><span class="line">  # wal-fsync-delay = &quot;0s&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  # The type of shard index to use for new shards.  The default is an in-memory index that is</span><br><span class="line">  # recreated at startup.  A value of &quot;tsi1&quot; will use a disk based index that supports higher</span><br><span class="line">  # cardinality datasets.</span><br><span class="line">  # index-version = &quot;inmem&quot;</span><br><span class="line"></span><br><span class="line">  # Trace logging provides more verbose output around the tsm engine. Turning</span><br><span class="line">  # this on can provide more useful output for debugging tsm engine issues.</span><br><span class="line">  # trace-logging-enabled = false</span><br><span class="line"></span><br><span class="line">  # Whether queries should be logged before execution. Very useful for troubleshooting, but will</span><br><span class="line">  # log any sensitive data contained within a query.</span><br><span class="line">    query-log-enabled = true</span><br><span class="line"></span><br><span class="line">  # Settings for the TSM engine</span><br><span class="line"></span><br><span class="line">  # CacheMaxMemorySize is the maximum size a shard&#x27;s cache can</span><br><span class="line">  # reach before it starts rejecting writes.</span><br><span class="line">  # Valid size suffixes are k, m, or g (case insensitive, 1024 = 1k).</span><br><span class="line">  # Vaues without a size suffix are in bytes.</span><br><span class="line">  # cache-max-memory-size = &quot;1g&quot;</span><br><span class="line"></span><br><span class="line">  # CacheSnapshotMemorySize is the size at which the engine will</span><br><span class="line">  # snapshot the cache and write it to a TSM file, freeing up memory</span><br><span class="line">  # Valid size suffixes are k, m, or g (case insensitive, 1024 = 1k).</span><br><span class="line">  # Values without a size suffix are in bytes.</span><br><span class="line">  # cache-snapshot-memory-size = &quot;25m&quot;</span><br><span class="line"></span><br><span class="line">  # CacheSnapshotWriteColdDuration is the length of time at</span><br><span class="line">  # which the engine will snapshot the cache and write it to</span><br><span class="line">  # a new TSM file if the shard hasn&#x27;t received writes or deletes</span><br><span class="line">  # cache-snapshot-write-cold-duration = &quot;10m&quot;</span><br><span class="line"></span><br><span class="line">  # CompactFullWriteColdDuration is the duration at which the engine</span><br><span class="line">  # will compact all TSM files in a shard if it hasn&#x27;t received a</span><br><span class="line">  # write or delete</span><br><span class="line">  # compact-full-write-cold-duration = &quot;4h&quot;</span><br><span class="line"></span><br><span class="line">  # The maximum number of concurrent full and level compactions that can run at one time.  A</span><br><span class="line">  # value of 0 results in 50% of runtime.GOMAXPROCS(0) used at runtime.  Any number greater</span><br><span class="line">  # than 0 limits compactions to that value.  This setting does not apply</span><br><span class="line">  # to cache snapshotting.</span><br><span class="line">  # max-concurrent-compactions = 0</span><br><span class="line"></span><br><span class="line">  # The maximum series allowed per database before writes are dropped.  This limit can prevent</span><br><span class="line">  # high cardinality issues at the database level.  This limit can be disabled by setting it to</span><br><span class="line">  # 0.</span><br><span class="line">  # max-series-per-database = 1000000</span><br><span class="line"></span><br><span class="line">  # The maximum number of tag values per tag that are allowed before writes are dropped.  This limit</span><br><span class="line">  # can prevent high cardinality tag values from being written to a measurement.  This limit can be</span><br><span class="line">  # disabled by setting it to 0.</span><br><span class="line">  # max-values-per-tag = 100000</span><br><span class="line"></span><br><span class="line">###</span><br><span class="line">### [coordinator]</span><br><span class="line">###</span><br><span class="line">### Controls the clustering service configuration.</span><br><span class="line">###</span><br><span class="line"></span><br><span class="line">[coordinator]</span><br><span class="line">  # The default time a write request will wait until a &quot;timeout&quot; error is returned to the caller.</span><br><span class="line">  # write-timeout = &quot;10s&quot;</span><br><span class="line"></span><br><span class="line">  # The maximum number of concurrent queries allowed to be executing at one time.  If a query is</span><br><span class="line">  # executed and exceeds this limit, an error is returned to the caller.  This limit can be disabled</span><br><span class="line">  # by setting it to 0.</span><br><span class="line">  # max-concurrent-queries = 0</span><br><span class="line"></span><br><span class="line">  # The maximum time a query will is allowed to execute before being killed by the system.  This limit</span><br><span class="line">  # can help prevent run away queries.  Setting the value to 0 disables the limit.</span><br><span class="line">  # query-timeout = &quot;0s&quot;</span><br><span class="line"></span><br><span class="line">  # The time threshold when a query will be logged as a slow query.  This limit can be set to help</span><br><span class="line">  # discover slow or resource intensive queries.  Setting the value to 0 disables the slow query logging.</span><br><span class="line">  # log-queries-after = &quot;0s&quot;</span><br><span class="line"></span><br><span class="line">  # The maximum number of points a SELECT can process.  A value of 0 will make</span><br><span class="line">  # the maximum point count unlimited.  This will only be checked every second so queries will not</span><br><span class="line">  # be aborted immediately when hitting the limit.</span><br><span class="line">  # max-select-point = 0</span><br><span class="line"></span><br><span class="line">  # The maximum number of series a SELECT can run.  A value of 0 will make the maximum series</span><br><span class="line">  # count unlimited.</span><br><span class="line">  # max-select-series = 0</span><br><span class="line"></span><br><span class="line">  # The maxium number of group by time bucket a SELECT can create.  A value of zero will max the maximum</span><br><span class="line">  # number of buckets unlimited.</span><br><span class="line">  # max-select-buckets = 0</span><br><span class="line"></span><br><span class="line">###</span><br><span class="line">### [retention]</span><br><span class="line">###</span><br><span class="line">### Controls the enforcement of retention policies for evicting old data.</span><br><span class="line">###</span><br><span class="line"></span><br><span class="line">[retention]</span><br><span class="line">  # Determines whether retention policy enforcement enabled.</span><br><span class="line">    enabled = true</span><br><span class="line"></span><br><span class="line">  # The interval of time when retention policy enforcement checks run.</span><br><span class="line">    check-interval = &quot;30m&quot;</span><br><span class="line"></span><br><span class="line">###</span><br><span class="line">### [shard-precreation]</span><br><span class="line">###</span><br><span class="line">### Controls the precreation of shards, so they are available before data arrives.</span><br><span class="line">### Only shards that, after creation, will have both a start- and end-time in the</span><br><span class="line">### future, will ever be created. Shards are never precreated that would be wholly</span><br><span class="line">### or partially in the past.</span><br><span class="line"></span><br><span class="line">[shard-precreation]</span><br><span class="line">  # Determines whether shard pre-creation service is enabled.</span><br><span class="line">    enabled = true</span><br><span class="line"></span><br><span class="line">  # The interval of time when the check to pre-create new shards runs.</span><br><span class="line">    check-interval = &quot;10m&quot;</span><br><span class="line"></span><br><span class="line">  # The default period ahead of the endtime of a shard group that its successor</span><br><span class="line">  # group is created.</span><br><span class="line">    advance-period = &quot;30m&quot;</span><br><span class="line"></span><br><span class="line">###</span><br><span class="line">### Controls the system self-monitoring, statistics and diagnostics.</span><br><span class="line">###</span><br><span class="line">### The internal database for monitoring data is created automatically if</span><br><span class="line">### if it does not already exist. The target retention within this database</span><br><span class="line">### is called &#x27;monitor&#x27; and is also created with a retention period of 7 days</span><br><span class="line">### and a replication factor of 1, if it does not exist. In all cases the</span><br><span class="line">### this retention policy is configured as the default for the database.</span><br><span class="line"></span><br><span class="line">[monitor]</span><br><span class="line">  # Whether to record statistics internally.</span><br><span class="line">    store-enabled = true</span><br><span class="line"></span><br><span class="line">  # The destination database for recorded statistics</span><br><span class="line">    store-database = &quot;_internal&quot;</span><br><span class="line"></span><br><span class="line">  # The interval at which to record statistics</span><br><span class="line">    store-interval = &quot;10s&quot;</span><br><span class="line"></span><br><span class="line">###</span><br><span class="line">### [http]</span><br><span class="line">###</span><br><span class="line">### Controls how the HTTP endpoints are configured. These are the primary</span><br><span class="line">### mechanism for getting data into and out of InfluxDB.</span><br><span class="line">###</span><br><span class="line"></span><br><span class="line">[http]</span><br><span class="line">  # Determines whether HTTP endpoint is enabled.</span><br><span class="line">    enabled = true</span><br><span class="line"></span><br><span class="line">  # The bind address used by the HTTP service.</span><br><span class="line">    bind-address = &quot;:8086&quot;</span><br><span class="line"></span><br><span class="line">  # Determines whether user authentication is enabled over HTTP/HTTPS.</span><br><span class="line">  # auth-enabled = false</span><br><span class="line"></span><br><span class="line">  # The default realm sent back when issuing a basic auth challenge.</span><br><span class="line">  # realm = &quot;InfluxDB&quot;</span><br><span class="line"></span><br><span class="line">  # Determines whether HTTP request logging is enabled.</span><br><span class="line">  # log-enabled = true</span><br><span class="line"></span><br><span class="line">  # Determines whether detailed write logging is enabled.</span><br><span class="line">  # write-tracing = false</span><br><span class="line"></span><br><span class="line">  # Determines whether the pprof endpoint is enabled.  This endpoint is used for</span><br><span class="line">  # troubleshooting and monitoring.</span><br><span class="line">  # pprof-enabled = true</span><br><span class="line"></span><br><span class="line">  # Determines whether HTTPS is enabled.</span><br><span class="line">  # https-enabled = false</span><br><span class="line"></span><br><span class="line">  # The SSL certificate to use when HTTPS is enabled.</span><br><span class="line">  # https-certificate = &quot;/etc/ssl/influxdb.pem&quot;</span><br><span class="line"></span><br><span class="line">  # Use a separate private key location.</span><br><span class="line">  # https-private-key = &quot;&quot;</span><br><span class="line"></span><br><span class="line">  # The JWT auth shared secret to validate requests using JSON web tokens.</span><br><span class="line">  # shared-secret = &quot;&quot;</span><br><span class="line"></span><br><span class="line">  # The default chunk size for result sets that should be chunked.</span><br><span class="line">  # max-row-limit = 0</span><br><span class="line"></span><br><span class="line">  # The maximum number of HTTP connections that may be open at once.  New connections that</span><br><span class="line">  # would exceed this limit are dropped.  Setting this value to 0 disables the limit.</span><br><span class="line">  # max-connection-limit = 0</span><br><span class="line"></span><br><span class="line">  # Enable http service over unix domain socket</span><br><span class="line">  # unix-socket-enabled = false</span><br><span class="line"></span><br><span class="line">  # The path of the unix domain socket.</span><br><span class="line">  # bind-socket = &quot;/var/run/influxdb.sock&quot;</span><br><span class="line"></span><br><span class="line">  # The maximum size of a client request body, in bytes. Setting this value to 0 disables the limit.</span><br><span class="line">  # max-body-size = 25000000</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">###</span><br><span class="line">### [ifql]</span><br><span class="line">###</span><br><span class="line">### Configures the ifql RPC API.</span><br><span class="line">###</span><br><span class="line"></span><br><span class="line">[ifql]</span><br><span class="line">  # Determines whether the RPC service is enabled.</span><br><span class="line">  # enabled = true</span><br><span class="line"></span><br><span class="line">  # Determines whether additional logging is enabled.</span><br><span class="line">  # log-enabled = true</span><br><span class="line"></span><br><span class="line">  # The bind address used by the ifql RPC service.</span><br><span class="line">  # bind-address = &quot;:8082&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">###</span><br><span class="line">### [subscriber]</span><br><span class="line">###</span><br><span class="line">### Controls the subscriptions, which can be used to fork a copy of all data</span><br><span class="line">### received by the InfluxDB host.</span><br><span class="line">###</span><br><span class="line"></span><br><span class="line">[subscriber]</span><br><span class="line">  # Determines whether the subscriber service is enabled.</span><br><span class="line">  # enabled = true</span><br><span class="line"></span><br><span class="line">  # The default timeout for HTTP writes to subscribers.</span><br><span class="line">  # http-timeout = &quot;30s&quot;</span><br><span class="line"></span><br><span class="line">  # Allows insecure HTTPS connections to subscribers.  This is useful when testing with self-</span><br><span class="line">  # signed certificates.</span><br><span class="line">  # insecure-skip-verify = false</span><br><span class="line"></span><br><span class="line">  # The path to the PEM encoded CA certs file. If the empty string, the default system certs will be used</span><br><span class="line">  # ca-certs = &quot;&quot;</span><br><span class="line"></span><br><span class="line">  # The number of writer goroutines processing the write channel.</span><br><span class="line">  # write-concurrency = 40</span><br><span class="line"></span><br><span class="line">  # The number of in-flight writes buffered in the write channel.</span><br><span class="line">  # write-buffer-size = 1000</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">###</span><br><span class="line">### [[graphite]]</span><br><span class="line">###</span><br><span class="line">### Controls one or many listeners for Graphite data.</span><br><span class="line">###</span><br><span class="line"></span><br><span class="line">[[graphite]]</span><br><span class="line">  # Determines whether the graphite endpoint is enabled.</span><br><span class="line">  # enabled = false</span><br><span class="line">  # database = &quot;graphite&quot;</span><br><span class="line">  # retention-policy = &quot;&quot;</span><br><span class="line">  # bind-address = &quot;:2003&quot;</span><br><span class="line">  # protocol = &quot;tcp&quot;</span><br><span class="line">  # consistency-level = &quot;one&quot;</span><br><span class="line"></span><br><span class="line">  # These next lines control how batching works. You should have this enabled</span><br><span class="line">  # otherwise you could get dropped metrics or poor performance. Batching</span><br><span class="line">  # will buffer points in memory if you have many coming in.</span><br><span class="line"></span><br><span class="line">  # Flush if this many points get buffered</span><br><span class="line">  # batch-size = 5000</span><br><span class="line"></span><br><span class="line">  # number of batches that may be pending in memory</span><br><span class="line">  # batch-pending = 10</span><br><span class="line"></span><br><span class="line">  # Flush at least this often even if we haven&#x27;t hit buffer limit</span><br><span class="line">  # batch-timeout = &quot;1s&quot;</span><br><span class="line"></span><br><span class="line">  # UDP Read buffer size, 0 means OS default. UDP listener will fail if set above OS max.</span><br><span class="line">  # udp-read-buffer = 0</span><br><span class="line"></span><br><span class="line">  ### This string joins multiple matching &#x27;measurement&#x27; values providing more control over the final measurement name.</span><br><span class="line">  # separator = &quot;.&quot;</span><br><span class="line"></span><br><span class="line">  ### Default tags that will be added to all metrics.  These can be overridden at the template level</span><br><span class="line">  ### or by tags extracted from metric</span><br><span class="line">  # tags = [&quot;region=us-east&quot;, &quot;zone=1c&quot;]</span><br><span class="line"></span><br><span class="line">  ### Each template line requires a template pattern.  It can have an optional</span><br><span class="line">  ### filter before the template and separated by spaces.  It can also have optional extra</span><br><span class="line">  ### tags following the template.  Multiple tags should be separated by commas and no spaces</span><br><span class="line">  ### similar to the line protocol format.  There can be only one default template.</span><br><span class="line">  # templates = [</span><br><span class="line">  #   &quot;*.app env.service.resource.measurement&quot;,</span><br><span class="line">  #   # Default template</span><br><span class="line">  #   &quot;server.*&quot;,</span><br><span class="line">  # ]</span><br><span class="line"></span><br><span class="line">###</span><br><span class="line">### [collectd]</span><br><span class="line">###</span><br><span class="line">### Controls one or many listeners for collectd data.</span><br><span class="line">###</span><br><span class="line"></span><br><span class="line">[[collectd]]</span><br><span class="line">  # enabled = false</span><br><span class="line">  # bind-address = &quot;:25826&quot;</span><br><span class="line">  # database = &quot;collectd&quot;</span><br><span class="line">  # retention-policy = &quot;&quot;</span><br><span class="line">  #</span><br><span class="line">  # The collectd service supports either scanning a directory for multiple types</span><br><span class="line">  # db files, or specifying a single db file.</span><br><span class="line">  # typesdb = &quot;/usr/local/share/collectd&quot;</span><br><span class="line">  #</span><br><span class="line">  # security-level = &quot;none&quot;</span><br><span class="line">  # auth-file = &quot;/etc/collectd/auth_file&quot;</span><br><span class="line"></span><br><span class="line">  # These next lines control how batching works. You should have this enabled</span><br><span class="line">  # otherwise you could get dropped metrics or poor performance. Batching</span><br><span class="line">  # will buffer points in memory if you have many coming in.</span><br><span class="line"></span><br><span class="line">  # Flush if this many points get buffered</span><br><span class="line">  # batch-size = 5000</span><br><span class="line"></span><br><span class="line">  # Number of batches that may be pending in memory</span><br><span class="line">  # batch-pending = 10</span><br><span class="line"></span><br><span class="line">  # Flush at least this often even if we haven&#x27;t hit buffer limit</span><br><span class="line">  # batch-timeout = &quot;10s&quot;</span><br><span class="line"></span><br><span class="line">  # UDP Read buffer size, 0 means OS default. UDP listener will fail if set above OS max.</span><br><span class="line">  # read-buffer = 0</span><br><span class="line"></span><br><span class="line">  # Multi-value plugins can be handled two ways.</span><br><span class="line">  # &quot;split&quot; will parse and store the multi-value plugin data into separate measurements</span><br><span class="line">  # &quot;join&quot; will parse and store the multi-value plugin as a single multi-value measurement.</span><br><span class="line">  # &quot;split&quot; is the default behavior for backward compatability with previous versions of influxdb.</span><br><span class="line">  # parse-multivalue-plugin = &quot;split&quot;</span><br><span class="line">###</span><br><span class="line">### [opentsdb]</span><br><span class="line">###</span><br><span class="line">### Controls one or many listeners for OpenTSDB data.</span><br><span class="line">###</span><br><span class="line"></span><br><span class="line">[[opentsdb]]</span><br><span class="line">  # enabled = false</span><br><span class="line">  # bind-address = &quot;:4242&quot;</span><br><span class="line">  # database = &quot;opentsdb&quot;</span><br><span class="line">  # retention-policy = &quot;&quot;</span><br><span class="line">  # consistency-level = &quot;one&quot;</span><br><span class="line">  # tls-enabled = false</span><br><span class="line">  # certificate= &quot;/etc/ssl/influxdb.pem&quot;</span><br><span class="line"></span><br><span class="line">  # Log an error for every malformed point.</span><br><span class="line">  # log-point-errors = true</span><br><span class="line"></span><br><span class="line">  # These next lines control how batching works. You should have this enabled</span><br><span class="line">  # otherwise you could get dropped metrics or poor performance. Only points</span><br><span class="line">  # metrics received over the telnet protocol undergo batching.</span><br><span class="line"></span><br><span class="line">  # Flush if this many points get buffered</span><br><span class="line">  # batch-size = 1000</span><br><span class="line"></span><br><span class="line">  # Number of batches that may be pending in memory</span><br><span class="line">  # batch-pending = 5</span><br><span class="line"></span><br><span class="line">  # Flush at least this often even if we haven&#x27;t hit buffer limit</span><br><span class="line">  # batch-timeout = &quot;1s&quot;</span><br><span class="line"></span><br><span class="line">###</span><br><span class="line">### [[udp]]</span><br><span class="line">###</span><br><span class="line">### Controls the listeners for InfluxDB line protocol data via UDP.</span><br><span class="line">###</span><br><span class="line"></span><br><span class="line">[[udp]]</span><br><span class="line">  # enabled = false</span><br><span class="line">  # bind-address = &quot;:8089&quot;</span><br><span class="line">  # database = &quot;udp&quot;</span><br><span class="line">  # retention-policy = &quot;&quot;</span><br><span class="line"></span><br><span class="line">  # These next lines control how batching works. You should have this enabled</span><br><span class="line">  # otherwise you could get dropped metrics or poor performance. Batching</span><br><span class="line">  # will buffer points in memory if you have many coming in.</span><br><span class="line"></span><br><span class="line">  # Flush if this many points get buffered</span><br><span class="line">  # batch-size = 5000</span><br><span class="line"></span><br><span class="line">  # Number of batches that may be pending in memory</span><br><span class="line">  # batch-pending = 10</span><br><span class="line"></span><br><span class="line">  # Will flush at least this often even if we haven&#x27;t hit buffer limit</span><br><span class="line">  # batch-timeout = &quot;1s&quot;</span><br><span class="line"></span><br><span class="line">  # UDP Read buffer size, 0 means OS default. UDP listener will fail if set above OS max.</span><br><span class="line">  # read-buffer = 0</span><br><span class="line"></span><br><span class="line">###</span><br><span class="line">### [continuous_queries]</span><br><span class="line">###</span><br><span class="line">### Controls how continuous queries are run within InfluxDB.</span><br><span class="line">###</span><br><span class="line"></span><br><span class="line">[continuous_queries]</span><br><span class="line">  # Determines whether the continuous query service is enabled.</span><br><span class="line">  # enabled = true</span><br><span class="line"></span><br><span class="line">  # Controls whether queries are logged when executed by the CQ service.</span><br><span class="line">  # log-enabled = true</span><br><span class="line"></span><br><span class="line">  # Controls whether queries are logged to the self-monitoring data store.</span><br><span class="line">  # query-stats-enabled = false</span><br><span class="line"></span><br><span class="line">  # interval for how often continuous queries will be checked if they need to run</span><br><span class="line">  # run-interval = &quot;1s&quot;</span><br></pre></td></tr></table></figure>

<p>四、使配置生效并打开数据库连接，双击influxd.exe就好，然后双击influx.exe进行操作，网上有操作教程，注意操作数据库时不能关闭influxd.exe，我不知道为什么总有这么个提示：There was an error writing history file: open : The system cannot find the file specified.不过好像没啥影响</p>
<p>五、要使用web管理需要下载Chronograf，<a href="https://portal.influxdata.com/downloads">https://portal.influxdata.com/downloads</a>第三个就是，下载完直接解压，双击exe程序，在浏览器输入<a href="http://localhost:8888/">http://localhost:8888/</a>，一开始登录要账户密码，我都用admin就进去了</p>
<p>这个是查看建立的数据库  </p>
<img src="/2019/08/03/%E6%95%B0%E6%8D%AE%E5%BA%93/InfluxDB/InfluxDB%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/IMG-20250704185714467.png" class="">

<p>这个是查看数据库的数据  </p>
<img src="/2019/08/03/%E6%95%B0%E6%8D%AE%E5%BA%93/InfluxDB/InfluxDB%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/IMG-20250704185714467.png" class="">

<p>没了</p>
]]></content>
      <categories>
        <category>数据库</category>
        <category>InfluxDB</category>
      </categories>
      <tags>
        <tag>时序数据库</tag>
        <tag>InfluxDB</tag>
      </tags>
  </entry>
  <entry>
    <title>时序数据库InfluxDB使用详解</title>
    <url>/2019/07/20/%E6%95%B0%E6%8D%AE%E5%BA%93/InfluxDB/%E6%97%B6%E5%BA%8F%E6%95%B0%E6%8D%AE%E5%BA%93InfluxDB%E4%BD%BF%E7%94%A8%E8%AF%A6%E8%A7%A3/</url>
    <content><![CDATA[<blockquote>
<p><a href="https://link.jianshu.com/?t=https://docs.influxdata.com/influxdb/v1.3/">InfluxDB</a>是一个开源的时序数据库，使用GO语言开发，特别适合用于处理和分析资源监控数据这种时序相关数据。而InfluxDB自带的各种特殊函数如求标准差，随机取样数据，统计数据变化比等，使数据统计和实时分析变得十分方便。在我们的容器资源监控系统中，就采用了InfluxDB存储cadvisor的监控数据。本文对InfluxDB的基本概念和一些特色功能做一个详细介绍，内容主要是翻译整理自官网文档，如有错漏，请指正。</p>
</blockquote>
<p>这里说一下使用docker容器运行influxdb的步骤，物理机安装请参照<a href="https://link.jianshu.com/?t=https://docs.influxdata.com/influxdb/v1.3/introduction/installation/">官方文档</a>。拉取镜像文件后运行即可，当前最新版本是1.3.5。启动容器时设置挂载的数据目录和开放端口。InfluxDB的操作语法InfluxQL与SQL基本一致，也提供了一个类似mysql-client的名为influx的CLI。InfluxDB本身是支持分布式部署多副本存储的，本文介绍都是针对的单节点单副本。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">f216e9be15bff545befecb30d1d275552026216a939cc20c042b17419e3bde31</span><br><span class="line"></span><br><span class="line">root@f216e9be15bf:/</span><br><span class="line">Connected to http:</span><br><span class="line">InfluxDB shell version: 1.3.5</span><br><span class="line">&gt; create database cadvisor  </span><br><span class="line">&gt; show databases           </span><br><span class="line">name: databases</span><br><span class="line">name</span><br><span class="line">----</span><br><span class="line">_internal</span><br><span class="line">cadvisor</span><br><span class="line">&gt; CREATE USER testuser WITH PASSWORD &#x27;testpwd&#x27; </span><br><span class="line">&gt; GRANT ALL PRIVILEGES ON cadvisor TO testuser </span><br><span class="line">&gt; CREATE RETENTION POLICY &quot;cadvisor_retention&quot; ON &quot;cadvisor&quot; DURATION 30d REPLICATION 1 DEFAULT </span><br></pre></td></tr></table></figure>

<p>influxdb里面有一些重要概念：database，timestamp，field key， field value， field set，tag key，tag value，tag set，measurement， retention policy ，series，point。结合下面的例子数据来说明这几个概念：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">name: census</span><br><span class="line">-————————————</span><br><span class="line">time                     butterflies     honeybees     location   scientist</span><br><span class="line">2015-08-18T00:00:00Z      12                23           1         langstroth</span><br><span class="line">2015-08-18T00:00:00Z      1                 30           1         perpetua</span><br><span class="line">2015-08-18T00:06:00Z      11                28           1         langstroth</span><br><span class="line">2015-08-18T00:06:00Z      3                 28           1         perpetua</span><br><span class="line">2015-08-18T05:54:00Z      2                 11           2         langstroth</span><br><span class="line">2015-08-18T06:00:00Z      1                 10           2         langstroth</span><br><span class="line">2015-08-18T06:06:00Z      8                 23           2         perpetua</span><br><span class="line">2015-08-18T06:12:00Z      7                 22           2         perpetua</span><br></pre></td></tr></table></figure>

<h3 id="timestamp"><a href="#timestamp" class="headerlink" title="timestamp"></a>timestamp</h3><p>既然是时间序列数据库，influxdb的数据都有一列名为time的列，里面存储UTC时间戳。</p>
<h3 id="field-key，field-value，field-set"><a href="#field-key，field-value，field-set" class="headerlink" title="field key，field value，field set"></a>field key，field value，field set</h3><p>butterflies和honeybees两列数据称为字段(fields)，influxdb的字段由field key和field value组成。其中butterflies和honeybees为field key，它们为string类型，用于存储元数据。</p>
<p>而butterflies这一列的数据12-7为butterflies的field value，同理，honeybees这一列的23-22为honeybees的field value。field value可以为string，float，integer或boolean类型。field value通常都是与时间关联的。</p>
<p>field key和field value对组成的集合称之为field set。如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">butterflies = 12 honeybees = 23</span><br><span class="line">butterflies = 1 honeybees = 30</span><br><span class="line">butterflies = 11 honeybees = 28</span><br><span class="line">butterflies = 3 honeybees = 28</span><br><span class="line">butterflies = 2 honeybees = 11</span><br><span class="line">butterflies = 1 honeybees = 10</span><br><span class="line">butterflies = 8 honeybees = 23</span><br><span class="line">butterflies = 7 honeybees = 22</span><br></pre></td></tr></table></figure>

<p><strong>在influxdb中，字段必须存在。注意，字段是没有索引的。如果使用字段作为查询条件，会扫描符合查询条件的所有字段值，性能不及tag。类比一下，fields相当于SQL的没有索引的列。</strong></p>
<h3 id="tag-key，tag-value，tag-set"><a href="#tag-key，tag-value，tag-set" class="headerlink" title="tag key，tag value，tag set"></a>tag key，tag value，tag set</h3><p>location和scientist这两列称为标签(tags)，标签由tag key和tag value组成。location这个tag key有两个tag value：1和2，scientist有两个tag value：langstroth和perpetua。tag key和tag value对组成了tag set，示例中的tag set如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">location = 1, scientist = langstroth</span><br><span class="line">location = 2, scientist = langstroth</span><br><span class="line">location = 1, scientist = perpetua</span><br><span class="line">location = 2, scientist = perpetua</span><br></pre></td></tr></table></figure>

<p><strong>tags是可选的，但是强烈建议你用上它，因为tag是有索引的，tags相当于SQL中的有索引的列。tag value只能是string类型</strong> 如果你的常用场景是根据butterflies和honeybees来查询，那么你可以将这两个列设置为tag，而其他两列设置为field，tag和field依据具体查询需求来定。</p>
<h3 id="measurement"><a href="#measurement" class="headerlink" title="measurement"></a>measurement</h3><p>measurement是fields，tags以及time列的容器，measurement的名字用于描述存储在其中的字段数据，类似mysql的表名。如上面例子中的measurement为census。measurement相当于SQL中的表，本文中我在部分地方会用表来指代measurement。</p>
<h3 id="retention-policy"><a href="#retention-policy" class="headerlink" title="retention policy"></a>retention policy</h3><p>retention policy指数据保留策略，示例数据中的retention policy为默认的autogen。它表示数据一直保留永不过期，副本数量为1。你也可以指定数据的保留时间，如30天。</p>
<h3 id="series"><a href="#series" class="headerlink" title="series"></a>series</h3><p>series是共享同一个retention policy，measurement以及tag set的数据集合。示例中数据有4个series，如下:</p>
<p>Arbitrary series number</p>
<p>Retention policy</p>
<p>Measurement</p>
<p>Tag set</p>
<p>series 1</p>
<p>autogen</p>
<p>census</p>
<p>location &#x3D; 1,scientist &#x3D; langstroth</p>
<p>series 2</p>
<p>autogen</p>
<p>census</p>
<p>location &#x3D; 2,scientist &#x3D; langstroth</p>
<p>series 3</p>
<p>autogen</p>
<p>census</p>
<p>location &#x3D; 1,scientist &#x3D; perpetua</p>
<p>series 4</p>
<p>autogen</p>
<p>census</p>
<p>location &#x3D; 2,scientist &#x3D; perpetua</p>
<h3 id="point"><a href="#point" class="headerlink" title="point"></a>point</h3><p>point则是同一个series中具有相同时间的field set，points相当于SQL中的数据行。如下面就是一个point：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">name: census</span><br><span class="line">-----------------</span><br><span class="line">time                  butterflies    honeybees   location    scientist</span><br><span class="line">2015-08-18T00:00:00Z       1            30           1        perpetua</span><br></pre></td></tr></table></figure>

<h3 id="database"><a href="#database" class="headerlink" title="database"></a>database</h3><p>上面提到的结构都存储在数据库中，示例的数据库为my_database。一个数据库可以有多个measurement，retention policy， continuous queries以及user。influxdb是一个无模式的数据库，可以很容易的添加新的measurement，tags，fields等。而它的操作却和传统的数据库一样，可以使用类SQL语言查询和修改数据。</p>
<p>influxdb不是一个完整的CRUD数据库，它更像是一个CR-ud数据库。它优先考虑的是增加和读取数据而不是更新和删除数据的性能，而且它阻止了某些更新和删除行为使得创建和读取数据更加高效。</p>
<p>influxdb函数分为聚合函数，选择函数，转换函数，预测函数等。除了与普通数据库一样提供了基本操作函数外，还提供了一些特色函数以方便数据统计计算，下面会一一介绍其中一些常用的特色函数。</p>
<ul>
<li>聚合函数：<code>FILL()</code>, <code>INTEGRAL()</code>，<code>SPREAD()</code>， <code>STDDEV()</code>，<code>MEAN()</code>, <code>MEDIAN()</code>等。</li>
<li>选择函数: <code>SAMPLE()</code>, <code>PERCENTILE()</code>, <code>FIRST()</code>, <code>LAST()</code>, <code>TOP()</code>, <code>BOTTOM()</code>等。</li>
<li>转换函数: <code>DERIVATIVE()</code>, <code>DIFFERENCE()</code>等。</li>
<li>预测函数：<code>HOLT_WINTERS()</code>。</li>
</ul>
<p>先从官网导入测试数据（注：这里测试用的版本是1.3.1，最新版本是1.3.5）:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ curl https://s3.amazonaws.com/noaa.water-database/NOAA_data.txt -o NOAA_data.txt</span><br><span class="line">$ influx -import -path=NOAA_data.txt -precision=s -database=NOAA_water_database</span><br><span class="line">$ influx -precision rfc3339 -database NOAA_water_database</span><br><span class="line">Connected to http://localhost:8086 version 1.3.1</span><br><span class="line">InfluxDB shell 1.3.1</span><br><span class="line">&gt; show measurements</span><br><span class="line">name: measurements</span><br><span class="line">name</span><br><span class="line">----</span><br><span class="line">average_temperature</span><br><span class="line">distincts</span><br><span class="line">h2o_feet</span><br><span class="line">h2o_pH</span><br><span class="line">h2o_quality</span><br><span class="line">h2o_temperature</span><br><span class="line"></span><br><span class="line">&gt; show series from h2o_feet;</span><br><span class="line">key</span><br><span class="line">---</span><br><span class="line">h2o_feet,location=coyote_creek</span><br><span class="line">h2o_feet,location=santa_monica</span><br></pre></td></tr></table></figure>

<p>下面的例子都以官方示例数据库来测试，这里只用部分数据以方便观察。measurement为<code>h2o_feet</code>，tag key为<code>location</code>，field key有<code>level description</code>和<code>water_level</code>两个。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt; SELECT * FROM &quot;h2o_feet&quot; WHERE time &gt;= &#x27;2015-08-17T23:48:00Z&#x27; AND time &lt;= &#x27;2015-08-18T00:30:00Z&#x27;</span><br><span class="line">name: h2o_feet</span><br><span class="line">time                 level description    location     water_level</span><br><span class="line">----                 -----------------    --------     -----------</span><br><span class="line">2015-08-18T00:00:00Z between 6 and 9 feet coyote_creek 8.12</span><br><span class="line">2015-08-18T00:00:00Z below 3 feet         santa_monica 2.064</span><br><span class="line">2015-08-18T00:06:00Z between 6 and 9 feet coyote_creek 8.005</span><br><span class="line">2015-08-18T00:06:00Z below 3 feet         santa_monica 2.116</span><br><span class="line">2015-08-18T00:12:00Z between 6 and 9 feet coyote_creek 7.887</span><br><span class="line">2015-08-18T00:12:00Z below 3 feet         santa_monica 2.028</span><br><span class="line">2015-08-18T00:18:00Z between 6 and 9 feet coyote_creek 7.762</span><br><span class="line">2015-08-18T00:18:00Z below 3 feet         santa_monica 2.126</span><br><span class="line">2015-08-18T00:24:00Z between 6 and 9 feet coyote_creek 7.635</span><br><span class="line">2015-08-18T00:24:00Z below 3 feet         santa_monica 2.041</span><br><span class="line">2015-08-18T00:30:00Z between 6 and 9 feet coyote_creek 7.5</span><br><span class="line">2015-08-18T00:30:00Z below 3 feet         santa_monica 2.051</span><br></pre></td></tr></table></figure>

<h3 id="GROUP-BY，FILL"><a href="#GROUP-BY，FILL" class="headerlink" title="GROUP BY，FILL()"></a>GROUP BY，FILL()</h3><p>如下语句中<code>GROUP BY time(12m),*</code> 表示以每12分钟和tag(location)分组(如果是<code>GROUP BY time(12m)</code>则表示仅每12分钟分组，<strong>GROUP BY 参数只能是time和tag</strong>)。然后fill(200)表示如果这个时间段没有数据，以200填充，mean(field_key)求该范围内数据的平均值(注意：这是依据series来计算。其他还有SUM求和，MEDIAN求中位数)。LIMIT 7表示限制返回的point(记录数)最多为7条，而SLIMIT 1则是限制返回的series为1个。</p>
<p>注意这里的时间区间，起始时间为整点前包含这个区间第一个12m的时间，比如这里为 <code>2015-08-17T:23:48:00Z</code>，第一条为 <code>2015-08-17T23:48:00Z &lt;= t &lt; 2015-08-18T00:00:00Z</code>这个区间的<code>location=coyote_creek</code>的<code>water_level</code>的平均值，这里没有数据，于是填充的200。第二条为 <code>2015-08-18T00:00:00Z &lt;= t &lt; 2015-08-18T00:12:00Z</code>区间的<code>location=coyote_creek</code>的<code>water_level</code>平均值，这里为 <code>（8.12+8.005）/ 2 = 8.0625</code>，其他以此类推。</p>
<p>而<code>GROUP BY time(10m)</code>则表示以10分钟分组，起始时间为包含这个区间的第一个10m的时间，即 <code>2015-08-17T23:40:00Z</code>。默认返回的是第一个series，如果要计算另外那个series，可以在SQL语句后面加上 <code>SOFFSET 1</code>。</p>
<p>那如果时间小于数据本身采集的时间间隔呢，比如<code>GROUP BY time(10s)</code>呢？这样的话，就会按10s取一个点，没有数值的为空或者FILL填充，对应时间点有数据则保持不变。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## GROUP BY time(12m)</span><br><span class="line">&gt; SELECT mean(&quot;water_level&quot;) FROM &quot;h2o_feet&quot; WHERE time &gt;= &#x27;2015-08-17T23:48:00Z&#x27; AND time &lt;= &#x27;2015-08-18T00:30:00Z&#x27; GROUP BY time(12m),* fill(200) LIMIT 7 SLIMIT 1</span><br><span class="line">name: h2o_feet</span><br><span class="line">tags: location=coyote_creek</span><br><span class="line">time                 mean</span><br><span class="line">----                 ----</span><br><span class="line">2015-08-17T23:48:00Z 200</span><br><span class="line">2015-08-18T00:00:00Z 8.0625</span><br><span class="line">2015-08-18T00:12:00Z 7.8245</span><br><span class="line">2015-08-18T00:24:00Z 7.5675</span><br><span class="line"></span><br><span class="line">## GROUP BY time(10m)，SOFFSET设置为1</span><br><span class="line">&gt; SELECT mean(&quot;water_level&quot;) FROM &quot;h2o_feet&quot; WHERE time &gt;= &#x27;2015-08-17T23:48:00Z&#x27; AND time &lt;= &#x27;2015-08-18T00:30:00Z&#x27; GROUP BY time(10m),* fill(200) LIMIT 7 SLIMIT 1 SOFFSET 1</span><br><span class="line">name: h2o_feet</span><br><span class="line">tags: location=santa_monica</span><br><span class="line">time                 mean</span><br><span class="line">----                 ----</span><br><span class="line">2015-08-17T23:40:00Z 200</span><br><span class="line">2015-08-17T23:50:00Z 200</span><br><span class="line">2015-08-18T00:00:00Z 2.09</span><br><span class="line">2015-08-18T00:10:00Z 2.077</span><br><span class="line">2015-08-18T00:20:00Z 2.041</span><br><span class="line">2015-08-18T00:30:00Z 2.051</span><br></pre></td></tr></table></figure>

<h3 id="INTEGRAL-field-key-unit"><a href="#INTEGRAL-field-key-unit" class="headerlink" title="INTEGRAL(field_key, unit)"></a>INTEGRAL(field_key, unit)</h3><p>计算数值字段值覆盖的曲面的面积值并得到面积之和。测试数据如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt; SELECT &quot;water_level&quot; FROM &quot;h2o_feet&quot; WHERE &quot;location&quot; = &#x27;santa_monica&#x27; AND time &gt;= &#x27;2015-08-18T00:00:00Z&#x27; AND time &lt;= &#x27;2015-08-18T00:30:00Z&#x27;</span><br><span class="line"></span><br><span class="line">name: h2o_feet</span><br><span class="line">time                   water_level</span><br><span class="line">----                   -----------</span><br><span class="line">2015-08-18T00:00:00Z   2.064</span><br><span class="line">2015-08-18T00:06:00Z   2.116</span><br><span class="line">2015-08-18T00:12:00Z   2.028</span><br><span class="line">2015-08-18T00:18:00Z   2.126</span><br><span class="line">2015-08-18T00:24:00Z   2.041</span><br><span class="line">2015-08-18T00:30:00Z   2.051</span><br></pre></td></tr></table></figure>

<p>使用INTERGRAL计算面积。注意，这个面积就是这些点连接起来后与时间围成的不规则图形的面积，注意unit默认是以1秒计算，所以下面语句计算结果为<code>3732.66=2.028*1800+分割出来的梯形和三角形面积</code>。如果unit改为1分，则结果为<code>3732.66/60 = 62.211</code>。unit为2分，则结果为<code>3732.66/120 = 31.1055</code>。以此类推。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># unit为默认的1秒</span><br><span class="line">&gt; SELECT INTEGRAL(&quot;water_level&quot;) FROM &quot;h2o_feet&quot; WHERE &quot;location&quot; = &#x27;santa_monica&#x27; AND time &gt;= &#x27;2015-08-18T00:00:00Z&#x27; AND time &lt;= &#x27;2015-08-18T00:30:00Z&#x27;</span><br><span class="line">name: h2o_feet</span><br><span class="line">time                 integral</span><br><span class="line">----                 --------</span><br><span class="line">1970-01-01T00:00:00Z 3732.66</span><br><span class="line"></span><br><span class="line"># unit为1分</span><br><span class="line">&gt; SELECT INTEGRAL(&quot;water_level&quot;, 1m) FROM &quot;h2o_feet&quot; WHERE &quot;location&quot; = &#x27;santa_monica&#x27; AND time &gt;= &#x27;2015-08-18T00:00:00Z&#x27; AND time &lt;= &#x27;2015-08-18T00:30:00Z&#x27;</span><br><span class="line">name: h2o_feet</span><br><span class="line">time                 integral</span><br><span class="line">----                 --------</span><br><span class="line">1970-01-01T00:00:00Z 62.211</span><br></pre></td></tr></table></figure>

<h3 id="SPREAD-field-key"><a href="#SPREAD-field-key" class="headerlink" title="SPREAD(field_key)"></a>SPREAD(field_key)</h3><p>计算数值字段的最大值和最小值的差值。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt; SELECT SPREAD(&quot;water_level&quot;) FROM &quot;h2o_feet&quot; WHERE time &gt;= &#x27;2015-08-17T23:48:00Z&#x27; AND time &lt;= &#x27;2015-08-18T00:30:00Z&#x27; GROUP BY time(12m),* fill(18) LIMIT 3 SLIMIT 1 SOFFSET 1</span><br><span class="line">name: h2o_feet</span><br><span class="line">tags: location=santa_monica</span><br><span class="line">time                 spread</span><br><span class="line">----                 ------</span><br><span class="line">2015-08-17T23:48:00Z 18</span><br><span class="line">2015-08-18T00:00:00Z 0.052000000000000046</span><br><span class="line">2015-08-18T00:12:00Z 0.09799999999999986</span><br></pre></td></tr></table></figure>

<h3 id="STDDEV-field-key"><a href="#STDDEV-field-key" class="headerlink" title="STDDEV(field_key)"></a>STDDEV(field_key)</h3><p>计算字段的标准差。influxdb用的是贝塞尔修正的标准差计算公式 ，如下：</p>
<ul>
<li>mean&#x3D;(v1+v2+…+vn)&#x2F;n;</li>
<li>stddev &#x3D; math.sqrt(<br>((v1-mean)2 + (v2-mean)2 + …+(vn-mean)2)&#x2F;(n-1)<br>)</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt; SELECT STDDEV(&quot;water_level&quot;) FROM &quot;h2o_feet&quot; WHERE time &gt;= &#x27;2015-08-17T23:48:00Z&#x27; AND time &lt;= &#x27;2015-08-18T00:30:00Z&#x27; GROUP BY time(12m),* fill(18) SLIMIT 1;</span><br><span class="line">name: h2o_feet</span><br><span class="line">tags: location=coyote_creek</span><br><span class="line">time                 stddev</span><br><span class="line">----                 ------</span><br><span class="line">2015-08-17T23:48:00Z 18</span><br><span class="line">2015-08-18T00:00:00Z 0.08131727983645186</span><br><span class="line">2015-08-18T00:12:00Z 0.08838834764831845</span><br><span class="line">2015-08-18T00:24:00Z 0.09545941546018377</span><br></pre></td></tr></table></figure>

<h3 id="PERCENTILE-field-key-N"><a href="#PERCENTILE-field-key-N" class="headerlink" title="PERCENTILE(field_key, N)"></a>PERCENTILE(field_key, N)</h3><p>选取某个字段中大于N%的这个字段值。</p>
<p>如果一共有4条记录，N为10，则10%*4&#x3D;0.4，四舍五入为0，则查询结果为空。N为20，则 20% * 4 &#x3D; 0.8，四舍五入为1，选取的是4个数中最小的数。如果N为40，40% * 4 &#x3D; 1.6，四舍五入为2，则选取的是4个数中第二小的数。由此可以看出N&#x3D;100时，就跟<code>MAX(field_key)</code>是一样的，而当N&#x3D;50时，与<code>MEDIAN(field_key)</code>在字段值为奇数个时是一样的。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt; SELECT PERCENTILE(&quot;water_level&quot;,20) FROM &quot;h2o_feet&quot; WHERE time &gt;= &#x27;2015-08-17T23:48:00Z&#x27; AND time &lt;= &#x27;2015-08-18T00:30:00Z&#x27; GROUP BY time(12m)</span><br><span class="line">name: h2o_feet</span><br><span class="line">time                 percentile</span><br><span class="line">----                 ----------</span><br><span class="line">2015-08-17T23:48:00Z </span><br><span class="line">2015-08-18T00:00:00Z 2.064</span><br><span class="line">2015-08-18T00:12:00Z 2.028</span><br><span class="line">2015-08-18T00:24:00Z 2.041</span><br><span class="line"></span><br><span class="line">&gt; SELECT PERCENTILE(&quot;water_level&quot;,40) FROM &quot;h2o_feet&quot; WHERE time &gt;= &#x27;2015-08-17T23:48:00Z&#x27; AND time &lt;= &#x27;2015-08-18T00:30:00Z&#x27; GROUP BY time(12m)</span><br><span class="line">name: h2o_feet</span><br><span class="line">time                 percentile</span><br><span class="line">----                 ----------</span><br><span class="line">2015-08-17T23:48:00Z </span><br><span class="line">2015-08-18T00:00:00Z 2.116</span><br><span class="line">2015-08-18T00:12:00Z 2.126</span><br><span class="line">2015-08-18T00:24:00Z 2.051</span><br></pre></td></tr></table></figure>

<h3 id="SAMPLE-field-key-N"><a href="#SAMPLE-field-key-N" class="headerlink" title="SAMPLE(field_key, N)"></a>SAMPLE(field_key, N)</h3><p>随机返回field key的N个值。如果语句中有<code>GROUP BY time()</code>，则每组数据随机返回N个值。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt; SELECT SAMPLE(&quot;water_level&quot;,2) FROM &quot;h2o_feet&quot; WHERE time &gt;= &#x27;2015-08-17T23:48:00Z&#x27; AND time &lt;= &#x27;2015-08-18T00:30:00Z&#x27;;</span><br><span class="line">name: h2o_feet</span><br><span class="line">time                 sample</span><br><span class="line">----                 ------</span><br><span class="line">2015-08-18T00:00:00Z 2.064</span><br><span class="line">2015-08-18T00:12:00Z 2.028</span><br><span class="line"></span><br><span class="line">&gt; SELECT SAMPLE(&quot;water_level&quot;,2) FROM &quot;h2o_feet&quot; WHERE time &gt;= &#x27;2015-08-17T23:48:00Z&#x27; AND time &lt;= &#x27;2015-08-18T00:30:00Z&#x27; GROUP BY time(12m);</span><br><span class="line">name: h2o_feet</span><br><span class="line">time                 sample</span><br><span class="line">----                 ------</span><br><span class="line">2015-08-18T00:06:00Z 2.116</span><br><span class="line">2015-08-18T00:06:00Z 8.005</span><br><span class="line">2015-08-18T00:12:00Z 7.887</span><br><span class="line">2015-08-18T00:18:00Z 7.762</span><br><span class="line">2015-08-18T00:24:00Z 7.635</span><br><span class="line">2015-08-18T00:30:00Z 2.051</span><br></pre></td></tr></table></figure>

<h3 id="CUMULATIVE-SUM-field-key"><a href="#CUMULATIVE-SUM-field-key" class="headerlink" title="CUMULATIVE_SUM(field_key)"></a>CUMULATIVE_SUM(field_key)</h3><p>计算字段值的递增和。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt; SELECT CUMULATIVE_SUM(&quot;water_level&quot;) FROM &quot;h2o_feet&quot; WHERE time &gt;= &#x27;2015-08-17T23:48:00Z&#x27; AND time &lt;= &#x27;2015-08-18T00:30:00Z&#x27;;</span><br><span class="line">name: h2o_feet</span><br><span class="line">time                 cumulative_sum</span><br><span class="line">----                 --------------</span><br><span class="line">2015-08-18T00:00:00Z 8.12</span><br><span class="line">2015-08-18T00:00:00Z 10.184</span><br><span class="line">2015-08-18T00:06:00Z 18.189</span><br><span class="line">2015-08-18T00:06:00Z 20.305</span><br><span class="line">2015-08-18T00:12:00Z 28.192</span><br><span class="line">2015-08-18T00:12:00Z 30.22</span><br><span class="line">2015-08-18T00:18:00Z 37.982</span><br><span class="line">2015-08-18T00:18:00Z 40.108</span><br><span class="line">2015-08-18T00:24:00Z 47.742999999999995</span><br><span class="line">2015-08-18T00:24:00Z 49.78399999999999</span><br><span class="line">2015-08-18T00:30:00Z 57.28399999999999</span><br><span class="line">2015-08-18T00:30:00Z 59.334999999999994</span><br></pre></td></tr></table></figure>

<h3 id="DERIVATIVE-field-key-unit-和-NON-NEGATIVE-DERIVATIVE-field-key-unit"><a href="#DERIVATIVE-field-key-unit-和-NON-NEGATIVE-DERIVATIVE-field-key-unit" class="headerlink" title="DERIVATIVE(field_key, unit) 和 NON_NEGATIVE_DERIVATIVE(field_key, unit)"></a>DERIVATIVE(field_key, unit) 和 NON_NEGATIVE_DERIVATIVE(field_key, unit)</h3><p>计算字段值的变化比。unit默认为1s，即计算的是1秒内的变化比。</p>
<p>如下面的第一个数据计算方法是 <code>(2.116-2.064)/(6*60) = 0.00014..</code>，其他计算方式同理。虽然原始数据是6m收集一次，但是这里的变化比默认是按秒来计算的。如果要按6m计算，则设置unit为6m即可。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt; SELECT DERIVATIVE(&quot;water_level&quot;) FROM &quot;h2o_feet&quot; WHERE &quot;location&quot; = &#x27;santa_monica&#x27; AND time &gt;= &#x27;2015-08-18T00:00:00Z&#x27; AND time &lt;= &#x27;2015-08-18T00:30:00Z&#x27;</span><br><span class="line">name: h2o_feet</span><br><span class="line">time                 derivative</span><br><span class="line">----                 ----------</span><br><span class="line">2015-08-18T00:06:00Z 0.00014444444444444457</span><br><span class="line">2015-08-18T00:12:00Z -0.00024444444444444465</span><br><span class="line">2015-08-18T00:18:00Z 0.0002722222222222218</span><br><span class="line">2015-08-18T00:24:00Z -0.000236111111111111</span><br><span class="line">2015-08-18T00:30:00Z 0.00002777777777777842</span><br><span class="line"></span><br><span class="line">&gt; SELECT DERIVATIVE(&quot;water_level&quot;, 6m) FROM &quot;h2o_feet&quot; WHERE &quot;location&quot; = &#x27;santa_monica&#x27; AND time &gt;= &#x27;2015-08-18T00:00:00Z&#x27; AND time &lt;= &#x27;2015-08-18T00:30:00Z&#x27;</span><br><span class="line">name: h2o_feet</span><br><span class="line">time                 derivative</span><br><span class="line">----                 ----------</span><br><span class="line">2015-08-18T00:06:00Z 0.052000000000000046</span><br><span class="line">2015-08-18T00:12:00Z -0.08800000000000008</span><br><span class="line">2015-08-18T00:18:00Z 0.09799999999999986</span><br><span class="line">2015-08-18T00:24:00Z -0.08499999999999996</span><br><span class="line">2015-08-18T00:30:00Z 0.010000000000000231</span><br></pre></td></tr></table></figure>

<p>而DERIVATIVE结合GROUP BY time，以及mean可以构造更加复杂的查询，如下所示:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt; SELECT DERIVATIVE(mean(&quot;water_level&quot;), 6m) FROM &quot;h2o_feet&quot; WHERE time &gt;= &#x27;2015-08-18T00:00:00Z&#x27; AND time &lt;= &#x27;2015-08-18T00:30:00Z&#x27; group by time(12m), *</span><br><span class="line">name: h2o_feet</span><br><span class="line">tags: location=coyote_creek</span><br><span class="line">time                 derivative</span><br><span class="line">----                 ----------</span><br><span class="line">2015-08-18T00:12:00Z -0.11900000000000022</span><br><span class="line">2015-08-18T00:24:00Z -0.12849999999999984</span><br><span class="line"></span><br><span class="line">name: h2o_feet</span><br><span class="line">tags: location=santa_monica</span><br><span class="line">time                 derivative</span><br><span class="line">----                 ----------</span><br><span class="line">2015-08-18T00:12:00Z -0.00649999999999995</span><br><span class="line">2015-08-18T00:24:00Z -0.015499999999999847</span><br></pre></td></tr></table></figure>

<p>这个计算其实是先根据GROUP BY time求平均值，然后对这个平均值再做变化比的计算。因为数据是按12分钟分组的，而变化比的unit是6分钟，所以差值除以2(12&#x2F;6)才得到变化比。如第一个值是 <code>(7.8245-8.0625)/2 = -0.1190</code>。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt; SELECT mean(&quot;water_level&quot;) FROM &quot;h2o_feet&quot; WHERE time &gt;= &#x27;2015-08-18T00:00:00Z&#x27; AND time &lt;= &#x27;2015-08-18T00:30:00Z&#x27; group by time(12m), *</span><br><span class="line">name: h2o_feet</span><br><span class="line">tags: location=coyote_creek</span><br><span class="line">time                 mean</span><br><span class="line">----                 ----</span><br><span class="line">2015-08-18T00:00:00Z 8.0625</span><br><span class="line">2015-08-18T00:12:00Z 7.8245</span><br><span class="line">2015-08-18T00:24:00Z 7.5675</span><br><span class="line"></span><br><span class="line">name: h2o_feet</span><br><span class="line">tags: location=santa_monica</span><br><span class="line">time                 mean</span><br><span class="line">----                 ----</span><br><span class="line">2015-08-18T00:00:00Z 2.09</span><br><span class="line">2015-08-18T00:12:00Z 2.077</span><br><span class="line">2015-08-18T00:24:00Z 2.0460000000000003</span><br></pre></td></tr></table></figure>

<p><code>NON_NEGATIVE_DERIVATIVE</code>与<code>DERIVATIVE</code>不同的是它只返回的是非负的变化比:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt; SELECT DERIVATIVE(mean(&quot;water_level&quot;), 6m) FROM &quot;h2o_feet&quot; WHERE location=&#x27;santa_monica&#x27; AND time &gt;= &#x27;2015-08-18T00:00:00Z&#x27; AND time &lt;= &#x27;2015-08-18T00:30:00Z&#x27; group by time(6m), *</span><br><span class="line">name: h2o_feet</span><br><span class="line">tags: location=santa_monica</span><br><span class="line">time                 derivative</span><br><span class="line">----                 ----------</span><br><span class="line">2015-08-18T00:06:00Z 0.052000000000000046</span><br><span class="line">2015-08-18T00:12:00Z -0.08800000000000008</span><br><span class="line">2015-08-18T00:18:00Z 0.09799999999999986</span><br><span class="line">2015-08-18T00:24:00Z -0.08499999999999996</span><br><span class="line">2015-08-18T00:30:00Z 0.010000000000000231</span><br><span class="line"></span><br><span class="line">&gt; SELECT NON_NEGATIVE_DERIVATIVE(mean(&quot;water_level&quot;), 6m) FROM &quot;h2o_feet&quot; WHERE location=&#x27;santa_monica&#x27; AND time &gt;= &#x27;2015-08-18T00:00:00Z&#x27; AND time &lt;= &#x27;2015-08-18T00:30:00Z&#x27; group by time(6m), *</span><br><span class="line">name: h2o_feet</span><br><span class="line">tags: location=santa_monica</span><br><span class="line">time                 non_negative_derivative</span><br><span class="line">----                 -----------------------</span><br><span class="line">2015-08-18T00:06:00Z 0.052000000000000046</span><br><span class="line">2015-08-18T00:18:00Z 0.09799999999999986</span><br><span class="line">2015-08-18T00:30:00Z 0.010000000000000231</span><br></pre></td></tr></table></figure>

<h2 id="4-1-基本语法"><a href="#4-1-基本语法" class="headerlink" title="4.1 基本语法"></a>4.1 基本语法</h2><p>连续查询(CONTINUOUS QUERY，简写为CQ)是指定时自动在实时数据上进行的InfluxQL查询，查询结果可以存储到指定的measurement中。基本语法格式如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CREATE CONTINUOUS QUERY &lt;cq_name&gt; ON &lt;database_name&gt;</span><br><span class="line">BEGIN</span><br><span class="line">  &lt;cq_query&gt;</span><br><span class="line">END</span><br><span class="line"></span><br><span class="line">cq_query格式：</span><br><span class="line">SELECT &lt;function[s]&gt; INTO &lt;destination_measurement&gt; FROM &lt;measurement&gt; [WHERE &lt;stuff&gt;] GROUP BY time(&lt;interval&gt;)[,&lt;tag_key[s]&gt;]</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>CQ操作的是实时数据，它使用本地服务器的时间戳、GROUP BY time()时间间隔以及InfluxDB预先设置好的时间范围来确定什么时候开始查询以及查询覆盖的时间范围。注意CQ语句里面的WHERE条件是没有时间范围的，因为CQ会根据<code>GROUP BY time()</code>自动确定时间范围。</p>
<p>CQ执行的时间间隔和<code>GROUP BY time()</code>的时间间隔一样，它在InfluxDB预先设置的时间范围的起始时刻执行。如果<code>GROUP BY time(1h)</code>，则单次查询的时间范围为 <code>now()-GROUP BY time(1h)</code>到 <code>now()</code>，也就是说，如果当前时间为17点，这次查询的时间范围为 16:00到16:59.99999。</p>
<p>下面看几个示例，示例数据如下，这是数据库<code>transportation</code>中名为<code>bus_data</code>的measurement，每15分钟统计一次乘客数和投诉数。数据文件<code>bus_data.txt</code>如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># DDL</span><br><span class="line">CREATE DATABASE transportation</span><br><span class="line"></span><br><span class="line"># DML</span><br><span class="line"># CONTEXT-DATABASE: transportation </span><br><span class="line"></span><br><span class="line">bus_data,complaints=9 passengers=5 1472367600</span><br><span class="line">bus_data,complaints=9 passengers=8 1472368500</span><br><span class="line">bus_data,complaints=9 passengers=8 1472369400</span><br><span class="line">bus_data,complaints=9 passengers=7 1472370300</span><br><span class="line">bus_data,complaints=9 passengers=8 1472371200</span><br><span class="line">bus_data,complaints=7 passengers=15 1472372100</span><br><span class="line">bus_data,complaints=7 passengers=15 1472373000</span><br><span class="line">bus_data,complaints=7 passengers=17 1472373900</span><br><span class="line">bus_data,complaints=7 passengers=20 1472374800</span><br></pre></td></tr></table></figure>

<p>导入数据，命令如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@f216e9be15bf:/# influx -import -path=bus_data.txt -precision=s</span><br><span class="line">root@f216e9be15bf:/# influx -precision=rfc3339 -database=transportation</span><br><span class="line">Connected to http://localhost:8086 version 1.3.5</span><br><span class="line">InfluxDB shell version: 1.3.5</span><br><span class="line">&gt; select * from bus_data</span><br><span class="line">name: bus_data</span><br><span class="line">time                 complaints passengers</span><br><span class="line">----                 ---------- ----------</span><br><span class="line">2016-08-28T07:00:00Z 9          5</span><br><span class="line">2016-08-28T07:15:00Z 9          8</span><br><span class="line">2016-08-28T07:30:00Z 9          8</span><br><span class="line">2016-08-28T07:45:00Z 9          7</span><br><span class="line">2016-08-28T08:00:00Z 9          8</span><br><span class="line">2016-08-28T08:15:00Z 7          15</span><br><span class="line">2016-08-28T08:30:00Z 7          15</span><br><span class="line">2016-08-28T08:45:00Z 7          17</span><br><span class="line">2016-08-28T09:00:00Z 7          20</span><br></pre></td></tr></table></figure>

<h3 id="示例1-自动缩小取样存储到新的measurement中"><a href="#示例1-自动缩小取样存储到新的measurement中" class="headerlink" title="示例1 自动缩小取样存储到新的measurement中"></a>示例1 自动缩小取样存储到新的measurement中</h3><p>对单个字段自动缩小取样并存储到新的measurement中。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CREATE CONTINUOUS QUERY &quot;cq_basic&quot; ON &quot;transportation&quot;</span><br><span class="line">BEGIN</span><br><span class="line">  SELECT mean(&quot;passengers&quot;) INTO &quot;average_passengers&quot; FROM &quot;bus_data&quot; GROUP BY time(1h)</span><br><span class="line">END</span><br></pre></td></tr></table></figure>

<p>这个CQ的意思就是对<code>bus_data</code>每小时自动计算取样数据的平均乘客数并存储到 <code>average_passengers</code>中。那么在2016-08-28这天早上会执行如下流程：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">At 8:00 cq_basic 执行查询，查询时间范围 time &gt;= &#x27;7:00&#x27; AND time &lt; &#x27;08:00&#x27;.</span><br><span class="line">cq_basic写入一条记录到 average_passengers:</span><br><span class="line">name: average_passengers</span><br><span class="line">------------------------</span><br><span class="line">time                   mean</span><br><span class="line">2016-08-28T07:00:00Z   7</span><br><span class="line">At 9:00 cq_basic 执行查询，查询时间范围 time &gt;= &#x27;8:00&#x27; AND time &lt; &#x27;9:00&#x27;.</span><br><span class="line">cq_basic写入一条记录到 average_passengers:</span><br><span class="line">name: average_passengers</span><br><span class="line">------------------------</span><br><span class="line">time                   mean</span><br><span class="line">2016-08-28T08:00:00Z   13.75</span><br><span class="line"></span><br><span class="line"># Results</span><br><span class="line">&gt; SELECT * FROM &quot;average_passengers&quot;</span><br><span class="line">name: average_passengers</span><br><span class="line">------------------------</span><br><span class="line">time                   mean</span><br><span class="line">2016-08-28T07:00:00Z   7</span><br><span class="line">2016-08-28T08:00:00Z   13.75</span><br></pre></td></tr></table></figure>

<h3 id="示例2-自动缩小取样并存储到新的保留策略（Retention-Policy）中"><a href="#示例2-自动缩小取样并存储到新的保留策略（Retention-Policy）中" class="headerlink" title="示例2 自动缩小取样并存储到新的保留策略（Retention Policy）中"></a>示例2 自动缩小取样并存储到新的保留策略（Retention Policy）中</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CREATE CONTINUOUS QUERY &quot;cq_basic_rp&quot; ON &quot;transportation&quot;</span><br><span class="line">BEGIN</span><br><span class="line">  SELECT mean(&quot;passengers&quot;) INTO &quot;transportation&quot;.&quot;three_weeks&quot;.&quot;average_passengers&quot; FROM &quot;bus_data&quot; GROUP BY time(1h)</span><br><span class="line">END</span><br></pre></td></tr></table></figure>

<p>与示例1类似，不同的是保留的策略不是<code>autogen</code>，而是改成了<code>three_weeks</code>(创建保留策略语法 <code>CREATE RETENTION POLICY &quot;three_weeks&quot; ON &quot;transportation&quot; DURATION 3w REPLICATION 1</code>)。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt; SELECT * FROM &quot;transportation&quot;.&quot;three_weeks&quot;.&quot;average_passengers&quot;</span><br><span class="line">name: average_passengers</span><br><span class="line">------------------------</span><br><span class="line">time                   mean</span><br><span class="line">2016-08-28T07:00:00Z   7</span><br><span class="line">2016-08-28T08:00:00Z   13.75</span><br></pre></td></tr></table></figure>

<h3 id="示例3-使用后向引用-backreferencing-自动缩小取样并存储到新的数据库中"><a href="#示例3-使用后向引用-backreferencing-自动缩小取样并存储到新的数据库中" class="headerlink" title="示例3 使用后向引用(backreferencing)自动缩小取样并存储到新的数据库中"></a>示例3 使用后向引用(backreferencing)自动缩小取样并存储到新的数据库中</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CREATE CONTINUOUS QUERY &quot;cq_basic_br&quot; ON &quot;transportation&quot;</span><br><span class="line">BEGIN</span><br><span class="line">  SELECT mean(*) INTO &quot;downsampled_transportation&quot;.&quot;autogen&quot;.:MEASUREMENT FROM /.*/ GROUP BY time(30m),*</span><br><span class="line">END</span><br></pre></td></tr></table></figure>

<p>使用后向引用语法自动缩小取样并存储到新的数据库中。语法 <code>:MEASUREMENT</code> 用来指代后面的表，而 <code>/.*/</code>则是分别查询所有的表。这句CQ的含义就是每30分钟自动查询<code>transportation</code>的所有表(这里只有bus_data一个表)，并将30分钟内数字字段(passengers和complaints)求平均值存储到新的数据库 <code>downsampled_transportation</code>中。</p>
<p>最终结果如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt; SELECT * FROM &quot;downsampled_transportation.&quot;autogen&quot;.&quot;bus_data&quot;</span><br><span class="line">name: bus_data</span><br><span class="line">--------------</span><br><span class="line">time                   mean_complaints   mean_passengers</span><br><span class="line">2016-08-28T07:00:00Z   9                 6.5</span><br><span class="line">2016-08-28T07:30:00Z   9                 7.5</span><br><span class="line">2016-08-28T08:00:00Z   8                 11.5</span><br><span class="line">2016-08-28T08:30:00Z   7                 16</span><br></pre></td></tr></table></figure>

<h3 id="示例4-自动缩小取样以及配置CQ的时间范围"><a href="#示例4-自动缩小取样以及配置CQ的时间范围" class="headerlink" title="示例4 自动缩小取样以及配置CQ的时间范围"></a>示例4 自动缩小取样以及配置CQ的时间范围</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CREATE CONTINUOUS QUERY &quot;cq_basic_offset&quot; ON &quot;transportation&quot;</span><br><span class="line">BEGIN</span><br><span class="line">  SELECT mean(&quot;passengers&quot;) INTO &quot;average_passengers&quot; FROM &quot;bus_data&quot; GROUP BY time(1h,15m)</span><br><span class="line">END</span><br></pre></td></tr></table></figure>

<p>与前面几个示例不同的是，这里的<code>GROUP BY time(1h, 15m)</code>指定了一个时间偏移，也就是说 <code>cq_basic_offset</code>执行的时间不再是整点，而是往后偏移15分钟。执行流程如下:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">At 8:15 cq_basic_offset 执行查询的时间范围 time &gt;= &#x27;7:15&#x27; AND time &lt; &#x27;8:15&#x27;.</span><br><span class="line">name: average_passengers</span><br><span class="line">------------------------</span><br><span class="line">time                   mean</span><br><span class="line">2016-08-28T07:15:00Z   7.75</span><br><span class="line">At 9:15 cq_basic_offset 执行查询的时间范围 time &gt;= &#x27;8:15&#x27; AND time &lt; &#x27;9:15&#x27;.</span><br><span class="line">name: average_passengers</span><br><span class="line">------------------------</span><br><span class="line">time                   mean</span><br><span class="line">2016-08-28T08:15:00Z   16.75</span><br></pre></td></tr></table></figure>

<p>最终结果:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt; SELECT * FROM &quot;average_passengers&quot;</span><br><span class="line">name: average_passengers</span><br><span class="line">------------------------</span><br><span class="line">time                   mean</span><br><span class="line">2016-08-28T07:15:00Z   7.75</span><br><span class="line">2016-08-28T08:15:00Z   16.75</span><br></pre></td></tr></table></figure>

<h2 id="4-2-高级语法"><a href="#4-2-高级语法" class="headerlink" title="4.2 高级语法"></a>4.2 高级语法</h2><p>InfluxDB连续查询的高级语法如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CREATE CONTINUOUS QUERY &lt;cq_name&gt; ON &lt;database_name&gt;</span><br><span class="line">RESAMPLE EVERY &lt;interval&gt; FOR &lt;interval&gt;</span><br><span class="line">BEGIN</span><br><span class="line">  &lt;cq_query&gt;</span><br><span class="line">END</span><br></pre></td></tr></table></figure>

<p>与基本语法不同的是，多了<code>RESAMPLE</code>关键字。高级语法里CQ的执行时间和查询时间范围则与RESAMPLE里面的两个interval有关系。</p>
<p>高级语法中CQ以EVERY interval的时间间隔执行，执行时查询的时间范围则是FOR interval来确定。如果FOR interval为2h，当前时间为17:00，则查询的时间范围为<code>15:00-16:59.999999</code>。<strong>RESAMPLE的EVERY和FOR两个关键字可以只有一个</strong>。</p>
<p>示例的数据表如下，比之前的多了几条记录为了示例3和示例4的测试:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">name: bus_data</span><br><span class="line">--------------</span><br><span class="line">time                   passengers</span><br><span class="line">2016-08-28T06:30:00Z   2</span><br><span class="line">2016-08-28T06:45:00Z   4</span><br><span class="line">2016-08-28T07:00:00Z   5</span><br><span class="line">2016-08-28T07:15:00Z   8</span><br><span class="line">2016-08-28T07:30:00Z   8</span><br><span class="line">2016-08-28T07:45:00Z   7</span><br><span class="line">2016-08-28T08:00:00Z   8</span><br><span class="line">2016-08-28T08:15:00Z   15</span><br><span class="line">2016-08-28T08:30:00Z   15</span><br><span class="line">2016-08-28T08:45:00Z   17</span><br><span class="line">2016-08-28T09:00:00Z   20</span><br></pre></td></tr></table></figure>

<h3 id="示例1-只配置执行时间间隔"><a href="#示例1-只配置执行时间间隔" class="headerlink" title="示例1 只配置执行时间间隔"></a>示例1 只配置执行时间间隔</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CREATE CONTINUOUS QUERY &quot;cq_advanced_every&quot; ON &quot;transportation&quot;</span><br><span class="line">RESAMPLE EVERY 30m</span><br><span class="line">BEGIN</span><br><span class="line">  SELECT mean(&quot;passengers&quot;) INTO &quot;average_passengers&quot; FROM &quot;bus_data&quot; GROUP BY time(1h)</span><br><span class="line">END</span><br></pre></td></tr></table></figure>

<p>这里配置了30分钟执行一次CQ，没有指定FOR interval，于是查询的时间范围还是<code>GROUP BY time(1h)</code>指定的一个小时，执行流程如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">At 8:00, cq_advanced_every 执行时间范围 time &gt;= &#x27;7:00&#x27; AND time &lt; &#x27;8:00&#x27;.</span><br><span class="line">name: average_passengers</span><br><span class="line">------------------------</span><br><span class="line">time                   mean</span><br><span class="line">2016-08-28T07:00:00Z   7</span><br><span class="line">At 8:30, cq_advanced_every 执行时间范围 time &gt;= &#x27;8:00&#x27; AND time &lt; &#x27;9:00&#x27;.</span><br><span class="line">name: average_passengers</span><br><span class="line">------------------------</span><br><span class="line">time                   mean</span><br><span class="line">2016-08-28T08:00:00Z   12.6667</span><br><span class="line">At 9:00, cq_advanced_every 执行时间范围 time &gt;= &#x27;8:00&#x27; AND time &lt; &#x27;9:00&#x27;.</span><br><span class="line">name: average_passengers</span><br><span class="line">------------------------</span><br><span class="line">time                   mean</span><br><span class="line">2016-08-28T08:00:00Z   13.75</span><br></pre></td></tr></table></figure>

<p>需要注意的是，这里的 8点到9点这个区间执行了两次，第一次执行时时8:30，平均值是 <code>(8+15+15）/ 3 = 12.6667</code>，而第二次执行时间是9:00，平均值是 <code>(8+15+15+17) / 4=13.75</code>，而且最后第二个结果覆盖了第一个结果。<a href="https://link.jianshu.com/?t=https://docs.influxdata.com/influxdb/v1.3/troubleshooting/frequently-asked-questions/%23how-does-influxdb-handle-duplicate-points">InfluxDB如何处理重复的记录可以参见这个文档</a>。</p>
<p>最终结果：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt; SELECT * FROM &quot;average_passengers&quot;</span><br><span class="line">name: average_passengers</span><br><span class="line">------------------------</span><br><span class="line">time                   mean</span><br><span class="line">2016-08-28T07:00:00Z   7</span><br><span class="line">2016-08-28T08:00:00Z   13.75</span><br></pre></td></tr></table></figure>

<h3 id="示例2-只配置查询时间范围"><a href="#示例2-只配置查询时间范围" class="headerlink" title="示例2 只配置查询时间范围"></a>示例2 只配置查询时间范围</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CREATE CONTINUOUS QUERY &quot;cq_advanced_for&quot; ON &quot;transportation&quot;</span><br><span class="line">RESAMPLE FOR 1h</span><br><span class="line">BEGIN</span><br><span class="line">  SELECT mean(&quot;passengers&quot;) INTO &quot;average_passengers&quot; FROM &quot;bus_data&quot; GROUP BY time(30m)</span><br><span class="line">END</span><br></pre></td></tr></table></figure>

<p>只配置了时间范围，而没有配置EVERY interval。这样，执行的时间间隔与<code>GROUP BY time(30m)</code>一样为30分钟，而查询的时间范围为1小时，由于是按30分钟分组，所以每次会写入两条记录。执行流程如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">At 8:00 cq_advanced_for 查询时间范围：time &gt;= &#x27;7:00&#x27; AND time &lt; &#x27;8:00&#x27;.</span><br><span class="line">写入两条记录。</span><br><span class="line">name: average_passengers</span><br><span class="line">------------------------</span><br><span class="line">time                   mean</span><br><span class="line">2016-08-28T07:00:00Z   6.5</span><br><span class="line">2016-08-28T07:30:00Z   7.5</span><br><span class="line">At 8:30 cq_advanced_for 查询时间范围：time &gt;= &#x27;7:30&#x27; AND time &lt; &#x27;8:30&#x27;.</span><br><span class="line">写入两条记录。</span><br><span class="line">name: average_passengers</span><br><span class="line">------------------------</span><br><span class="line">time                   mean</span><br><span class="line">2016-08-28T07:30:00Z   7.5</span><br><span class="line">2016-08-28T08:00:00Z   11.5</span><br><span class="line">At 9:00 cq_advanced_for 查询时间范围：time &gt;= &#x27;8:00&#x27; AND time &lt; &#x27;9:00&#x27;.</span><br><span class="line">写入两条记录。</span><br><span class="line">name: average_passengers</span><br><span class="line">------------------------</span><br><span class="line">time                   mean</span><br><span class="line">2016-08-28T08:00:00Z   11.5</span><br><span class="line">2016-08-28T08:30:00Z   16</span><br></pre></td></tr></table></figure>

<p>需要注意的是，<code>cq_advanced_for</code>每次写入了两条记录，重复的记录会被覆盖。</p>
<p>最终结果：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt; SELECT * FROM &quot;average_passengers&quot;</span><br><span class="line">name: average_passengers</span><br><span class="line">------------------------</span><br><span class="line">time                   mean</span><br><span class="line">2016-08-28T07:00:00Z   6.5</span><br><span class="line">2016-08-28T07:30:00Z   7.5</span><br><span class="line">2016-08-28T08:00:00Z   11.5</span><br><span class="line">2016-08-28T08:30:00Z   16</span><br></pre></td></tr></table></figure>

<h3 id="示例3-同时配置执行时间间隔和查询时间范围"><a href="#示例3-同时配置执行时间间隔和查询时间范围" class="headerlink" title="示例3 同时配置执行时间间隔和查询时间范围"></a>示例3 同时配置执行时间间隔和查询时间范围</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CREATE CONTINUOUS QUERY &quot;cq_advanced_every_for&quot; ON &quot;transportation&quot;</span><br><span class="line">RESAMPLE EVERY 1h FOR 90m</span><br><span class="line">BEGIN</span><br><span class="line">  SELECT mean(&quot;passengers&quot;) INTO &quot;average_passengers&quot; FROM &quot;bus_data&quot; GROUP BY time(30m)</span><br><span class="line">END</span><br></pre></td></tr></table></figure>

<p>这里配置了执行间隔为1小时，而查询范围90分钟，最后分组是30分钟，每次插入了三条记录。执行流程如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">At 8:00 cq_advanced_every_for 查询时间范围 time &gt;= &#x27;6:30&#x27; AND time &lt; &#x27;8:00&#x27;.</span><br><span class="line">插入三条记录</span><br><span class="line">name: average_passengers</span><br><span class="line">------------------------</span><br><span class="line">time                   mean</span><br><span class="line">2016-08-28T06:30:00Z   3</span><br><span class="line">2016-08-28T07:00:00Z   6.5</span><br><span class="line">2016-08-28T07:30:00Z   7.5</span><br><span class="line">At 9:00 cq_advanced_every_for 查询时间范围 time &gt;= &#x27;7:30&#x27; AND time &lt; &#x27;9:00&#x27;.</span><br><span class="line">插入三条记录</span><br><span class="line">name: average_passengers</span><br><span class="line">------------------------</span><br><span class="line">time                   mean</span><br><span class="line">2016-08-28T07:30:00Z   7.5</span><br><span class="line">2016-08-28T08:00:00Z   11.5</span><br><span class="line">2016-08-28T08:30:00Z   16</span><br></pre></td></tr></table></figure>

<p>最终结果：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt; SELECT * FROM &quot;average_passengers&quot;</span><br><span class="line">name: average_passengers</span><br><span class="line">------------------------</span><br><span class="line">time                   mean</span><br><span class="line">2016-08-28T06:30:00Z   3</span><br><span class="line">2016-08-28T07:00:00Z   6.5</span><br><span class="line">2016-08-28T07:30:00Z   7.5</span><br><span class="line">2016-08-28T08:00:00Z   11.5</span><br><span class="line">2016-08-28T08:30:00Z   16</span><br></pre></td></tr></table></figure>

<h3 id="示例4-配置查询时间范围和FILL填充"><a href="#示例4-配置查询时间范围和FILL填充" class="headerlink" title="示例4 配置查询时间范围和FILL填充"></a>示例4 配置查询时间范围和FILL填充</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CREATE CONTINUOUS QUERY &quot;cq_advanced_for_fill&quot; ON &quot;transportation&quot;</span><br><span class="line">RESAMPLE FOR 2h</span><br><span class="line">BEGIN</span><br><span class="line">  SELECT mean(&quot;passengers&quot;) INTO &quot;average_passengers&quot; FROM &quot;bus_data&quot; GROUP BY time(1h) fill(1000)</span><br><span class="line">END</span><br></pre></td></tr></table></figure>

<p>在前面值配置查询时间范围的基础上，加上FILL填充空的记录。执行流程如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">At 6:00, cq_advanced_for_fill 查询时间范围：time &gt;= &#x27;4:00&#x27; AND time &lt; &#x27;6:00&#x27;，没有数据，不填充。</span><br><span class="line"></span><br><span class="line">At 7:00, cq_advanced_for_fill 查询时间范围：time &gt;= &#x27;5:00&#x27; AND time &lt; &#x27;7:00&#x27;. 写入两条记录，没有数据的时间点填充1000。</span><br><span class="line">------------------------</span><br><span class="line">time                   mean</span><br><span class="line">2016-08-28T05:00:00Z   1000          &lt;------ fill(1000)</span><br><span class="line">2016-08-28T06:00:00Z   3             &lt;------ average of 2 and 4</span><br><span class="line"></span><br><span class="line">[…] At 11:00, cq_advanced_for_fill 查询时间范围：time &gt;= &#x27;9:00&#x27; AND time &lt; &#x27;11:00&#x27;.写入两条记录，没有数据的点填充1000。</span><br><span class="line">name: average_passengers</span><br><span class="line">------------------------</span><br><span class="line">2016-08-28T09:00:00Z   20            &lt;------ average of 20</span><br><span class="line">2016-08-28T10:00:00Z   1000          &lt;------ fill(1000)     </span><br><span class="line"></span><br><span class="line">At 12:00, cq_advanced_for_fill 查询时间范围：time &gt;= &#x27;10:00&#x27; AND time &lt; &#x27;12:00&#x27;。没有数据，不填充。</span><br></pre></td></tr></table></figure>

<p>最终结果:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt; SELECT * FROM &quot;average_passengers&quot;</span><br><span class="line">name: average_passengers</span><br><span class="line">------------------------</span><br><span class="line">time                   mean</span><br><span class="line">2016-08-28T05:00:00Z   1000</span><br><span class="line">2016-08-28T06:00:00Z   3</span><br><span class="line">2016-08-28T07:00:00Z   7</span><br><span class="line">2016-08-28T08:00:00Z   13.75</span><br><span class="line">2016-08-28T09:00:00Z   20</span><br><span class="line">2016-08-28T10:00:00Z   1000</span><br></pre></td></tr></table></figure>

<ul>
<li><a href="https://link.jianshu.com/?t=https://docs.influxdata.com/influxdb/v1.3/">https://docs.influxdata.com/influxdb/v1.3/</a></li>
<li><a href="https://link.jianshu.com/?t=https://zh.wikipedia.org/wiki/%25E6%25A8%2599%25E6%25BA%2596%25E5%25B7%25AE">https://zh.wikipedia.org/wiki/%E6%A8%99%E6%BA%96%E5%B7%AE</a></li>
</ul>
]]></content>
      <categories>
        <category>数据库</category>
        <category>InfluxDB</category>
      </categories>
      <tags>
        <tag>时序数据库</tag>
        <tag>InfluxDB</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL权限管理</title>
    <url>/2015/01/01/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL/MySQL%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/</url>
    <content><![CDATA[<p><a href="http://c.biancheng.net/view/7252.html">MySQL root修改普通用户密码</a></p>
<p><a href="http://c.biancheng.net/view/7502.html">MySQL GRANT：用户授权</a></p>
<p><a href="http://c.biancheng.net/view/7498.html">MySQL查看用户权限</a></p>
<p><a href="http://c.biancheng.net/view/2611.html">MySQL修改用户（RENAME USER）</a></p>
<p><a href="http://c.biancheng.net/view/7490.html">MySQL创建用户（3种方式）</a></p>
<p><a href="https://blog.csdn.net/zhazhagu/article/details/81064406">MySQL允许root远程登录_小gu的博客-CSDN博客_mysql允许root远程连接</a></p>
]]></content>
      <categories>
        <category>数据库</category>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
        <tag>权限</tag>
      </tags>
  </entry>
  <entry>
    <title>SQL Server设置开启远程连接（sa配置）</title>
    <url>/2018/02/10/%E6%95%B0%E6%8D%AE%E5%BA%93/SQL%20Server/SQL%20Server%E8%AE%BE%E7%BD%AE%E5%BC%80%E5%90%AF%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%EF%BC%88sa%E9%85%8D%E7%BD%AE%EF%BC%89/</url>
    <content><![CDATA[<p>本文方案适用于Microsoft Sql Server 2008&#x2F;2012&#x2F;2012 r2&#x2F;2014版本，以下简称MSSQLSERVER。</p>
<p>MSSQL默认是不允许远程连接，并且禁用sa账户的。如果想要在本地用SSMS连接远程服务器上的MSSQLSERVER，需要做两个部分的配置：</p>
<p>1. SQL SERVER MANAGEMENT STUDIO(SSMS)</p>
<p>2. SQL SERVER配置管理器（SQL SERVER CONFIGURATION MANAGER - SSCM）</p>
<p>并且需要注意的是，有些地方如果没有生效，请重启一下sql server（可以从SSCM里，也可以从系统服务中找），下面是详细的步骤：</p>
<p>STEP1. 打开SSMS，使用Windows身份连接数据库，登录后，右键选择“属性”</p>


<p>STEP 2. 选择“安全性”，选中SQL SERVER和Windows身份验证模式</p>


<p>STEP 3. 再选择“连接”，勾选“允许远程连接此服务器”，然后点击“确定”按钮。</p>




<p>STEP 4. 展开“安全性” -》登录名 -》sa，右键选择“属性”</p>


<p>STEP 5. 在“常规”中，改好你自己的密码，这是你sa登录的密码。</p>


<p>STEP 6. 在“状态”中，启用sa登录，点击“确定”按钮</p>


<p>STEP 7. 右键数据库server，选择“方面”</p>


<p>STEP 8. 选择“服务器配置”，找到RemoteAccessEnabled，设置为“True”</p>


<p>STEP 9. 重新启动SQL SERVER服务，退出当前的连接，这时候应该可以用sa进行登录了。</p>




<p>STEP 10. 配置SSCM，选中左侧的“SQL SERVER服务”，确保右侧的“SQL SERVER”以及“SQL SERVER BROWER”正在运行，选择“网络配置”，双击TCP&#x2F;IP，确保状态为“启用”</p>


<p>STEP 11. 在Client里也确保TCP&#x2F;IP是启用的，默认的端口都是1433，可以自己修改，非默认端口需要在连接字符串里显式指明。</p>


<p>STEP 12. 到这里再次重启SQL SERVER服务，应该就可以用了。不过还不能用，确认防火墙端口设置，并把SQL SERVER安装目录下，C:\Program Files\Microsoft SQL Server\MSSQL10.SQLEXPRESS\MSSQL\Binn\sqlservr.exe添加到允许的列表中。</p>
]]></content>
      <categories>
        <category>数据库</category>
        <category>SQL Server</category>
      </categories>
  </entry>
</search>
